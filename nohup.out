/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-0bks67dy
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-0bks67dy
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/bob.json
iter 1000
batch 4
spp 1
layers 1
train_res [512, 512]
display_res [512, 512]
texture_res [1024, 1024]
display_interval 0
save_interval 100
learning_rate [0.03, 0.003]
min_roughness 0.08
custom_mip False
random_textures True
background white
loss logl1
out_dir out/bob
ref_mesh data/bob/bob_tri.obj
base_mesh None
validate False
isosurface dmtet
mtl_override None
dmtet_grid 64
mesh_scale 2.1
env_scale 2.0
envmap data/irrmaps/aerodynamics_workshop_2k.hdr
display None
camera_space_light False
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 10000.0
pre_load True
kd_min [0.0, 0.0, 0.0, 0.0]
kd_max [1.0, 1.0, 1.0, 1.0]
ks_min [0, 0.25, 0]
ks_max [1.0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetMesh: ref mesh has 10688 triangles and 5344 vertices
---> WARNING: Picked a texture resolution lower than the reference mesh [1024, 1024] < [2048, 2048]
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
DatasetMesh: ref mesh has 10688 triangles and 5344 vertices
---> WARNING: Picked a texture resolution lower than the reference mesh [1024, 1024] < [2048, 2048]
Encoder output: 32 dims
iter=    0, img_loss=0.446139, reg_loss=0.334127, lr=0.02999, time=283.0 ms, rem=4.72 m
iter=   10, img_loss=0.179726, reg_loss=0.321820, lr=0.02985, time=237.3 ms, rem=3.91 m
iter=   20, img_loss=0.069364, reg_loss=0.298328, lr=0.02971, time=237.0 ms, rem=3.87 m
iter=   30, img_loss=0.048958, reg_loss=0.272578, lr=0.02957, time=238.9 ms, rem=3.86 m
iter=   40, img_loss=0.037893, reg_loss=0.257660, lr=0.02944, time=238.5 ms, rem=3.82 m
iter=   50, img_loss=0.031473, reg_loss=0.245279, lr=0.02930, time=238.0 ms, rem=3.77 m
iter=   60, img_loss=0.025149, reg_loss=0.232983, lr=0.02917, time=239.8 ms, rem=3.76 m
iter=   70, img_loss=0.022000, reg_loss=0.221147, lr=0.02903, time=238.8 ms, rem=3.70 m
iter=   80, img_loss=0.021070, reg_loss=0.209792, lr=0.02890, time=238.8 ms, rem=3.66 m
iter=   90, img_loss=0.019756, reg_loss=0.198567, lr=0.02877, time=237.3 ms, rem=3.60 m
iter=  100, img_loss=0.016987, reg_loss=0.187477, lr=0.02864, time=239.1 ms, rem=3.59 m
iter=  110, img_loss=0.015727, reg_loss=0.176329, lr=0.02851, time=238.4 ms, rem=3.54 m
iter=  120, img_loss=0.014822, reg_loss=0.165215, lr=0.02837, time=239.0 ms, rem=3.51 m
iter=  130, img_loss=0.014239, reg_loss=0.154134, lr=0.02824, time=238.9 ms, rem=3.46 m
iter=  140, img_loss=0.014162, reg_loss=0.142873, lr=0.02811, time=239.6 ms, rem=3.43 m
iter=  150, img_loss=0.013291, reg_loss=0.131702, lr=0.02798, time=240.4 ms, rem=3.41 m
iter=  160, img_loss=0.012655, reg_loss=0.120624, lr=0.02786, time=238.5 ms, rem=3.34 m
iter=  170, img_loss=0.012138, reg_loss=0.109458, lr=0.02773, time=238.2 ms, rem=3.29 m
iter=  180, img_loss=0.011595, reg_loss=0.098365, lr=0.02760, time=238.3 ms, rem=3.26 m
iter=  190, img_loss=0.010430, reg_loss=0.087226, lr=0.02747, time=239.4 ms, rem=3.23 m
iter=  200, img_loss=0.010039, reg_loss=0.076148, lr=0.02735, time=240.1 ms, rem=3.20 m
iter=  210, img_loss=0.009774, reg_loss=0.065029, lr=0.02722, time=239.3 ms, rem=3.15 m
iter=  220, img_loss=0.009542, reg_loss=0.054023, lr=0.02710, time=238.6 ms, rem=3.10 m
iter=  230, img_loss=0.008659, reg_loss=0.042982, lr=0.02697, time=239.7 ms, rem=3.08 m
iter=  240, img_loss=0.008691, reg_loss=0.031959, lr=0.02685, time=239.2 ms, rem=3.03 m
iter=  250, img_loss=0.007837, reg_loss=0.020868, lr=0.02673, time=239.6 ms, rem=3.00 m
iter=  260, img_loss=0.007941, reg_loss=0.015912, lr=0.02660, time=238.6 ms, rem=2.94 m
iter=  270, img_loss=0.007448, reg_loss=0.015919, lr=0.02648, time=240.0 ms, rem=2.92 m
iter=  280, img_loss=0.006948, reg_loss=0.015936, lr=0.02636, time=239.3 ms, rem=2.87 m
iter=  290, img_loss=0.006924, reg_loss=0.015933, lr=0.02624, time=239.9 ms, rem=2.84 m
iter=  300, img_loss=0.006775, reg_loss=0.015910, lr=0.02612, time=239.9 ms, rem=2.80 m
iter=  310, img_loss=0.007078, reg_loss=0.015906, lr=0.02600, time=238.9 ms, rem=2.75 m
iter=  320, img_loss=0.006886, reg_loss=0.015904, lr=0.02588, time=239.0 ms, rem=2.71 m
iter=  330, img_loss=0.006756, reg_loss=0.015896, lr=0.02576, time=238.1 ms, rem=2.66 m
iter=  340, img_loss=0.006875, reg_loss=0.015876, lr=0.02564, time=239.2 ms, rem=2.63 m
iter=  350, img_loss=0.006441, reg_loss=0.015877, lr=0.02552, time=238.9 ms, rem=2.59 m
iter=  360, img_loss=0.006022, reg_loss=0.015854, lr=0.02541, time=239.6 ms, rem=2.56 m
iter=  370, img_loss=0.005771, reg_loss=0.015829, lr=0.02529, time=239.7 ms, rem=2.52 m
iter=  380, img_loss=0.005829, reg_loss=0.015807, lr=0.02517, time=239.1 ms, rem=2.47 m
iter=  390, img_loss=0.005838, reg_loss=0.015800, lr=0.02506, time=239.0 ms, rem=2.43 m
iter=  400, img_loss=0.005890, reg_loss=0.015777, lr=0.02494, time=239.2 ms, rem=2.39 m
iter=  410, img_loss=0.005499, reg_loss=0.015769, lr=0.02483, time=241.2 ms, rem=2.37 m
iter=  420, img_loss=0.005641, reg_loss=0.015765, lr=0.02471, time=239.0 ms, rem=2.31 m
iter=  430, img_loss=0.005281, reg_loss=0.015774, lr=0.02460, time=238.5 ms, rem=2.27 m
iter=  440, img_loss=0.005017, reg_loss=0.015735, lr=0.02449, time=241.2 ms, rem=2.25 m
iter=  450, img_loss=0.005166, reg_loss=0.015732, lr=0.02437, time=238.8 ms, rem=2.19 m
iter=  460, img_loss=0.005365, reg_loss=0.015740, lr=0.02426, time=239.2 ms, rem=2.15 m
iter=  470, img_loss=0.004873, reg_loss=0.015755, lr=0.02415, time=240.6 ms, rem=2.13 m
iter=  480, img_loss=0.005024, reg_loss=0.015746, lr=0.02404, time=239.3 ms, rem=2.07 m
iter=  490, img_loss=0.004800, reg_loss=0.015736, lr=0.02393, time=239.7 ms, rem=2.04 m
iter=  500, img_loss=0.004972, reg_loss=0.015732, lr=0.02382, time=239.9 ms, rem=2.00 m
iter=  510, img_loss=0.005256, reg_loss=0.015731, lr=0.02371, time=238.5 ms, rem=1.95 m
iter=  520, img_loss=0.005022, reg_loss=0.015733, lr=0.02360, time=238.6 ms, rem=1.91 m
iter=  530, img_loss=0.004688, reg_loss=0.015729, lr=0.02349, time=239.2 ms, rem=1.87 m
iter=  540, img_loss=0.004818, reg_loss=0.015734, lr=0.02338, time=238.9 ms, rem=1.83 m
iter=  550, img_loss=0.004693, reg_loss=0.015731, lr=0.02328, time=239.2 ms, rem=1.79 m
iter=  560, img_loss=0.004844, reg_loss=0.015727, lr=0.02317, time=238.5 ms, rem=1.75 m
iter=  570, img_loss=0.004542, reg_loss=0.015725, lr=0.02306, time=239.4 ms, rem=1.72 m
iter=  580, img_loss=0.004574, reg_loss=0.015724, lr=0.02296, time=239.7 ms, rem=1.68 m
iter=  590, img_loss=0.004508, reg_loss=0.015728, lr=0.02285, time=238.8 ms, rem=1.63 m
iter=  600, img_loss=0.004362, reg_loss=0.015715, lr=0.02275, time=239.0 ms, rem=1.59 m
iter=  610, img_loss=0.004283, reg_loss=0.015711, lr=0.02264, time=239.8 ms, rem=1.56 m
iter=  620, img_loss=0.004433, reg_loss=0.015719, lr=0.02254, time=238.4 ms, rem=1.51 m
iter=  630, img_loss=0.004218, reg_loss=0.015698, lr=0.02243, time=239.2 ms, rem=1.48 m
iter=  640, img_loss=0.004407, reg_loss=0.015712, lr=0.02233, time=238.4 ms, rem=1.43 m
iter=  650, img_loss=0.004358, reg_loss=0.015688, lr=0.02223, time=239.7 ms, rem=1.40 m
iter=  660, img_loss=0.004539, reg_loss=0.015702, lr=0.02213, time=239.1 ms, rem=1.35 m
iter=  670, img_loss=0.004259, reg_loss=0.015700, lr=0.02203, time=240.5 ms, rem=1.32 m
iter=  680, img_loss=0.004300, reg_loss=0.015702, lr=0.02192, time=238.5 ms, rem=1.27 m
iter=  690, img_loss=0.004147, reg_loss=0.015701, lr=0.02182, time=239.2 ms, rem=1.24 m
iter=  700, img_loss=0.004215, reg_loss=0.015694, lr=0.02172, time=239.5 ms, rem=1.20 m
iter=  710, img_loss=0.004219, reg_loss=0.015686, lr=0.02162, time=239.4 ms, rem=1.16 m
iter=  720, img_loss=0.004330, reg_loss=0.015687, lr=0.02152, time=239.2 ms, rem=1.12 m
iter=  730, img_loss=0.004338, reg_loss=0.015698, lr=0.02143, time=239.1 ms, rem=1.08 m
iter=  740, img_loss=0.004448, reg_loss=0.015695, lr=0.02133, time=238.9 ms, rem=1.04 m
iter=  750, img_loss=0.004224, reg_loss=0.015715, lr=0.02123, time=239.0 ms, rem=59.76 s
iter=  760, img_loss=0.004121, reg_loss=0.015713, lr=0.02113, time=239.2 ms, rem=57.42 s
iter=  770, img_loss=0.003970, reg_loss=0.015715, lr=0.02103, time=239.8 ms, rem=55.15 s
iter=  780, img_loss=0.004069, reg_loss=0.015715, lr=0.02094, time=238.9 ms, rem=52.57 s
iter=  790, img_loss=0.004104, reg_loss=0.015709, lr=0.02084, time=237.6 ms, rem=49.89 s
iter=  800, img_loss=0.003936, reg_loss=0.015696, lr=0.02075, time=239.1 ms, rem=47.82 s
iter=  810, img_loss=0.004059, reg_loss=0.015692, lr=0.02065, time=238.3 ms, rem=45.28 s
iter=  820, img_loss=0.004043, reg_loss=0.015673, lr=0.02056, time=240.5 ms, rem=43.30 s
iter=  830, img_loss=0.003982, reg_loss=0.015679, lr=0.02046, time=240.4 ms, rem=40.86 s
iter=  840, img_loss=0.003954, reg_loss=0.015692, lr=0.02037, time=239.0 ms, rem=38.24 s
iter=  850, img_loss=0.003906, reg_loss=0.015688, lr=0.02027, time=239.4 ms, rem=35.91 s
iter=  860, img_loss=0.003926, reg_loss=0.015677, lr=0.02018, time=238.5 ms, rem=33.39 s
iter=  870, img_loss=0.003885, reg_loss=0.015659, lr=0.02009, time=240.3 ms, rem=31.23 s
iter=  880, img_loss=0.004161, reg_loss=0.015670, lr=0.01999, time=238.3 ms, rem=28.60 s
iter=  890, img_loss=0.004124, reg_loss=0.015670, lr=0.01990, time=238.6 ms, rem=26.25 s
iter=  900, img_loss=0.004113, reg_loss=0.015673, lr=0.01981, time=238.4 ms, rem=23.84 s
iter=  910, img_loss=0.003786, reg_loss=0.015694, lr=0.01972, time=239.8 ms, rem=21.58 s
iter=  920, img_loss=0.003878, reg_loss=0.015682, lr=0.01963, time=238.6 ms, rem=19.09 s
iter=  930, img_loss=0.003704, reg_loss=0.015670, lr=0.01954, time=239.6 ms, rem=16.77 s
iter=  940, img_loss=0.003717, reg_loss=0.015662, lr=0.01945, time=238.7 ms, rem=14.32 s
iter=  950, img_loss=0.003906, reg_loss=0.015654, lr=0.01936, time=238.1 ms, rem=11.90 s
iter=  960, img_loss=0.004089, reg_loss=0.015657, lr=0.01927, time=238.3 ms, rem=9.53 s
iter=  970, img_loss=0.004209, reg_loss=0.015659, lr=0.01918, time=238.9 ms, rem=7.17 s
iter=  980, img_loss=0.004085, reg_loss=0.015676, lr=0.01910, time=238.5 ms, rem=4.77 s
iter=  990, img_loss=0.003828, reg_loss=0.015672, lr=0.01901, time=240.2 ms, rem=2.40 s
iter= 1000, img_loss=0.003825, reg_loss=0.015672, lr=0.01892, time=239.6 ms, rem=0.00 s
Base mesh has 10188 triangles and 5094 vertices.
Writing mesh:  out/bob/dmtet_mesh/mesh.obj
    writing 5094 vertices
    writing 6472 texcoords
    writing 5094 normals
    writing 10188 faces
Writing material:  out/bob/dmtet_mesh/mesh.mtl
Done exporting mesh
iter=    0, img_loss=0.005315, reg_loss=0.000639, lr=0.00003, time=158.8 ms, rem=2.65 m
iter=   10, img_loss=0.004864, reg_loss=0.000752, lr=0.00033, time=155.8 ms, rem=2.57 m
iter=   20, img_loss=0.004675, reg_loss=0.000914, lr=0.00063, time=153.1 ms, rem=2.50 m
iter=   30, img_loss=0.004406, reg_loss=0.000954, lr=0.00093, time=152.7 ms, rem=2.47 m
iter=   40, img_loss=0.004368, reg_loss=0.001005, lr=0.00123, time=153.0 ms, rem=2.45 m
iter=   50, img_loss=0.004040, reg_loss=0.001075, lr=0.00153, time=152.8 ms, rem=2.42 m
iter=   60, img_loss=0.004068, reg_loss=0.001190, lr=0.00183, time=152.6 ms, rem=2.39 m
iter=   70, img_loss=0.003882, reg_loss=0.001288, lr=0.00213, time=152.8 ms, rem=2.37 m
iter=   80, img_loss=0.003709, reg_loss=0.001353, lr=0.00243, time=152.6 ms, rem=2.34 m
iter=   90, img_loss=0.003551, reg_loss=0.001424, lr=0.00273, time=152.7 ms, rem=2.32 m
iter=  100, img_loss=0.003619, reg_loss=0.001529, lr=0.00300, time=152.4 ms, rem=2.29 m
iter=  110, img_loss=0.003434, reg_loss=0.001531, lr=0.00298, time=152.8 ms, rem=2.27 m
iter=  120, img_loss=0.003630, reg_loss=0.001521, lr=0.00297, time=152.5 ms, rem=2.24 m
iter=  130, img_loss=0.003502, reg_loss=0.001523, lr=0.00296, time=152.3 ms, rem=2.21 m
iter=  140, img_loss=0.003730, reg_loss=0.001592, lr=0.00294, time=152.5 ms, rem=2.19 m
iter=  150, img_loss=0.003492, reg_loss=0.001543, lr=0.00293, time=152.7 ms, rem=2.16 m
iter=  160, img_loss=0.003465, reg_loss=0.001471, lr=0.00292, time=152.6 ms, rem=2.14 m
iter=  170, img_loss=0.003400, reg_loss=0.001459, lr=0.00290, time=152.3 ms, rem=2.11 m
iter=  180, img_loss=0.003477, reg_loss=0.001441, lr=0.00289, time=152.7 ms, rem=2.09 m
iter=  190, img_loss=0.003325, reg_loss=0.001449, lr=0.00288, time=153.0 ms, rem=2.07 m
iter=  200, img_loss=0.003310, reg_loss=0.001434, lr=0.00286, time=153.0 ms, rem=2.04 m
iter=  210, img_loss=0.003381, reg_loss=0.001451, lr=0.00285, time=153.0 ms, rem=2.02 m
iter=  220, img_loss=0.003459, reg_loss=0.001482, lr=0.00284, time=152.5 ms, rem=1.98 m
iter=  230, img_loss=0.003401, reg_loss=0.001505, lr=0.00282, time=152.6 ms, rem=1.96 m
iter=  240, img_loss=0.003473, reg_loss=0.001512, lr=0.00281, time=152.5 ms, rem=1.93 m
iter=  250, img_loss=0.003288, reg_loss=0.001479, lr=0.00280, time=152.5 ms, rem=1.91 m
iter=  260, img_loss=0.003266, reg_loss=0.001443, lr=0.00279, time=153.0 ms, rem=1.89 m
iter=  270, img_loss=0.003231, reg_loss=0.001452, lr=0.00277, time=152.9 ms, rem=1.86 m
iter=  280, img_loss=0.003348, reg_loss=0.001429, lr=0.00276, time=152.8 ms, rem=1.83 m
iter=  290, img_loss=0.003279, reg_loss=0.001454, lr=0.00275, time=152.9 ms, rem=1.81 m
iter=  300, img_loss=0.003253, reg_loss=0.001429, lr=0.00273, time=153.4 ms, rem=1.79 m
iter=  310, img_loss=0.003231, reg_loss=0.001419, lr=0.00272, time=153.1 ms, rem=1.76 m
iter=  320, img_loss=0.003231, reg_loss=0.001412, lr=0.00271, time=153.3 ms, rem=1.74 m
iter=  330, img_loss=0.003247, reg_loss=0.001419, lr=0.00270, time=152.8 ms, rem=1.71 m
iter=  340, img_loss=0.003267, reg_loss=0.001415, lr=0.00268, time=153.0 ms, rem=1.68 m
iter=  350, img_loss=0.003138, reg_loss=0.001392, lr=0.00267, time=152.8 ms, rem=1.66 m
iter=  360, img_loss=0.003360, reg_loss=0.001449, lr=0.00266, time=153.0 ms, rem=1.63 m
iter=  370, img_loss=0.003129, reg_loss=0.001430, lr=0.00265, time=152.9 ms, rem=1.61 m
iter=  380, img_loss=0.003137, reg_loss=0.001406, lr=0.00264, time=153.0 ms, rem=1.58 m
iter=  390, img_loss=0.003070, reg_loss=0.001379, lr=0.00262, time=153.0 ms, rem=1.56 m
iter=  400, img_loss=0.003316, reg_loss=0.001419, lr=0.00261, time=153.2 ms, rem=1.53 m
iter=  410, img_loss=0.003095, reg_loss=0.001394, lr=0.00260, time=152.6 ms, rem=1.50 m
iter=  420, img_loss=0.003362, reg_loss=0.001459, lr=0.00259, time=152.7 ms, rem=1.48 m
iter=  430, img_loss=0.003284, reg_loss=0.001451, lr=0.00258, time=153.0 ms, rem=1.45 m
iter=  440, img_loss=0.003229, reg_loss=0.001450, lr=0.00256, time=152.9 ms, rem=1.43 m
iter=  450, img_loss=0.003137, reg_loss=0.001409, lr=0.00255, time=152.6 ms, rem=1.40 m
iter=  460, img_loss=0.003193, reg_loss=0.001429, lr=0.00254, time=153.1 ms, rem=1.38 m
iter=  470, img_loss=0.003159, reg_loss=0.001447, lr=0.00253, time=152.9 ms, rem=1.35 m
iter=  480, img_loss=0.003218, reg_loss=0.001462, lr=0.00252, time=152.6 ms, rem=1.32 m
iter=  490, img_loss=0.003115, reg_loss=0.001419, lr=0.00251, time=153.1 ms, rem=1.30 m
iter=  500, img_loss=0.003181, reg_loss=0.001458, lr=0.00249, time=153.0 ms, rem=1.27 m
iter=  510, img_loss=0.003314, reg_loss=0.001490, lr=0.00248, time=152.9 ms, rem=1.25 m
iter=  520, img_loss=0.003060, reg_loss=0.001472, lr=0.00247, time=152.6 ms, rem=1.22 m
iter=  530, img_loss=0.003032, reg_loss=0.001428, lr=0.00246, time=153.3 ms, rem=1.20 m
iter=  540, img_loss=0.003147, reg_loss=0.001425, lr=0.00245, time=152.6 ms, rem=1.17 m
iter=  550, img_loss=0.003224, reg_loss=0.001412, lr=0.00244, time=153.4 ms, rem=1.15 m
iter=  560, img_loss=0.003214, reg_loss=0.001416, lr=0.00243, time=153.3 ms, rem=1.12 m
iter=  570, img_loss=0.003144, reg_loss=0.001398, lr=0.00242, time=153.3 ms, rem=1.10 m
iter=  580, img_loss=0.003087, reg_loss=0.001377, lr=0.00240, time=153.2 ms, rem=1.07 m
iter=  590, img_loss=0.003014, reg_loss=0.001420, lr=0.00239, time=153.1 ms, rem=1.05 m
iter=  600, img_loss=0.003018, reg_loss=0.001373, lr=0.00238, time=153.2 ms, rem=1.02 m
iter=  610, img_loss=0.002988, reg_loss=0.001347, lr=0.00237, time=152.5 ms, rem=59.46 s
iter=  620, img_loss=0.003039, reg_loss=0.001333, lr=0.00236, time=151.9 ms, rem=57.73 s
iter=  630, img_loss=0.003065, reg_loss=0.001358, lr=0.00235, time=151.8 ms, rem=56.15 s
iter=  640, img_loss=0.002933, reg_loss=0.001363, lr=0.00234, time=152.3 ms, rem=54.81 s
iter=  650, img_loss=0.003070, reg_loss=0.001354, lr=0.00233, time=152.3 ms, rem=53.30 s
iter=  660, img_loss=0.003147, reg_loss=0.001346, lr=0.00232, time=152.3 ms, rem=51.77 s
iter=  670, img_loss=0.003077, reg_loss=0.001346, lr=0.00231, time=152.5 ms, rem=50.33 s
iter=  680, img_loss=0.003086, reg_loss=0.001327, lr=0.00230, time=152.3 ms, rem=48.74 s
iter=  690, img_loss=0.002979, reg_loss=0.001318, lr=0.00229, time=152.5 ms, rem=47.27 s
iter=  700, img_loss=0.003046, reg_loss=0.001300, lr=0.00227, time=152.6 ms, rem=45.78 s
iter=  710, img_loss=0.003037, reg_loss=0.001313, lr=0.00226, time=153.2 ms, rem=44.43 s
iter=  720, img_loss=0.003049, reg_loss=0.001303, lr=0.00225, time=153.3 ms, rem=42.92 s
iter=  730, img_loss=0.002965, reg_loss=0.001287, lr=0.00224, time=152.5 ms, rem=41.17 s
iter=  740, img_loss=0.003151, reg_loss=0.001290, lr=0.00223, time=153.0 ms, rem=39.77 s
iter=  750, img_loss=0.003121, reg_loss=0.001328, lr=0.00222, time=152.2 ms, rem=38.06 s
iter=  760, img_loss=0.003118, reg_loss=0.001335, lr=0.00221, time=153.3 ms, rem=36.78 s
iter=  770, img_loss=0.003344, reg_loss=0.001357, lr=0.00220, time=153.0 ms, rem=35.20 s
iter=  780, img_loss=0.003315, reg_loss=0.001357, lr=0.00219, time=153.0 ms, rem=33.66 s
iter=  790, img_loss=0.003119, reg_loss=0.001331, lr=0.00218, time=153.0 ms, rem=32.14 s
iter=  800, img_loss=0.003144, reg_loss=0.001311, lr=0.00217, time=152.9 ms, rem=30.58 s
iter=  810, img_loss=0.003082, reg_loss=0.001267, lr=0.00216, time=152.3 ms, rem=28.93 s
iter=  820, img_loss=0.003244, reg_loss=0.001305, lr=0.00215, time=152.9 ms, rem=27.53 s
iter=  830, img_loss=0.003338, reg_loss=0.001289, lr=0.00214, time=152.8 ms, rem=25.97 s
iter=  840, img_loss=0.003159, reg_loss=0.001284, lr=0.00213, time=152.8 ms, rem=24.45 s
iter=  850, img_loss=0.003153, reg_loss=0.001256, lr=0.00212, time=152.6 ms, rem=22.89 s
iter=  860, img_loss=0.003293, reg_loss=0.001250, lr=0.00211, time=153.1 ms, rem=21.44 s
iter=  870, img_loss=0.003134, reg_loss=0.001230, lr=0.00210, time=152.8 ms, rem=19.87 s
iter=  880, img_loss=0.003198, reg_loss=0.001195, lr=0.00209, time=152.7 ms, rem=18.33 s
iter=  890, img_loss=0.003117, reg_loss=0.001184, lr=0.00208, time=152.8 ms, rem=16.81 s
iter=  900, img_loss=0.003239, reg_loss=0.001180, lr=0.00207, time=153.2 ms, rem=15.32 s
iter=  910, img_loss=0.003115, reg_loss=0.001148, lr=0.00207, time=152.4 ms, rem=13.71 s
iter=  920, img_loss=0.003189, reg_loss=0.001127, lr=0.00206, time=152.2 ms, rem=12.17 s
iter=  930, img_loss=0.003155, reg_loss=0.001125, lr=0.00205, time=152.5 ms, rem=10.68 s
iter=  940, img_loss=0.003353, reg_loss=0.001129, lr=0.00204, time=151.9 ms, rem=9.11 s
iter=  950, img_loss=0.003302, reg_loss=0.001114, lr=0.00203, time=152.5 ms, rem=7.63 s
iter=  960, img_loss=0.003139, reg_loss=0.001056, lr=0.00202, time=152.9 ms, rem=6.11 s
iter=  970, img_loss=0.003346, reg_loss=0.001054, lr=0.00201, time=152.3 ms, rem=4.57 s
iter=  980, img_loss=0.003409, reg_loss=0.001030, lr=0.00200, time=152.4 ms, rem=3.05 s
iter=  990, img_loss=0.003618, reg_loss=0.001014, lr=0.00199, time=152.5 ms, rem=1.52 s
iter= 1000, img_loss=0.003414, reg_loss=0.000944, lr=0.00198, time=152.8 ms, rem=0.00 s
Writing mesh:  out/bob/mesh/mesh.obj
    writing 5094 vertices
    writing 6472 texcoords
    writing 5094 normals
    writing 10188 faces
Writing material:  out/bob/mesh/mesh.mtl
Done exporting mesh
srun: job 860264 queued and waiting for resources
srun: job 860264 has been allocated resources
/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-s1ki7289
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-s1ki7289
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/fotress.json
iter 5000
batch 16
spp 1
layers 1
train_res [512, 512]
display_res [512, 512]
texture_res [2048, 2048]
display_interval 0
save_interval 100
learning_rate [0.03, 0.03]
min_roughness 0.08
custom_mip False
random_textures True
background black
loss logl1
out_dir out/fotress_out3
ref_mesh fotress/
base_mesh None
validate True
isosurface dmtet
mtl_override None
dmtet_grid 64
mesh_scale 2.5
env_scale 1.0
envmap None
display [{'bsdf': 'kd'}, {'bsdf': 'ks'}, {'bsdf': 'normal'}]
camera_space_light True
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 10000.0
pre_load True
kd_min [0.03, 0.03, 0.03]
kd_max [0.8, 0.8, 0.8]
ks_min [0, 0.08, 0]
ks_max [0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
Encoder output: 32 dims
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
Traceback (most recent call last):
  File "train.py", line 605, in <module>
    geometry, mat = optimize_mesh(glctx, geometry, mat, lgt, dataset_train, dataset_validate, 
  File "train.py", line 420, in optimize_mesh
    img_loss, reg_loss = trainer(target, it)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1131, in _call_impl
    return forward_call(*input, **kwargs)
  File "train.py", line 300, in forward
    return self.geometry.tick(glctx, target, self.light, self.material, self.image_loss_fn, it)
  File "/netscratch/smishra/nvdiffrec/geometry/dmtet.py", line 219, in tick
    buffers = self.render(glctx, target, lgt, opt_material)
  File "/netscratch/smishra/nvdiffrec/geometry/dmtet.py", line 210, in render
    return render.render_mesh(glctx, opt_mesh, target['mvp'], target['campos'], lgt, target['resolution'], spp=target['spp'], 
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 231, in render_mesh
    layers += [(render_layer(rast, db, mesh, view_pos, lgt, resolution, spp, msaa, bsdf), rast)]
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 166, in render_layer
    buffers = shade(gb_pos, gb_geometric_normal, gb_normal, gb_tangent, gb_texc, gb_texc_deriv, 
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 45, in shade
    all_tex_jitter = material['kd_ks_normal'].sample(gb_pos + torch.normal(mean=0, std=0.01, size=gb_pos.shape, device="cuda"))
  File "/netscratch/smishra/nvdiffrec/render/mlptexture.py", line 91, in sample
    out = self.net.forward(p_enc)
  File "/netscratch/smishra/nvdiffrec/render/mlptexture.py", line 34, in forward
    return self.net(x.to(torch.float32))
RuntimeError: CUDA error: an illegal memory access was encountered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
terminate called after throwing an instance of 'c10::Error'
  what():  Cuda error: 700[cudaGraphicsUnregisterResource(s.cudaPosBuffer);]
Exception raised from rasterizeReleaseBuffers at /opt/conda/lib/python3.8/site-packages/nvdiffrast/common/rasterize_gl.cpp:606 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) + 0x6c (0x7fe10f5a430c in /opt/conda/lib/python3.8/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) + 0xfa (0x7fe10f57a140 in /opt/conda/lib/python3.8/site-packages/torch/lib/libc10.so)
frame #2: rasterizeReleaseBuffers(int, RasterizeGLState&) + 0xdf (0x7fdfe3f26ec5 in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #3: RasterizeGLStateWrapper::~RasterizeGLStateWrapper() + 0x37 (0x7fdfe3f60c2d in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #4: std::default_delete<RasterizeGLStateWrapper>::operator()(RasterizeGLStateWrapper*) const + 0x26 (0x7fdfe3f542c2 in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #5: std::unique_ptr<RasterizeGLStateWrapper, std::default_delete<RasterizeGLStateWrapper> >::~unique_ptr() + 0x56 (0x7fdfe3f4ed4c in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #6: <unknown function> + 0x9f9ae (0x7fdfe3f499ae in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #7: <unknown function> + 0x387c42 (0x7fe03cb8cc42 in /opt/conda/lib/python3.8/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x388b53 (0x7fe03cb8db53 in /opt/conda/lib/python3.8/site-packages/torch/lib/libtorch_python.so)
<omitting python frames>
frame #19: __libc_start_main + 0xf3 (0x7fe113a3c083 in /usr/lib/x86_64-linux-gnu/libc.so.6)

run.sh: line 3: 3889599 Aborted                 python train.py --config configs/fotress.json
srun: error: serv-3333: task 0: Exited with exit code 134
srun: launch/slurm: _step_signal: Terminating StepId=860264.0
srun: job 860274 queued and waiting for resources
srun: job 860274 has been allocated resources
/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-urlij22i
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-urlij22i
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/fotress.json
iter 5000
batch 8
spp 1
layers 1
train_res [512, 512]
display_res [512, 512]
texture_res [2048, 2048]
display_interval 0
save_interval 100
learning_rate [0.03, 0.03]
min_roughness 0.08
custom_mip False
random_textures True
background black
loss logl1
out_dir out/fotress_out3
ref_mesh fotress/
base_mesh None
validate True
isosurface dmtet
mtl_override None
dmtet_grid 64
mesh_scale 2.5
env_scale 1.0
envmap None
display [{'bsdf': 'kd'}, {'bsdf': 'ks'}, {'bsdf': 'normal'}]
camera_space_light True
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 10000.0
pre_load True
kd_min [0.03, 0.03, 0.03]
kd_max [0.8, 0.8, 0.8]
ks_min [0, 0.08, 0]
ks_max [0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
Encoder output: 32 dims
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
Traceback (most recent call last):
  File "train.py", line 605, in <module>
    geometry, mat = optimize_mesh(glctx, geometry, mat, lgt, dataset_train, dataset_validate, 
  File "train.py", line 420, in optimize_mesh
    img_loss, reg_loss = trainer(target, it)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1131, in _call_impl
    return forward_call(*input, **kwargs)
  File "train.py", line 300, in forward
    return self.geometry.tick(glctx, target, self.light, self.material, self.image_loss_fn, it)
  File "/netscratch/smishra/nvdiffrec/geometry/dmtet.py", line 219, in tick
    buffers = self.render(glctx, target, lgt, opt_material)
  File "/netscratch/smishra/nvdiffrec/geometry/dmtet.py", line 210, in render
    return render.render_mesh(glctx, opt_mesh, target['mvp'], target['campos'], lgt, target['resolution'], spp=target['spp'], 
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 231, in render_mesh
    layers += [(render_layer(rast, db, mesh, view_pos, lgt, resolution, spp, msaa, bsdf), rast)]
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 166, in render_layer
    buffers = shade(gb_pos, gb_geometric_normal, gb_normal, gb_tangent, gb_texc, gb_texc_deriv, 
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 45, in shade
    all_tex_jitter = material['kd_ks_normal'].sample(gb_pos + torch.normal(mean=0, std=0.01, size=gb_pos.shape, device="cuda"))
  File "/netscratch/smishra/nvdiffrec/render/mlptexture.py", line 91, in sample
    out = self.net.forward(p_enc)
  File "/netscratch/smishra/nvdiffrec/render/mlptexture.py", line 34, in forward
    return self.net(x.to(torch.float32))
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1149, in _call_impl
    result = forward_call(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1131, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 98, in forward
    return F.relu(input, inplace=self.inplace)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/functional.py", line 1457, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 11.63 GiB (GPU 0; 79.15 GiB total capacity; 57.77 GiB already allocated; 4.11 GiB free; 61.61 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
terminate called after throwing an instance of 'c10::Error'
  what():  Cuda error: 700[cudaGraphicsUnregisterResource(s.cudaTriBuffer);]
Exception raised from rasterizeReleaseBuffers at /opt/conda/lib/python3.8/site-packages/nvdiffrast/common/rasterize_gl.cpp:612 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) + 0x6c (0x7f83e446f30c in /opt/conda/lib/python3.8/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) + 0xfa (0x7f83e4445140 in /opt/conda/lib/python3.8/site-packages/torch/lib/libc10.so)
frame #2: rasterizeReleaseBuffers(int, RasterizeGLState&) + 0x18d (0x7f82b8d16f73 in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #3: RasterizeGLStateWrapper::~RasterizeGLStateWrapper() + 0x37 (0x7f82b8d50c2d in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #4: std::default_delete<RasterizeGLStateWrapper>::operator()(RasterizeGLStateWrapper*) const + 0x26 (0x7f82b8d442c2 in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #5: std::unique_ptr<RasterizeGLStateWrapper, std::default_delete<RasterizeGLStateWrapper> >::~unique_ptr() + 0x56 (0x7f82b8d3ed4c in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #6: <unknown function> + 0x9f9ae (0x7f82b8d399ae in /root/.cache/torch_extensions/py38_cu117/nvdiffrast_plugin_gl/nvdiffrast_plugin_gl.so)
frame #7: <unknown function> + 0x387c42 (0x7f8313738c42 in /opt/conda/lib/python3.8/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x388b53 (0x7f8313739b53 in /opt/conda/lib/python3.8/site-packages/torch/lib/libtorch_python.so)
<omitting python frames>
frame #19: __libc_start_main + 0xf3 (0x7f83e8907083 in /usr/lib/x86_64-linux-gnu/libc.so.6)

run.sh: line 3: 3898259 Aborted                 python train.py --config configs/fotress.json
srun: error: serv-3333: task 0: Exited with exit code 134
srun: launch/slurm: _step_signal: Terminating StepId=860274.0
srun: job 860287 queued and waiting for resources
srun: job 860287 has been allocated resources
/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-5l5mfwae
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-5l5mfwae
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/fotress.json
iter 5000
batch 4
spp 1
layers 1
train_res [512, 512]
display_res [512, 512]
texture_res [2048, 2048]
display_interval 0
save_interval 100
learning_rate [0.03, 0.03]
min_roughness 0.08
custom_mip False
random_textures True
background black
loss logl1
out_dir out/fotress_out3
ref_mesh fotress/
base_mesh None
validate True
isosurface dmtet
mtl_override None
dmtet_grid 64
mesh_scale 2.5
env_scale 1.0
envmap None
display [{'bsdf': 'kd'}, {'bsdf': 'ks'}, {'bsdf': 'normal'}]
camera_space_light True
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 10000.0
pre_load True
kd_min [0.03, 0.03, 0.03]
kd_max [0.8, 0.8, 0.8]
ks_min [0, 0.08, 0]
ks_max [0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
Encoder output: 32 dims
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
terminate called after throwing an instance of 'std::runtime_error'
  what():  /tmp/pip-req-build-5l5mfwae/include/tiny-cuda-nn/multi_stream.h:83 cudaEventRecord(m_event, m_stream) failed: an illegal memory access was encountered
run.sh: line 3: 3907043 Aborted                 python train.py --config configs/fotress.json
srun: error: serv-3333: task 0: Exited with exit code 134
srun: launch/slurm: _step_signal: Terminating StepId=860287.0
srun: job 860304 queued and waiting for resources
srun: job 860304 has been allocated resources
/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-28pmbfxy
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-28pmbfxy
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/fotress.json
iter 5000
batch 1
spp 1
layers 1
train_res [512, 512]
display_res [512, 512]
texture_res [2048, 2048]
display_interval 0
save_interval 100
learning_rate [0.03, 0.03]
min_roughness 0.08
custom_mip False
random_textures True
background black
loss logl1
out_dir out/fotress_out3
ref_mesh fotress/
base_mesh None
validate True
isosurface dmtet
mtl_override None
dmtet_grid 64
mesh_scale 2.5
env_scale 1.0
envmap None
display [{'bsdf': 'kd'}, {'bsdf': 'ks'}, {'bsdf': 'normal'}]
camera_space_light True
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 10000.0
pre_load True
kd_min [0.03, 0.03, 0.03]
kd_max [0.8, 0.8, 0.8]
ks_min [0, 0.08, 0]
ks_max [0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
DatasetLLFF: 42 images with shape [3024, 4032]
DatasetLLFF: auto-centering at [-2.1627150e-01 -3.1622168e-02  3.3364883e+01]
Encoder output: 32 dims
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
iter=    0, img_loss=0.154065, reg_loss=0.333822, lr=0.02999, time=1722.0 ms, rem=2.39 h
iter=   10, img_loss=0.182104, reg_loss=0.313690, lr=0.02985, time=1664.0 ms, rem=2.31 h
iter=   20, img_loss=0.194976, reg_loss=0.295860, lr=0.02971, time=1664.8 ms, rem=2.30 h
iter=   30, img_loss=0.176999, reg_loss=0.283527, lr=0.02957, time=1675.6 ms, rem=2.31 h
iter=   40, img_loss=0.175209, reg_loss=0.276302, lr=0.02944, time=1690.3 ms, rem=2.33 h
iter=   50, img_loss=0.178367, reg_loss=0.271840, lr=0.02930, time=1694.5 ms, rem=2.33 h
iter=   60, img_loss=0.177388, reg_loss=0.268564, lr=0.02917, time=1694.6 ms, rem=2.33 h
iter=   70, img_loss=0.183264, reg_loss=0.265927, lr=0.02903, time=1694.2 ms, rem=2.32 h
iter=   80, img_loss=0.174023, reg_loss=0.263602, lr=0.02890, time=1696.5 ms, rem=2.32 h
iter=   90, img_loss=0.179831, reg_loss=0.261415, lr=0.02877, time=1684.0 ms, rem=2.30 h
iter=  100, img_loss=0.184569, reg_loss=0.259335, lr=0.02864, time=1692.1 ms, rem=2.30 h
iter=  110, img_loss=0.178162, reg_loss=0.257033, lr=0.02851, time=1682.2 ms, rem=2.28 h
iter=  120, img_loss=0.186499, reg_loss=0.254813, lr=0.02837, time=1694.4 ms, rem=2.30 h
iter=  130, img_loss=0.184118, reg_loss=0.252721, lr=0.02824, time=1694.5 ms, rem=2.29 h
iter=  140, img_loss=0.179546, reg_loss=0.250615, lr=0.02811, time=1695.1 ms, rem=2.29 h
iter=  150, img_loss=0.182223, reg_loss=0.248400, lr=0.02798, time=1695.8 ms, rem=2.28 h
iter=  160, img_loss=0.173173, reg_loss=0.246283, lr=0.02786, time=1694.6 ms, rem=2.28 h
iter=  170, img_loss=0.170663, reg_loss=0.244151, lr=0.02773, time=1691.7 ms, rem=2.27 h
iter=  180, img_loss=0.168317, reg_loss=0.241914, lr=0.02760, time=1669.0 ms, rem=2.23 h
iter=  190, img_loss=0.170714, reg_loss=0.239762, lr=0.02747, time=1669.3 ms, rem=2.23 h
iter=  200, img_loss=0.170573, reg_loss=0.237669, lr=0.02735, time=1668.1 ms, rem=2.22 h
iter=  210, img_loss=0.177626, reg_loss=0.235565, lr=0.02722, time=1679.8 ms, rem=2.24 h
iter=  220, img_loss=0.184632, reg_loss=0.233480, lr=0.02710, time=1678.0 ms, rem=2.23 h
iter=  230, img_loss=0.180974, reg_loss=0.231386, lr=0.02697, time=1677.9 ms, rem=2.22 h
iter=  240, img_loss=0.166071, reg_loss=0.229209, lr=0.02685, time=1669.1 ms, rem=2.21 h
iter=  250, img_loss=0.180198, reg_loss=0.226974, lr=0.02673, time=1675.7 ms, rem=2.21 h
iter=  260, img_loss=0.168361, reg_loss=0.224819, lr=0.02660, time=1661.4 ms, rem=2.19 h
iter=  270, img_loss=0.180501, reg_loss=0.222750, lr=0.02648, time=1675.5 ms, rem=2.20 h
iter=  280, img_loss=0.171417, reg_loss=0.220648, lr=0.02636, time=1683.2 ms, rem=2.21 h
iter=  290, img_loss=0.175924, reg_loss=0.218524, lr=0.02624, time=1677.6 ms, rem=2.19 h
iter=  300, img_loss=0.178579, reg_loss=0.216367, lr=0.02612, time=1662.8 ms, rem=2.17 h
iter=  310, img_loss=0.175334, reg_loss=0.214238, lr=0.02600, time=1634.4 ms, rem=2.13 h
iter=  320, img_loss=0.170277, reg_loss=0.212119, lr=0.02588, time=1634.9 ms, rem=2.13 h
iter=  330, img_loss=0.176458, reg_loss=0.209966, lr=0.02576, time=1634.9 ms, rem=2.12 h
iter=  340, img_loss=0.173283, reg_loss=0.207823, lr=0.02564, time=1635.4 ms, rem=2.12 h
iter=  350, img_loss=0.168768, reg_loss=0.205785, lr=0.02552, time=1629.5 ms, rem=2.10 h
iter=  360, img_loss=0.184512, reg_loss=0.203624, lr=0.02541, time=1645.3 ms, rem=2.12 h
iter=  370, img_loss=0.158613, reg_loss=0.201497, lr=0.02529, time=1634.5 ms, rem=2.10 h
iter=  380, img_loss=0.187348, reg_loss=0.199353, lr=0.02517, time=1634.2 ms, rem=2.10 h
iter=  390, img_loss=0.180877, reg_loss=0.197237, lr=0.02506, time=1634.8 ms, rem=2.09 h
iter=  400, img_loss=0.173720, reg_loss=0.195156, lr=0.02494, time=1639.5 ms, rem=2.09 h
iter=  410, img_loss=0.172055, reg_loss=0.193017, lr=0.02483, time=1636.3 ms, rem=2.09 h
iter=  420, img_loss=0.171750, reg_loss=0.190902, lr=0.02471, time=1636.4 ms, rem=2.08 h
iter=  430, img_loss=0.173187, reg_loss=0.188793, lr=0.02460, time=1636.6 ms, rem=2.08 h
iter=  440, img_loss=0.173115, reg_loss=0.186686, lr=0.02449, time=1636.0 ms, rem=2.07 h
iter=  450, img_loss=0.177054, reg_loss=0.184557, lr=0.02437, time=1636.6 ms, rem=2.07 h
iter=  460, img_loss=0.183911, reg_loss=0.182433, lr=0.02426, time=1636.1 ms, rem=2.06 h
iter=  470, img_loss=0.176646, reg_loss=0.180351, lr=0.02415, time=1636.2 ms, rem=2.06 h
iter=  480, img_loss=0.180490, reg_loss=0.178253, lr=0.02404, time=1636.0 ms, rem=2.05 h
iter=  490, img_loss=0.182445, reg_loss=0.176053, lr=0.02393, time=1636.5 ms, rem=2.05 h
iter=  500, img_loss=0.184494, reg_loss=0.173994, lr=0.02382, time=1638.4 ms, rem=2.05 h
iter=  510, img_loss=0.185232, reg_loss=0.171845, lr=0.02371, time=1627.3 ms, rem=2.03 h
iter=  520, img_loss=0.174753, reg_loss=0.169696, lr=0.02360, time=1627.3 ms, rem=2.03 h
iter=  530, img_loss=0.173708, reg_loss=0.167539, lr=0.02349, time=1627.8 ms, rem=2.02 h
iter=  540, img_loss=0.180160, reg_loss=0.165374, lr=0.02338, time=1628.2 ms, rem=2.02 h
iter=  550, img_loss=0.174176, reg_loss=0.163227, lr=0.02328, time=1627.7 ms, rem=2.01 h
iter=  560, img_loss=0.173839, reg_loss=0.161127, lr=0.02317, time=1627.5 ms, rem=2.01 h
iter=  570, img_loss=0.166596, reg_loss=0.158980, lr=0.02306, time=1627.8 ms, rem=2.00 h
iter=  580, img_loss=0.169273, reg_loss=0.156847, lr=0.02296, time=1627.6 ms, rem=2.00 h
iter=  590, img_loss=0.168359, reg_loss=0.154735, lr=0.02285, time=1627.9 ms, rem=1.99 h
iter=  600, img_loss=0.172889, reg_loss=0.152626, lr=0.02275, time=1633.4 ms, rem=2.00 h
iter=  610, img_loss=0.171059, reg_loss=0.150515, lr=0.02264, time=1647.1 ms, rem=2.01 h
iter=  620, img_loss=0.177466, reg_loss=0.148398, lr=0.02254, time=1647.1 ms, rem=2.00 h
iter=  630, img_loss=0.167131, reg_loss=0.146307, lr=0.02243, time=1647.2 ms, rem=2.00 h
iter=  640, img_loss=0.174027, reg_loss=0.144211, lr=0.02233, time=1644.5 ms, rem=1.99 h
iter=  650, img_loss=0.177348, reg_loss=0.142104, lr=0.02223, time=1647.5 ms, rem=1.99 h
iter=  660, img_loss=0.181060, reg_loss=0.139965, lr=0.02213, time=1647.8 ms, rem=1.99 h
iter=  670, img_loss=0.178531, reg_loss=0.137820, lr=0.02203, time=1647.1 ms, rem=1.98 h
iter=  680, img_loss=0.179946, reg_loss=0.135725, lr=0.02192, time=1645.1 ms, rem=1.97 h
iter=  690, img_loss=0.168861, reg_loss=0.133646, lr=0.02182, time=1630.4 ms, rem=1.95 h
iter=  700, img_loss=0.185241, reg_loss=0.131548, lr=0.02172, time=1633.2 ms, rem=1.95 h
iter=  710, img_loss=0.180304, reg_loss=0.129424, lr=0.02162, time=1630.5 ms, rem=1.94 h
iter=  720, img_loss=0.165728, reg_loss=0.127304, lr=0.02152, time=1624.6 ms, rem=1.93 h
iter=  730, img_loss=0.166527, reg_loss=0.125164, lr=0.02143, time=1627.4 ms, rem=1.93 h
iter=  740, img_loss=0.171064, reg_loss=0.123031, lr=0.02133, time=1650.0 ms, rem=1.95 h
iter=  750, img_loss=0.166275, reg_loss=0.120897, lr=0.02123, time=1628.7 ms, rem=1.92 h
iter=  760, img_loss=0.175627, reg_loss=0.118773, lr=0.02113, time=1628.7 ms, rem=1.92 h
iter=  770, img_loss=0.180488, reg_loss=0.116648, lr=0.02103, time=1628.2 ms, rem=1.91 h
iter=  780, img_loss=0.178037, reg_loss=0.114533, lr=0.02094, time=1629.7 ms, rem=1.91 h
iter=  790, img_loss=0.178510, reg_loss=0.112477, lr=0.02084, time=1627.5 ms, rem=1.90 h
iter=  800, img_loss=0.169980, reg_loss=0.110382, lr=0.02075, time=1630.4 ms, rem=1.90 h
iter=  810, img_loss=0.168022, reg_loss=0.108240, lr=0.02065, time=1644.1 ms, rem=1.91 h
iter=  820, img_loss=0.171924, reg_loss=0.106108, lr=0.02056, time=1631.1 ms, rem=1.89 h
iter=  830, img_loss=0.165718, reg_loss=0.103986, lr=0.02046, time=1641.4 ms, rem=1.90 h
iter=  840, img_loss=0.173422, reg_loss=0.101868, lr=0.02037, time=1647.5 ms, rem=1.90 h
iter=  850, img_loss=0.171339, reg_loss=0.099756, lr=0.02027, time=1647.2 ms, rem=1.90 h
iter=  860, img_loss=0.176032, reg_loss=0.097649, lr=0.02018, time=1644.3 ms, rem=1.89 h
iter=  870, img_loss=0.166656, reg_loss=0.095529, lr=0.02009, time=1642.9 ms, rem=1.88 h
iter=  880, img_loss=0.179656, reg_loss=0.093401, lr=0.01999, time=1641.3 ms, rem=1.88 h
iter=  890, img_loss=0.174297, reg_loss=0.091302, lr=0.01990, time=1648.2 ms, rem=1.88 h
iter=  900, img_loss=0.175953, reg_loss=0.089187, lr=0.01981, time=1646.4 ms, rem=1.88 h
iter=  910, img_loss=0.177498, reg_loss=0.087050, lr=0.01972, time=1625.2 ms, rem=1.85 h
iter=  920, img_loss=0.174432, reg_loss=0.084930, lr=0.01963, time=1634.9 ms, rem=1.85 h
iter=  930, img_loss=0.169367, reg_loss=0.082831, lr=0.01954, time=1619.5 ms, rem=1.83 h
iter=  940, img_loss=0.182762, reg_loss=0.080721, lr=0.01945, time=1623.4 ms, rem=1.83 h
iter=  950, img_loss=0.181191, reg_loss=0.078594, lr=0.01936, time=1624.4 ms, rem=1.83 h
iter=  960, img_loss=0.179060, reg_loss=0.076479, lr=0.01927, time=1630.0 ms, rem=1.83 h
iter=  970, img_loss=0.178249, reg_loss=0.074391, lr=0.01918, time=1629.4 ms, rem=1.82 h
iter=  980, img_loss=0.160163, reg_loss=0.072282, lr=0.01910, time=1626.6 ms, rem=1.82 h
iter=  990, img_loss=0.176343, reg_loss=0.070137, lr=0.01901, time=1626.0 ms, rem=1.81 h
iter= 1000, img_loss=0.176066, reg_loss=0.068016, lr=0.01892, time=1626.9 ms, rem=1.81 h
iter= 1010, img_loss=0.171891, reg_loss=0.065901, lr=0.01883, time=1682.1 ms, rem=1.86 h
iter= 1020, img_loss=0.178394, reg_loss=0.063781, lr=0.01875, time=1625.9 ms, rem=1.80 h
iter= 1030, img_loss=0.172189, reg_loss=0.061664, lr=0.01866, time=1655.7 ms, rem=1.83 h
iter= 1040, img_loss=0.174359, reg_loss=0.059550, lr=0.01857, time=1645.0 ms, rem=1.81 h
iter= 1050, img_loss=0.177810, reg_loss=0.057426, lr=0.01849, time=1657.4 ms, rem=1.82 h
iter= 1060, img_loss=0.178931, reg_loss=0.055305, lr=0.01840, time=1631.0 ms, rem=1.79 h
iter= 1070, img_loss=0.180374, reg_loss=0.053185, lr=0.01832, time=1640.5 ms, rem=1.79 h
iter= 1080, img_loss=0.171168, reg_loss=0.051069, lr=0.01824, time=1628.3 ms, rem=1.77 h
iter= 1090, img_loss=0.174380, reg_loss=0.048940, lr=0.01815, time=1646.3 ms, rem=1.79 h
iter= 1100, img_loss=0.178211, reg_loss=0.046812, lr=0.01807, time=1632.3 ms, rem=1.77 h
iter= 1110, img_loss=0.167507, reg_loss=0.044686, lr=0.01799, time=1647.8 ms, rem=1.78 h
iter= 1120, img_loss=0.178897, reg_loss=0.042552, lr=0.01790, time=1647.3 ms, rem=1.78 h
iter= 1130, img_loss=0.175746, reg_loss=0.040430, lr=0.01782, time=1647.6 ms, rem=1.77 h
iter= 1140, img_loss=0.167732, reg_loss=0.038307, lr=0.01774, time=1645.6 ms, rem=1.76 h
iter= 1150, img_loss=0.172029, reg_loss=0.036185, lr=0.01766, time=1643.1 ms, rem=1.76 h
iter= 1160, img_loss=0.173748, reg_loss=0.034072, lr=0.01758, time=1640.8 ms, rem=1.75 h
iter= 1170, img_loss=0.179241, reg_loss=0.031957, lr=0.01750, time=1640.1 ms, rem=1.74 h
iter= 1180, img_loss=0.171407, reg_loss=0.029836, lr=0.01741, time=1655.4 ms, rem=1.76 h
iter= 1190, img_loss=0.171362, reg_loss=0.027716, lr=0.01733, time=1659.4 ms, rem=1.76 h
iter= 1200, img_loss=0.173017, reg_loss=0.025597, lr=0.01726, time=1662.9 ms, rem=1.76 h
iter= 1210, img_loss=0.173674, reg_loss=0.023473, lr=0.01718, time=1650.2 ms, rem=1.74 h
iter= 1220, img_loss=0.182345, reg_loss=0.021349, lr=0.01710, time=1678.0 ms, rem=1.76 h
iter= 1230, img_loss=0.177114, reg_loss=0.019226, lr=0.01702, time=1678.9 ms, rem=1.76 h
iter= 1240, img_loss=0.168959, reg_loss=0.017101, lr=0.01694, time=1678.7 ms, rem=1.75 h
iter= 1250, img_loss=0.175216, reg_loss=0.014974, lr=0.01686, time=1679.1 ms, rem=1.75 h
iter= 1260, img_loss=0.174233, reg_loss=0.014022, lr=0.01678, time=1678.3 ms, rem=1.74 h
iter= 1270, img_loss=0.171927, reg_loss=0.014025, lr=0.01671, time=1678.1 ms, rem=1.74 h
iter= 1280, img_loss=0.175753, reg_loss=0.014025, lr=0.01663, time=1678.2 ms, rem=1.73 h
iter= 1290, img_loss=0.180241, reg_loss=0.014025, lr=0.01655, time=1679.6 ms, rem=1.73 h
iter= 1300, img_loss=0.171250, reg_loss=0.014031, lr=0.01648, time=1683.5 ms, rem=1.73 h
iter= 1310, img_loss=0.176273, reg_loss=0.014032, lr=0.01640, time=1655.3 ms, rem=1.70 h
iter= 1320, img_loss=0.180329, reg_loss=0.014034, lr=0.01633, time=1652.4 ms, rem=1.69 h
iter= 1330, img_loss=0.179085, reg_loss=0.014038, lr=0.01625, time=1665.3 ms, rem=1.70 h
iter= 1340, img_loss=0.170763, reg_loss=0.014042, lr=0.01618, time=1653.1 ms, rem=1.68 h
iter= 1350, img_loss=0.165984, reg_loss=0.014043, lr=0.01610, time=1662.9 ms, rem=1.69 h
iter= 1360, img_loss=0.168722, reg_loss=0.014040, lr=0.01603, time=1658.0 ms, rem=1.68 h
iter= 1370, img_loss=0.174546, reg_loss=0.014039, lr=0.01596, time=1655.1 ms, rem=1.67 h
iter= 1380, img_loss=0.181368, reg_loss=0.014041, lr=0.01588, time=1661.6 ms, rem=1.67 h
iter= 1390, img_loss=0.174795, reg_loss=0.014044, lr=0.01581, time=1653.1 ms, rem=1.66 h
iter= 1400, img_loss=0.165688, reg_loss=0.014044, lr=0.01574, time=1662.8 ms, rem=1.66 h
iter= 1410, img_loss=0.173108, reg_loss=0.014041, lr=0.01566, time=1669.3 ms, rem=1.66 h
iter= 1420, img_loss=0.164543, reg_loss=0.014039, lr=0.01559, time=1655.8 ms, rem=1.65 h
iter= 1430, img_loss=0.178479, reg_loss=0.014039, lr=0.01552, time=1655.1 ms, rem=1.64 h
iter= 1440, img_loss=0.161902, reg_loss=0.014041, lr=0.01545, time=1656.3 ms, rem=1.64 h
iter= 1450, img_loss=0.177149, reg_loss=0.014043, lr=0.01538, time=1655.4 ms, rem=1.63 h
iter= 1460, img_loss=0.169270, reg_loss=0.014043, lr=0.01531, time=1655.5 ms, rem=1.63 h
iter= 1470, img_loss=0.178041, reg_loss=0.014041, lr=0.01524, time=1654.9 ms, rem=1.62 h
iter= 1480, img_loss=0.172034, reg_loss=0.014040, lr=0.01517, time=1655.2 ms, rem=1.62 h
iter= 1490, img_loss=0.173151, reg_loss=0.014041, lr=0.01510, time=1655.7 ms, rem=1.61 h
iter= 1500, img_loss=0.173070, reg_loss=0.014041, lr=0.01503, time=1654.1 ms, rem=1.61 h
iter= 1510, img_loss=0.185241, reg_loss=0.014040, lr=0.01496, time=1630.2 ms, rem=1.58 h
iter= 1520, img_loss=0.170616, reg_loss=0.014042, lr=0.01489, time=1630.7 ms, rem=1.58 h
iter= 1530, img_loss=0.172139, reg_loss=0.014045, lr=0.01482, time=1630.6 ms, rem=1.57 h
iter= 1540, img_loss=0.179919, reg_loss=0.014044, lr=0.01475, time=1630.8 ms, rem=1.57 h
iter= 1550, img_loss=0.159953, reg_loss=0.014043, lr=0.01469, time=1630.8 ms, rem=1.56 h
iter= 1560, img_loss=0.173213, reg_loss=0.014041, lr=0.01462, time=1631.2 ms, rem=1.56 h
iter= 1570, img_loss=0.168734, reg_loss=0.014041, lr=0.01455, time=1630.7 ms, rem=1.55 h
iter= 1580, img_loss=0.173588, reg_loss=0.014040, lr=0.01449, time=1630.9 ms, rem=1.55 h
iter= 1590, img_loss=0.175961, reg_loss=0.014042, lr=0.01442, time=1630.0 ms, rem=1.54 h
iter= 1600, img_loss=0.179544, reg_loss=0.014045, lr=0.01435, time=1640.6 ms, rem=1.55 h
iter= 1610, img_loss=0.179320, reg_loss=0.014048, lr=0.01429, time=1699.1 ms, rem=1.60 h
iter= 1620, img_loss=0.179850, reg_loss=0.014050, lr=0.01422, time=1698.4 ms, rem=1.59 h
iter= 1630, img_loss=0.169404, reg_loss=0.014052, lr=0.01416, time=1695.8 ms, rem=1.59 h
iter= 1640, img_loss=0.177628, reg_loss=0.014053, lr=0.01409, time=1699.1 ms, rem=1.59 h
iter= 1650, img_loss=0.172280, reg_loss=0.014052, lr=0.01403, time=1700.4 ms, rem=1.58 h
iter= 1660, img_loss=0.169690, reg_loss=0.014052, lr=0.01396, time=1698.7 ms, rem=1.58 h
iter= 1670, img_loss=0.181672, reg_loss=0.014052, lr=0.01390, time=1700.4 ms, rem=1.57 h
iter= 1680, img_loss=0.172068, reg_loss=0.014051, lr=0.01383, time=1698.8 ms, rem=1.57 h
iter= 1690, img_loss=0.173630, reg_loss=0.014050, lr=0.01377, time=1701.7 ms, rem=1.56 h
iter= 1700, img_loss=0.170458, reg_loss=0.014052, lr=0.01371, time=1697.9 ms, rem=1.56 h
iter= 1710, img_loss=0.169978, reg_loss=0.014055, lr=0.01364, time=1652.3 ms, rem=1.51 h
iter= 1720, img_loss=0.181803, reg_loss=0.014054, lr=0.01358, time=1652.5 ms, rem=1.51 h
iter= 1730, img_loss=0.181176, reg_loss=0.014055, lr=0.01352, time=1652.4 ms, rem=1.50 h
iter= 1740, img_loss=0.164519, reg_loss=0.014058, lr=0.01346, time=1652.9 ms, rem=1.50 h
iter= 1750, img_loss=0.173507, reg_loss=0.014060, lr=0.01339, time=1652.3 ms, rem=1.49 h
iter= 1760, img_loss=0.178120, reg_loss=0.014060, lr=0.01333, time=1652.1 ms, rem=1.49 h
iter= 1770, img_loss=0.184921, reg_loss=0.014062, lr=0.01327, time=1652.6 ms, rem=1.48 h
iter= 1780, img_loss=0.177907, reg_loss=0.014064, lr=0.01321, time=1652.3 ms, rem=1.48 h
iter= 1790, img_loss=0.181215, reg_loss=0.014064, lr=0.01315, time=1652.2 ms, rem=1.47 h
iter= 1800, img_loss=0.174214, reg_loss=0.014063, lr=0.01309, time=1653.2 ms, rem=1.47 h
iter= 1810, img_loss=0.163845, reg_loss=0.014058, lr=0.01303, time=1645.6 ms, rem=1.46 h
iter= 1820, img_loss=0.177349, reg_loss=0.014054, lr=0.01297, time=1645.1 ms, rem=1.45 h
iter= 1830, img_loss=0.173912, reg_loss=0.014052, lr=0.01291, time=1647.4 ms, rem=1.45 h
iter= 1840, img_loss=0.176690, reg_loss=0.014051, lr=0.01285, time=1645.1 ms, rem=1.44 h
iter= 1850, img_loss=0.172227, reg_loss=0.014053, lr=0.01279, time=1645.4 ms, rem=1.44 h
iter= 1860, img_loss=0.166604, reg_loss=0.014055, lr=0.01273, time=1641.0 ms, rem=1.43 h
iter= 1870, img_loss=0.177224, reg_loss=0.014054, lr=0.01267, time=1642.9 ms, rem=1.43 h
iter= 1880, img_loss=0.180105, reg_loss=0.014057, lr=0.01262, time=1643.9 ms, rem=1.42 h
iter= 1890, img_loss=0.172925, reg_loss=0.014061, lr=0.01256, time=1644.5 ms, rem=1.42 h
iter= 1900, img_loss=0.177853, reg_loss=0.014065, lr=0.01250, time=1650.6 ms, rem=1.42 h
iter= 1910, img_loss=0.160152, reg_loss=0.014065, lr=0.01244, time=1680.4 ms, rem=1.44 h
iter= 1920, img_loss=0.175850, reg_loss=0.014064, lr=0.01239, time=1673.6 ms, rem=1.43 h
iter= 1930, img_loss=0.174953, reg_loss=0.014065, lr=0.01233, time=1673.2 ms, rem=1.43 h
iter= 1940, img_loss=0.177567, reg_loss=0.014066, lr=0.01227, time=1673.4 ms, rem=1.42 h
iter= 1950, img_loss=0.177842, reg_loss=0.014067, lr=0.01222, time=1673.3 ms, rem=1.42 h
iter= 1960, img_loss=0.179970, reg_loss=0.014069, lr=0.01216, time=1674.0 ms, rem=1.41 h
iter= 1970, img_loss=0.173418, reg_loss=0.014070, lr=0.01210, time=1673.5 ms, rem=1.41 h
iter= 1980, img_loss=0.176438, reg_loss=0.014072, lr=0.01205, time=1673.2 ms, rem=1.40 h
iter= 1990, img_loss=0.189201, reg_loss=0.014069, lr=0.01199, time=1673.0 ms, rem=1.40 h
iter= 2000, img_loss=0.182120, reg_loss=0.014068, lr=0.01194, time=1677.2 ms, rem=1.40 h
iter= 2010, img_loss=0.184531, reg_loss=0.014069, lr=0.01188, time=1655.6 ms, rem=1.38 h
iter= 2020, img_loss=0.164977, reg_loss=0.014072, lr=0.01183, time=1670.9 ms, rem=1.38 h
iter= 2030, img_loss=0.182592, reg_loss=0.014073, lr=0.01177, time=1688.6 ms, rem=1.39 h
iter= 2040, img_loss=0.182322, reg_loss=0.014074, lr=0.01172, time=1693.7 ms, rem=1.39 h
iter= 2050, img_loss=0.176909, reg_loss=0.014074, lr=0.01167, time=1694.2 ms, rem=1.39 h
iter= 2060, img_loss=0.176045, reg_loss=0.014076, lr=0.01161, time=1695.2 ms, rem=1.38 h
iter= 2070, img_loss=0.181809, reg_loss=0.014078, lr=0.01156, time=1694.2 ms, rem=1.38 h
iter= 2080, img_loss=0.175508, reg_loss=0.014076, lr=0.01151, time=1693.9 ms, rem=1.37 h
iter= 2090, img_loss=0.162502, reg_loss=0.014071, lr=0.01145, time=1693.8 ms, rem=1.37 h
iter= 2100, img_loss=0.175105, reg_loss=0.014067, lr=0.01140, time=1702.1 ms, rem=1.37 h
iter= 2110, img_loss=0.178139, reg_loss=0.014066, lr=0.01135, time=1649.8 ms, rem=1.32 h
iter= 2120, img_loss=0.176994, reg_loss=0.014068, lr=0.01130, time=1651.5 ms, rem=1.32 h
iter= 2130, img_loss=0.177882, reg_loss=0.014069, lr=0.01124, time=1646.3 ms, rem=1.31 h
iter= 2140, img_loss=0.179170, reg_loss=0.014070, lr=0.01119, time=1645.0 ms, rem=1.31 h
iter= 2150, img_loss=0.170551, reg_loss=0.014068, lr=0.01114, time=1645.6 ms, rem=1.30 h
iter= 2160, img_loss=0.178019, reg_loss=0.014068, lr=0.01109, time=1644.8 ms, rem=1.30 h
iter= 2170, img_loss=0.168675, reg_loss=0.014067, lr=0.01104, time=1645.9 ms, rem=1.29 h
iter= 2180, img_loss=0.181853, reg_loss=0.014066, lr=0.01099, time=1645.0 ms, rem=1.29 h
iter= 2190, img_loss=0.177895, reg_loss=0.014066, lr=0.01094, time=1646.3 ms, rem=1.29 h
iter= 2200, img_loss=0.179637, reg_loss=0.014067, lr=0.01089, time=1653.0 ms, rem=1.29 h
iter= 2210, img_loss=0.179895, reg_loss=0.014072, lr=0.01084, time=1694.4 ms, rem=1.31 h
iter= 2220, img_loss=0.185111, reg_loss=0.014076, lr=0.01079, time=1693.7 ms, rem=1.31 h
iter= 2230, img_loss=0.173384, reg_loss=0.014074, lr=0.01074, time=1694.0 ms, rem=1.30 h
iter= 2240, img_loss=0.171088, reg_loss=0.014072, lr=0.01069, time=1693.8 ms, rem=1.30 h
iter= 2250, img_loss=0.168069, reg_loss=0.014071, lr=0.01064, time=1694.7 ms, rem=1.29 h
iter= 2260, img_loss=0.177109, reg_loss=0.014068, lr=0.01059, time=1693.9 ms, rem=1.29 h
iter= 2270, img_loss=0.172333, reg_loss=0.014067, lr=0.01054, time=1694.1 ms, rem=1.28 h
iter= 2280, img_loss=0.168857, reg_loss=0.014066, lr=0.01049, time=1694.6 ms, rem=1.28 h
iter= 2290, img_loss=0.181181, reg_loss=0.014067, lr=0.01045, time=1695.6 ms, rem=1.28 h
iter= 2300, img_loss=0.175558, reg_loss=0.014069, lr=0.01040, time=1699.9 ms, rem=1.27 h
iter= 2310, img_loss=0.173631, reg_loss=0.014069, lr=0.01035, time=1664.5 ms, rem=1.24 h
iter= 2320, img_loss=0.175059, reg_loss=0.014068, lr=0.01030, time=1649.2 ms, rem=1.23 h
iter= 2330, img_loss=0.182264, reg_loss=0.014069, lr=0.01025, time=1644.9 ms, rem=1.22 h
iter= 2340, img_loss=0.179158, reg_loss=0.014068, lr=0.01021, time=1644.6 ms, rem=1.22 h
iter= 2350, img_loss=0.166730, reg_loss=0.014068, lr=0.01016, time=1646.1 ms, rem=1.21 h
iter= 2360, img_loss=0.174251, reg_loss=0.014068, lr=0.01011, time=1644.9 ms, rem=1.21 h
iter= 2370, img_loss=0.174332, reg_loss=0.014068, lr=0.01007, time=1645.2 ms, rem=1.20 h
iter= 2380, img_loss=0.173952, reg_loss=0.014068, lr=0.01002, time=1646.2 ms, rem=1.20 h
iter= 2390, img_loss=0.170958, reg_loss=0.014069, lr=0.00998, time=1645.7 ms, rem=1.19 h
iter= 2400, img_loss=0.169883, reg_loss=0.014069, lr=0.00993, time=1655.2 ms, rem=1.20 h
iter= 2410, img_loss=0.175474, reg_loss=0.014068, lr=0.00988, time=1693.7 ms, rem=1.22 h
iter= 2420, img_loss=0.173956, reg_loss=0.014067, lr=0.00984, time=1695.4 ms, rem=1.22 h
iter= 2430, img_loss=0.173326, reg_loss=0.014068, lr=0.00979, time=1693.8 ms, rem=1.21 h
iter= 2440, img_loss=0.176855, reg_loss=0.014072, lr=0.00975, time=1694.1 ms, rem=1.20 h
iter= 2450, img_loss=0.184345, reg_loss=0.014070, lr=0.00970, time=1693.9 ms, rem=1.20 h
iter= 2460, img_loss=0.171453, reg_loss=0.014070, lr=0.00966, time=1695.1 ms, rem=1.20 h
iter= 2470, img_loss=0.171923, reg_loss=0.014070, lr=0.00961, time=1694.4 ms, rem=1.19 h
iter= 2480, img_loss=0.170206, reg_loss=0.014070, lr=0.00957, time=1694.4 ms, rem=1.19 h
iter= 2490, img_loss=0.181017, reg_loss=0.014075, lr=0.00953, time=1693.6 ms, rem=1.18 h
iter= 2500, img_loss=0.171919, reg_loss=0.014076, lr=0.00948, time=1694.6 ms, rem=1.18 h
iter= 2510, img_loss=0.184385, reg_loss=0.014076, lr=0.00944, time=1666.4 ms, rem=1.15 h
iter= 2520, img_loss=0.179416, reg_loss=0.014076, lr=0.00940, time=1666.6 ms, rem=1.15 h
iter= 2530, img_loss=0.173033, reg_loss=0.014076, lr=0.00935, time=1667.7 ms, rem=1.14 h
iter= 2540, img_loss=0.177938, reg_loss=0.014075, lr=0.00931, time=1667.0 ms, rem=1.14 h
iter= 2550, img_loss=0.178594, reg_loss=0.014074, lr=0.00927, time=1667.1 ms, rem=1.13 h
iter= 2560, img_loss=0.170869, reg_loss=0.014073, lr=0.00922, time=1668.3 ms, rem=1.13 h
iter= 2570, img_loss=0.164595, reg_loss=0.014075, lr=0.00918, time=1668.1 ms, rem=1.13 h
iter= 2580, img_loss=0.168888, reg_loss=0.014074, lr=0.00914, time=1666.6 ms, rem=1.12 h
iter= 2590, img_loss=0.179576, reg_loss=0.014073, lr=0.00910, time=1666.7 ms, rem=1.12 h
iter= 2600, img_loss=0.186486, reg_loss=0.014074, lr=0.00906, time=1669.5 ms, rem=1.11 h
iter= 2610, img_loss=0.168399, reg_loss=0.014073, lr=0.00901, time=1670.2 ms, rem=1.11 h
iter= 2620, img_loss=0.177619, reg_loss=0.014071, lr=0.00897, time=1675.6 ms, rem=1.11 h
iter= 2630, img_loss=0.165576, reg_loss=0.014071, lr=0.00893, time=1681.4 ms, rem=1.11 h
iter= 2640, img_loss=0.184251, reg_loss=0.014071, lr=0.00889, time=1688.5 ms, rem=1.11 h
iter= 2650, img_loss=0.179773, reg_loss=0.014076, lr=0.00885, time=1671.0 ms, rem=1.09 h
iter= 2660, img_loss=0.165703, reg_loss=0.014076, lr=0.00881, time=1665.7 ms, rem=1.08 h
iter= 2670, img_loss=0.170033, reg_loss=0.014074, lr=0.00877, time=1666.2 ms, rem=1.08 h
iter= 2680, img_loss=0.172833, reg_loss=0.014073, lr=0.00873, time=1666.1 ms, rem=1.07 h
iter= 2690, img_loss=0.166263, reg_loss=0.014071, lr=0.00869, time=1668.4 ms, rem=1.07 h
iter= 2700, img_loss=0.170812, reg_loss=0.014067, lr=0.00865, time=1672.7 ms, rem=1.07 h
iter= 2710, img_loss=0.190549, reg_loss=0.014068, lr=0.00861, time=1687.1 ms, rem=1.07 h
iter= 2720, img_loss=0.174290, reg_loss=0.014073, lr=0.00857, time=1693.9 ms, rem=1.07 h
iter= 2730, img_loss=0.172426, reg_loss=0.014074, lr=0.00853, time=1694.2 ms, rem=1.07 h
iter= 2740, img_loss=0.172830, reg_loss=0.014074, lr=0.00849, time=1694.0 ms, rem=1.06 h
iter= 2750, img_loss=0.164024, reg_loss=0.014071, lr=0.00845, time=1694.5 ms, rem=1.06 h
iter= 2760, img_loss=0.169735, reg_loss=0.014067, lr=0.00841, time=1695.9 ms, rem=1.06 h
iter= 2770, img_loss=0.186020, reg_loss=0.014066, lr=0.00837, time=1694.1 ms, rem=1.05 h
iter= 2780, img_loss=0.178324, reg_loss=0.014065, lr=0.00834, time=1693.5 ms, rem=1.04 h
iter= 2790, img_loss=0.169772, reg_loss=0.014065, lr=0.00830, time=1694.2 ms, rem=1.04 h
iter= 2800, img_loss=0.169328, reg_loss=0.014066, lr=0.00826, time=1696.5 ms, rem=1.04 h
iter= 2810, img_loss=0.173687, reg_loss=0.014063, lr=0.00822, time=1669.6 ms, rem=1.02 h
iter= 2820, img_loss=0.166883, reg_loss=0.014064, lr=0.00818, time=1667.8 ms, rem=1.01 h
iter= 2830, img_loss=0.183653, reg_loss=0.014067, lr=0.00815, time=1667.5 ms, rem=1.01 h
iter= 2840, img_loss=0.167975, reg_loss=0.014068, lr=0.00811, time=1667.6 ms, rem=1.00 h
iter= 2850, img_loss=0.178324, reg_loss=0.014065, lr=0.00807, time=1667.3 ms, rem=59.75 m
iter= 2860, img_loss=0.171451, reg_loss=0.014065, lr=0.00803, time=1668.0 ms, rem=59.49 m
iter= 2870, img_loss=0.182763, reg_loss=0.014069, lr=0.00800, time=1668.0 ms, rem=59.22 m
iter= 2880, img_loss=0.174573, reg_loss=0.014070, lr=0.00796, time=1668.7 ms, rem=58.96 m
iter= 2890, img_loss=0.177688, reg_loss=0.014070, lr=0.00792, time=1668.2 ms, rem=58.67 m
iter= 2900, img_loss=0.203933, reg_loss=0.014069, lr=0.00789, time=1671.6 ms, rem=58.50 m
iter= 2910, img_loss=0.172421, reg_loss=0.014073, lr=0.00785, time=1667.7 ms, rem=58.09 m
iter= 2920, img_loss=0.172782, reg_loss=0.014086, lr=0.00781, time=1668.0 ms, rem=57.82 m
iter= 2930, img_loss=0.185961, reg_loss=0.014090, lr=0.00778, time=1665.3 ms, rem=57.45 m
iter= 2940, img_loss=0.178897, reg_loss=0.014087, lr=0.00774, time=1665.3 ms, rem=57.17 m
iter= 2950, img_loss=0.178109, reg_loss=0.014083, lr=0.00771, time=1666.6 ms, rem=56.94 m
iter= 2960, img_loss=0.171056, reg_loss=0.014078, lr=0.00767, time=1666.6 ms, rem=56.66 m
iter= 2970, img_loss=0.168223, reg_loss=0.014077, lr=0.00764, time=1665.5 ms, rem=56.35 m
iter= 2980, img_loss=0.180608, reg_loss=0.014077, lr=0.00760, time=1666.0 ms, rem=56.09 m
iter= 2990, img_loss=0.175733, reg_loss=0.014077, lr=0.00757, time=1665.9 ms, rem=55.81 m
iter= 3000, img_loss=0.176730, reg_loss=0.014075, lr=0.00753, time=1672.3 ms, rem=55.74 m
iter= 3010, img_loss=0.174246, reg_loss=0.014073, lr=0.00750, time=1693.0 ms, rem=56.15 m
iter= 3020, img_loss=0.173583, reg_loss=0.014073, lr=0.00746, time=1693.2 ms, rem=55.88 m
iter= 3030, img_loss=0.176718, reg_loss=0.014074, lr=0.00743, time=1693.3 ms, rem=55.60 m
iter= 3040, img_loss=0.176657, reg_loss=0.014073, lr=0.00739, time=1691.0 ms, rem=55.24 m
iter= 3050, img_loss=0.172872, reg_loss=0.014072, lr=0.00736, time=1693.5 ms, rem=55.04 m
iter= 3060, img_loss=0.178920, reg_loss=0.014072, lr=0.00733, time=1693.6 ms, rem=54.76 m
iter= 3070, img_loss=0.173657, reg_loss=0.014071, lr=0.00729, time=1693.5 ms, rem=54.48 m
iter= 3080, img_loss=0.169200, reg_loss=0.014073, lr=0.00726, time=1693.2 ms, rem=54.18 m
iter= 3090, img_loss=0.169645, reg_loss=0.014068, lr=0.00723, time=1693.3 ms, rem=53.90 m
iter= 3100, img_loss=0.176129, reg_loss=0.014068, lr=0.00719, time=1694.9 ms, rem=53.67 m
iter= 3110, img_loss=0.173004, reg_loss=0.014070, lr=0.00716, time=1666.2 ms, rem=52.49 m
iter= 3120, img_loss=0.174174, reg_loss=0.014077, lr=0.00713, time=1667.5 ms, rem=52.25 m
iter= 3130, img_loss=0.176639, reg_loss=0.014078, lr=0.00709, time=1666.8 ms, rem=51.95 m
iter= 3140, img_loss=0.182000, reg_loss=0.014079, lr=0.00706, time=1666.7 ms, rem=51.67 m
iter= 3150, img_loss=0.168477, reg_loss=0.014079, lr=0.00703, time=1666.4 ms, rem=51.38 m
iter= 3160, img_loss=0.177743, reg_loss=0.014080, lr=0.00700, time=1666.0 ms, rem=51.09 m
iter= 3170, img_loss=0.172192, reg_loss=0.014082, lr=0.00697, time=1666.0 ms, rem=50.81 m
iter= 3180, img_loss=0.175073, reg_loss=0.014082, lr=0.00693, time=1666.2 ms, rem=50.54 m
iter= 3190, img_loss=0.174815, reg_loss=0.014083, lr=0.00690, time=1666.2 ms, rem=50.26 m
iter= 3200, img_loss=0.172971, reg_loss=0.014082, lr=0.00687, time=1668.4 ms, rem=50.05 m
iter= 3210, img_loss=0.171526, reg_loss=0.014081, lr=0.00684, time=1693.4 ms, rem=50.52 m
iter= 3220, img_loss=0.172921, reg_loss=0.014079, lr=0.00681, time=1693.2 ms, rem=50.23 m
iter= 3230, img_loss=0.183808, reg_loss=0.014080, lr=0.00678, time=1693.0 ms, rem=49.94 m
iter= 3240, img_loss=0.173945, reg_loss=0.014082, lr=0.00674, time=1693.5 ms, rem=49.68 m
iter= 3250, img_loss=0.169689, reg_loss=0.014081, lr=0.00671, time=1693.2 ms, rem=49.39 m
iter= 3260, img_loss=0.177529, reg_loss=0.014083, lr=0.00668, time=1692.6 ms, rem=49.09 m
iter= 3270, img_loss=0.168691, reg_loss=0.014084, lr=0.00665, time=1694.7 ms, rem=48.86 m
iter= 3280, img_loss=0.176455, reg_loss=0.014082, lr=0.00662, time=1692.8 ms, rem=48.53 m
iter= 3290, img_loss=0.187184, reg_loss=0.014078, lr=0.00659, time=1693.1 ms, rem=48.25 m
iter= 3300, img_loss=0.174485, reg_loss=0.014076, lr=0.00656, time=1696.2 ms, rem=48.06 m
iter= 3310, img_loss=0.170960, reg_loss=0.014074, lr=0.00653, time=1670.7 ms, rem=47.06 m
iter= 3320, img_loss=0.183329, reg_loss=0.014074, lr=0.00650, time=1669.0 ms, rem=46.73 m
iter= 3330, img_loss=0.169091, reg_loss=0.014076, lr=0.00647, time=1669.2 ms, rem=46.46 m
iter= 3340, img_loss=0.170162, reg_loss=0.014079, lr=0.00644, time=1669.2 ms, rem=46.18 m
iter= 3350, img_loss=0.180856, reg_loss=0.014081, lr=0.00641, time=1669.0 ms, rem=45.90 m
iter= 3360, img_loss=0.176907, reg_loss=0.014081, lr=0.00638, time=1669.2 ms, rem=45.63 m
iter= 3370, img_loss=0.162294, reg_loss=0.014081, lr=0.00635, time=1670.0 ms, rem=45.37 m
iter= 3380, img_loss=0.175755, reg_loss=0.014079, lr=0.00632, time=1669.1 ms, rem=45.06 m
iter= 3390, img_loss=0.176020, reg_loss=0.014075, lr=0.00629, time=1669.8 ms, rem=44.81 m
iter= 3400, img_loss=0.180597, reg_loss=0.014072, lr=0.00627, time=1675.2 ms, rem=44.67 m
iter= 3410, img_loss=0.170911, reg_loss=0.014073, lr=0.00624, time=1643.7 ms, rem=43.56 m
iter= 3420, img_loss=0.181040, reg_loss=0.014074, lr=0.00621, time=1645.5 ms, rem=43.33 m
iter= 3430, img_loss=0.170221, reg_loss=0.014076, lr=0.00618, time=1645.2 ms, rem=43.05 m
iter= 3440, img_loss=0.181224, reg_loss=0.014077, lr=0.00615, time=1645.2 ms, rem=42.77 m
iter= 3450, img_loss=0.183168, reg_loss=0.014079, lr=0.00612, time=1644.8 ms, rem=42.49 m
iter= 3460, img_loss=0.166481, reg_loss=0.014082, lr=0.00609, time=1646.0 ms, rem=42.25 m
iter= 3470, img_loss=0.175892, reg_loss=0.014082, lr=0.00607, time=1645.2 ms, rem=41.95 m
iter= 3480, img_loss=0.172607, reg_loss=0.014083, lr=0.00604, time=1644.8 ms, rem=41.67 m
iter= 3490, img_loss=0.179200, reg_loss=0.014083, lr=0.00601, time=1645.2 ms, rem=41.40 m
iter= 3500, img_loss=0.170722, reg_loss=0.014085, lr=0.00598, time=1656.8 ms, rem=41.42 m
iter= 3510, img_loss=0.178913, reg_loss=0.014086, lr=0.00596, time=1669.9 ms, rem=41.47 m
iter= 3520, img_loss=0.167621, reg_loss=0.014085, lr=0.00593, time=1666.1 ms, rem=41.10 m
iter= 3530, img_loss=0.179106, reg_loss=0.014084, lr=0.00590, time=1665.8 ms, rem=40.81 m
iter= 3540, img_loss=0.176015, reg_loss=0.014082, lr=0.00587, time=1665.2 ms, rem=40.52 m
iter= 3550, img_loss=0.191380, reg_loss=0.014082, lr=0.00585, time=1665.5 ms, rem=40.25 m
iter= 3560, img_loss=0.171954, reg_loss=0.014081, lr=0.00582, time=1666.6 ms, rem=40.00 m
iter= 3570, img_loss=0.175578, reg_loss=0.014083, lr=0.00579, time=1665.8 ms, rem=39.70 m
iter= 3580, img_loss=0.188433, reg_loss=0.014087, lr=0.00577, time=1666.1 ms, rem=39.43 m
iter= 3590, img_loss=0.168831, reg_loss=0.014089, lr=0.00574, time=1665.5 ms, rem=39.14 m
iter= 3600, img_loss=0.166242, reg_loss=0.014089, lr=0.00571, time=1668.9 ms, rem=38.94 m
iter= 3610, img_loss=0.180570, reg_loss=0.014090, lr=0.00569, time=1672.4 ms, rem=38.74 m
iter= 3620, img_loss=0.174696, reg_loss=0.014089, lr=0.00566, time=1676.6 ms, rem=38.56 m
iter= 3630, img_loss=0.164311, reg_loss=0.014086, lr=0.00564, time=1675.4 ms, rem=38.25 m
iter= 3640, img_loss=0.176349, reg_loss=0.014085, lr=0.00561, time=1674.7 ms, rem=37.96 m
iter= 3650, img_loss=0.180710, reg_loss=0.014084, lr=0.00558, time=1675.0 ms, rem=37.69 m
iter= 3660, img_loss=0.177251, reg_loss=0.014084, lr=0.00556, time=1675.1 ms, rem=37.41 m
iter= 3670, img_loss=0.169560, reg_loss=0.014085, lr=0.00553, time=1676.4 ms, rem=37.16 m
iter= 3680, img_loss=0.168080, reg_loss=0.014086, lr=0.00551, time=1674.8 ms, rem=36.85 m
iter= 3690, img_loss=0.165102, reg_loss=0.014087, lr=0.00548, time=1675.1 ms, rem=36.57 m
iter= 3700, img_loss=0.175799, reg_loss=0.014084, lr=0.00546, time=1678.9 ms, rem=36.38 m
iter= 3710, img_loss=0.180730, reg_loss=0.014082, lr=0.00543, time=1666.7 ms, rem=35.83 m
iter= 3720, img_loss=0.173313, reg_loss=0.014081, lr=0.00541, time=1666.1 ms, rem=35.54 m
iter= 3730, img_loss=0.186622, reg_loss=0.014086, lr=0.00538, time=1665.9 ms, rem=35.26 m
iter= 3740, img_loss=0.177085, reg_loss=0.014090, lr=0.00536, time=1665.9 ms, rem=34.98 m
iter= 3750, img_loss=0.174051, reg_loss=0.014092, lr=0.00533, time=1667.6 ms, rem=34.74 m
iter= 3760, img_loss=0.185059, reg_loss=0.014097, lr=0.00531, time=1665.7 ms, rem=34.42 m
iter= 3770, img_loss=0.175589, reg_loss=0.014100, lr=0.00528, time=1665.3 ms, rem=34.14 m
iter= 3780, img_loss=0.171772, reg_loss=0.014099, lr=0.00526, time=1665.7 ms, rem=33.87 m
iter= 3790, img_loss=0.170088, reg_loss=0.014097, lr=0.00524, time=1666.8 ms, rem=33.61 m
iter= 3800, img_loss=0.184358, reg_loss=0.014093, lr=0.00521, time=1673.3 ms, rem=33.47 m
iter= 3810, img_loss=0.177731, reg_loss=0.014091, lr=0.00519, time=1668.8 ms, rem=33.10 m
iter= 3820, img_loss=0.180354, reg_loss=0.014092, lr=0.00516, time=1671.9 ms, rem=32.88 m
iter= 3830, img_loss=0.168676, reg_loss=0.014091, lr=0.00514, time=1669.2 ms, rem=32.55 m
iter= 3840, img_loss=0.166849, reg_loss=0.014089, lr=0.00512, time=1669.3 ms, rem=32.27 m
iter= 3850, img_loss=0.175779, reg_loss=0.014085, lr=0.00509, time=1668.6 ms, rem=31.98 m
iter= 3860, img_loss=0.171088, reg_loss=0.014086, lr=0.00507, time=1669.3 ms, rem=31.72 m
iter= 3870, img_loss=0.180443, reg_loss=0.014089, lr=0.00505, time=1669.0 ms, rem=31.43 m
iter= 3880, img_loss=0.182557, reg_loss=0.014091, lr=0.00502, time=1668.8 ms, rem=31.15 m
iter= 3890, img_loss=0.171237, reg_loss=0.014090, lr=0.00500, time=1669.1 ms, rem=30.88 m
iter= 3900, img_loss=0.182867, reg_loss=0.014089, lr=0.00498, time=1678.1 ms, rem=30.77 m
iter= 3910, img_loss=0.184106, reg_loss=0.014093, lr=0.00495, time=1694.0 ms, rem=30.77 m
iter= 3920, img_loss=0.183636, reg_loss=0.014094, lr=0.00493, time=1694.2 ms, rem=30.50 m
iter= 3930, img_loss=0.171445, reg_loss=0.014094, lr=0.00491, time=1694.3 ms, rem=30.22 m
iter= 3940, img_loss=0.171972, reg_loss=0.014096, lr=0.00489, time=1694.7 ms, rem=29.94 m
iter= 3950, img_loss=0.171012, reg_loss=0.014097, lr=0.00486, time=1694.0 ms, rem=29.65 m
iter= 3960, img_loss=0.175416, reg_loss=0.014096, lr=0.00484, time=1694.5 ms, rem=29.37 m
iter= 3970, img_loss=0.187829, reg_loss=0.014096, lr=0.00482, time=1694.5 ms, rem=29.09 m
iter= 3980, img_loss=0.176642, reg_loss=0.014099, lr=0.00480, time=1693.7 ms, rem=28.79 m
iter= 3990, img_loss=0.170316, reg_loss=0.014100, lr=0.00477, time=1694.3 ms, rem=28.52 m
iter= 4000, img_loss=0.169756, reg_loss=0.014099, lr=0.00475, time=1692.2 ms, rem=28.20 m
iter= 4010, img_loss=0.167728, reg_loss=0.014098, lr=0.00473, time=1665.7 ms, rem=27.48 m
iter= 4020, img_loss=0.173465, reg_loss=0.014096, lr=0.00471, time=1665.7 ms, rem=27.21 m
iter= 4030, img_loss=0.183952, reg_loss=0.014096, lr=0.00469, time=1665.8 ms, rem=26.93 m
iter= 4040, img_loss=0.180009, reg_loss=0.014096, lr=0.00467, time=1665.3 ms, rem=26.64 m
iter= 4050, img_loss=0.169011, reg_loss=0.014097, lr=0.00464, time=1666.0 ms, rem=26.38 m
iter= 4060, img_loss=0.176774, reg_loss=0.014098, lr=0.00462, time=1665.7 ms, rem=26.10 m
iter= 4070, img_loss=0.168355, reg_loss=0.014100, lr=0.00460, time=1666.4 ms, rem=25.83 m
iter= 4080, img_loss=0.176322, reg_loss=0.014100, lr=0.00458, time=1665.5 ms, rem=25.54 m
iter= 4090, img_loss=0.164084, reg_loss=0.014099, lr=0.00456, time=1666.2 ms, rem=25.27 m
iter= 4100, img_loss=0.181014, reg_loss=0.014096, lr=0.00454, time=1668.5 ms, rem=25.03 m
iter= 4110, img_loss=0.175362, reg_loss=0.014096, lr=0.00452, time=1682.4 ms, rem=24.96 m
iter= 4120, img_loss=0.172467, reg_loss=0.014099, lr=0.00450, time=1671.6 ms, rem=24.52 m
iter= 4130, img_loss=0.172743, reg_loss=0.014100, lr=0.00448, time=1665.7 ms, rem=24.15 m
iter= 4140, img_loss=0.183474, reg_loss=0.014101, lr=0.00446, time=1665.9 ms, rem=23.88 m
iter= 4150, img_loss=0.178844, reg_loss=0.014103, lr=0.00444, time=1666.1 ms, rem=23.60 m
iter= 4160, img_loss=0.174151, reg_loss=0.014104, lr=0.00441, time=1666.3 ms, rem=23.33 m
iter= 4170, img_loss=0.176303, reg_loss=0.014104, lr=0.00439, time=1667.2 ms, rem=23.06 m
iter= 4180, img_loss=0.175878, reg_loss=0.014103, lr=0.00437, time=1665.9 ms, rem=22.77 m
iter= 4190, img_loss=0.172618, reg_loss=0.014099, lr=0.00435, time=1666.9 ms, rem=22.50 m
iter= 4200, img_loss=0.175126, reg_loss=0.014095, lr=0.00433, time=1674.3 ms, rem=22.32 m
iter= 4210, img_loss=0.173152, reg_loss=0.014091, lr=0.00431, time=1704.6 ms, rem=22.44 m
iter= 4220, img_loss=0.168967, reg_loss=0.014089, lr=0.00429, time=1706.6 ms, rem=22.19 m
iter= 4230, img_loss=0.167440, reg_loss=0.014087, lr=0.00427, time=1707.5 ms, rem=21.91 m
iter= 4240, img_loss=0.175050, reg_loss=0.014086, lr=0.00426, time=1706.7 ms, rem=21.62 m
iter= 4250, img_loss=0.176458, reg_loss=0.014086, lr=0.00424, time=1706.4 ms, rem=21.33 m
iter= 4260, img_loss=0.179575, reg_loss=0.014087, lr=0.00422, time=1707.0 ms, rem=21.05 m
iter= 4270, img_loss=0.171330, reg_loss=0.014090, lr=0.00420, time=1706.3 ms, rem=20.76 m
iter= 4280, img_loss=0.173377, reg_loss=0.014091, lr=0.00418, time=1708.6 ms, rem=20.50 m
iter= 4290, img_loss=0.176746, reg_loss=0.014092, lr=0.00416, time=1706.5 ms, rem=20.19 m
iter= 4300, img_loss=0.169950, reg_loss=0.014089, lr=0.00414, time=1713.3 ms, rem=19.99 m
iter= 4310, img_loss=0.181657, reg_loss=0.014086, lr=0.00412, time=1663.4 ms, rem=19.13 m
iter= 4320, img_loss=0.169568, reg_loss=0.014086, lr=0.00410, time=1667.7 ms, rem=18.90 m
iter= 4330, img_loss=0.175534, reg_loss=0.014087, lr=0.00408, time=1671.0 ms, rem=18.66 m
iter= 4340, img_loss=0.180336, reg_loss=0.014088, lr=0.00406, time=1667.6 ms, rem=18.34 m
iter= 4350, img_loss=0.173371, reg_loss=0.014089, lr=0.00405, time=1668.2 ms, rem=18.07 m
iter= 4360, img_loss=0.173182, reg_loss=0.014089, lr=0.00403, time=1669.9 ms, rem=17.81 m
iter= 4370, img_loss=0.174528, reg_loss=0.014088, lr=0.00401, time=1667.9 ms, rem=17.51 m
iter= 4380, img_loss=0.174070, reg_loss=0.014087, lr=0.00399, time=1668.2 ms, rem=17.24 m
iter= 4390, img_loss=0.169433, reg_loss=0.014088, lr=0.00397, time=1668.1 ms, rem=16.96 m
iter= 4400, img_loss=0.179006, reg_loss=0.014089, lr=0.00395, time=1670.7 ms, rem=16.71 m
iter= 4410, img_loss=0.178133, reg_loss=0.014090, lr=0.00393, time=1665.4 ms, rem=16.38 m
iter= 4420, img_loss=0.173885, reg_loss=0.014091, lr=0.00392, time=1667.9 ms, rem=16.12 m
iter= 4430, img_loss=0.166349, reg_loss=0.014093, lr=0.00390, time=1666.3 ms, rem=15.83 m
iter= 4440, img_loss=0.168683, reg_loss=0.014092, lr=0.00388, time=1665.6 ms, rem=15.55 m
iter= 4450, img_loss=0.183646, reg_loss=0.014092, lr=0.00386, time=1666.3 ms, rem=15.27 m
iter= 4460, img_loss=0.172989, reg_loss=0.014092, lr=0.00385, time=1665.5 ms, rem=14.99 m
iter= 4470, img_loss=0.167520, reg_loss=0.014093, lr=0.00383, time=1666.0 ms, rem=14.72 m
iter= 4480, img_loss=0.178693, reg_loss=0.014090, lr=0.00381, time=1665.8 ms, rem=14.44 m
iter= 4490, img_loss=0.178728, reg_loss=0.014088, lr=0.00379, time=1665.7 ms, rem=14.16 m
iter= 4500, img_loss=0.177602, reg_loss=0.014087, lr=0.00378, time=1675.4 ms, rem=13.96 m
iter= 4510, img_loss=0.180658, reg_loss=0.014089, lr=0.00376, time=1705.3 ms, rem=13.93 m
iter= 4520, img_loss=0.168602, reg_loss=0.014089, lr=0.00374, time=1706.6 ms, rem=13.65 m
iter= 4530, img_loss=0.173795, reg_loss=0.014090, lr=0.00372, time=1707.3 ms, rem=13.37 m
iter= 4540, img_loss=0.174250, reg_loss=0.014090, lr=0.00371, time=1707.0 ms, rem=13.09 m
iter= 4550, img_loss=0.170206, reg_loss=0.014089, lr=0.00369, time=1706.4 ms, rem=12.80 m
iter= 4560, img_loss=0.177895, reg_loss=0.014088, lr=0.00367, time=1707.0 ms, rem=12.52 m
iter= 4570, img_loss=0.181738, reg_loss=0.014088, lr=0.00366, time=1706.3 ms, rem=12.23 m
iter= 4580, img_loss=0.174429, reg_loss=0.014088, lr=0.00364, time=1706.8 ms, rem=11.95 m
iter= 4590, img_loss=0.176788, reg_loss=0.014088, lr=0.00362, time=1706.1 ms, rem=11.66 m
iter= 4600, img_loss=0.177215, reg_loss=0.014087, lr=0.00361, time=1711.2 ms, rem=11.41 m
iter= 4610, img_loss=0.180991, reg_loss=0.014086, lr=0.00359, time=1642.9 ms, rem=10.68 m
iter= 4620, img_loss=0.171248, reg_loss=0.014085, lr=0.00357, time=1644.6 ms, rem=10.42 m
iter= 4630, img_loss=0.170814, reg_loss=0.014085, lr=0.00356, time=1645.1 ms, rem=10.14 m
iter= 4640, img_loss=0.173587, reg_loss=0.014084, lr=0.00354, time=1645.7 ms, rem=9.87 m
iter= 4650, img_loss=0.175687, reg_loss=0.014083, lr=0.00352, time=1644.8 ms, rem=9.59 m
iter= 4660, img_loss=0.184870, reg_loss=0.014081, lr=0.00351, time=1644.6 ms, rem=9.32 m
iter= 4670, img_loss=0.184353, reg_loss=0.014080, lr=0.00349, time=1644.4 ms, rem=9.04 m
iter= 4680, img_loss=0.167066, reg_loss=0.014080, lr=0.00347, time=1645.1 ms, rem=8.77 m
iter= 4690, img_loss=0.169407, reg_loss=0.014079, lr=0.00346, time=1645.1 ms, rem=8.50 m
iter= 4700, img_loss=0.167782, reg_loss=0.014079, lr=0.00344, time=1655.2 ms, rem=8.28 m
iter= 4710, img_loss=0.181758, reg_loss=0.014079, lr=0.00343, time=1642.8 ms, rem=7.94 m
iter= 4720, img_loss=0.176419, reg_loss=0.014078, lr=0.00341, time=1646.0 ms, rem=7.68 m
iter= 4730, img_loss=0.162510, reg_loss=0.014077, lr=0.00340, time=1645.1 ms, rem=7.40 m
iter= 4740, img_loss=0.176281, reg_loss=0.014075, lr=0.00338, time=1644.5 ms, rem=7.13 m
iter= 4750, img_loss=0.178362, reg_loss=0.014073, lr=0.00336, time=1644.2 ms, rem=6.85 m
iter= 4760, img_loss=0.174777, reg_loss=0.014072, lr=0.00335, time=1644.2 ms, rem=6.58 m
iter= 4770, img_loss=0.174028, reg_loss=0.014072, lr=0.00333, time=1645.1 ms, rem=6.31 m
iter= 4780, img_loss=0.171236, reg_loss=0.014072, lr=0.00332, time=1644.5 ms, rem=6.03 m
iter= 4790, img_loss=0.170102, reg_loss=0.014072, lr=0.00330, time=1644.8 ms, rem=5.76 m
iter= 4800, img_loss=0.172278, reg_loss=0.014072, lr=0.00329, time=1657.2 ms, rem=5.52 m
iter= 4810, img_loss=0.173700, reg_loss=0.014071, lr=0.00327, time=1664.2 ms, rem=5.27 m
iter= 4820, img_loss=0.172883, reg_loss=0.014071, lr=0.00326, time=1668.8 ms, rem=5.01 m
iter= 4830, img_loss=0.182382, reg_loss=0.014073, lr=0.00324, time=1667.3 ms, rem=4.72 m
iter= 4840, img_loss=0.171667, reg_loss=0.014076, lr=0.00323, time=1668.1 ms, rem=4.45 m
iter= 4850, img_loss=0.169306, reg_loss=0.014076, lr=0.00321, time=1667.8 ms, rem=4.17 m
iter= 4860, img_loss=0.176619, reg_loss=0.014076, lr=0.00320, time=1668.1 ms, rem=3.89 m
iter= 4870, img_loss=0.176546, reg_loss=0.014076, lr=0.00318, time=1667.9 ms, rem=3.61 m
iter= 4880, img_loss=0.169317, reg_loss=0.014075, lr=0.00317, time=1668.3 ms, rem=3.34 m
iter= 4890, img_loss=0.174168, reg_loss=0.014076, lr=0.00315, time=1667.4 ms, rem=3.06 m
iter= 4900, img_loss=0.178296, reg_loss=0.014076, lr=0.00314, time=1670.6 ms, rem=2.78 m
iter= 4910, img_loss=0.184195, reg_loss=0.014074, lr=0.00313, time=1665.4 ms, rem=2.50 m
iter= 4920, img_loss=0.180326, reg_loss=0.014073, lr=0.00311, time=1666.2 ms, rem=2.22 m
iter= 4930, img_loss=0.177452, reg_loss=0.014073, lr=0.00310, time=1666.3 ms, rem=1.94 m
iter= 4940, img_loss=0.164906, reg_loss=0.014072, lr=0.00308, time=1666.4 ms, rem=1.67 m
iter= 4950, img_loss=0.170648, reg_loss=0.014070, lr=0.00307, time=1665.9 ms, rem=1.39 m
iter= 4960, img_loss=0.177891, reg_loss=0.014070, lr=0.00305, time=1665.9 ms, rem=1.11 m
iter= 4970, img_loss=0.171516, reg_loss=0.014069, lr=0.00304, time=1665.6 ms, rem=49.97 s
iter= 4980, img_loss=0.178130, reg_loss=0.014068, lr=0.00303, time=1666.6 ms, rem=33.33 s
iter= 4990, img_loss=0.182476, reg_loss=0.014069, lr=0.00301, time=1665.5 ms, rem=16.65 s
iter= 5000, img_loss=0.173670, reg_loss=0.014071, lr=0.00300, time=1671.5 ms, rem=0.00 s
Running validation
MSE,      PSNR
0.04325571, 13.668
Base mesh has 171327 triangles and 86343 vertices.
Writing mesh:  out/fotress_out3/dmtet_mesh/mesh.obj
    writing 86343 vertices
    writing 183332 texcoords
    writing 86343 normals
    writing 171327 faces
Writing material:  out/fotress_out3/dmtet_mesh/mesh.mtl
Done exporting mesh
iter=    0, img_loss=0.179571, reg_loss=0.000001, lr=0.00030, time=220.2 ms, rem=18.35 m
iter=   10, img_loss=0.175264, reg_loss=0.001278, lr=0.00330, time=187.6 ms, rem=15.60 m
iter=   20, img_loss=0.174013, reg_loss=0.001904, lr=0.00630, time=187.1 ms, rem=15.53 m
iter=   30, img_loss=0.175729, reg_loss=0.002856, lr=0.00930, time=188.0 ms, rem=15.58 m
iter=   40, img_loss=0.172759, reg_loss=0.005823, lr=0.01230, time=186.8 ms, rem=15.44 m
iter=   50, img_loss=0.166878, reg_loss=0.009679, lr=0.01530, time=186.7 ms, rem=15.40 m
iter=   60, img_loss=0.172477, reg_loss=0.014084, lr=0.01830, time=187.7 ms, rem=15.45 m
iter=   70, img_loss=0.170405, reg_loss=0.019316, lr=0.02130, time=187.2 ms, rem=15.38 m
iter=   80, img_loss=0.169977, reg_loss=0.025239, lr=0.02430, time=186.9 ms, rem=15.32 m
iter=   90, img_loss=0.174771, reg_loss=0.031539, lr=0.02730, time=186.7 ms, rem=15.28 m
iter=  100, img_loss=0.169584, reg_loss=0.039155, lr=0.02999, time=189.5 ms, rem=15.47 m
iter=  110, img_loss=0.182519, reg_loss=0.031281, lr=0.02985, time=187.1 ms, rem=15.25 m
iter=  120, img_loss=0.175269, reg_loss=0.011365, lr=0.02971, time=186.9 ms, rem=15.20 m
iter=  130, img_loss=0.172273, reg_loss=0.004689, lr=0.02957, time=186.8 ms, rem=15.16 m
iter=  140, img_loss=0.183101, reg_loss=0.005046, lr=0.02944, time=187.0 ms, rem=15.15 m
iter=  150, img_loss=0.163509, reg_loss=0.011430, lr=0.02930, time=187.0 ms, rem=15.12 m
iter=  160, img_loss=0.165558, reg_loss=0.010149, lr=0.02917, time=187.0 ms, rem=15.08 m
iter=  170, img_loss=0.172218, reg_loss=0.007348, lr=0.02903, time=187.3 ms, rem=15.08 m
iter=  180, img_loss=0.173239, reg_loss=0.007188, lr=0.02890, time=186.3 ms, rem=14.97 m
iter=  190, img_loss=0.177186, reg_loss=0.008889, lr=0.02877, time=188.1 ms, rem=15.08 m
iter=  200, img_loss=0.176645, reg_loss=0.009311, lr=0.02864, time=189.1 ms, rem=15.13 m
iter=  210, img_loss=0.175257, reg_loss=0.008412, lr=0.02851, time=186.9 ms, rem=14.92 m
iter=  220, img_loss=0.179668, reg_loss=0.007918, lr=0.02837, time=187.0 ms, rem=14.89 m
iter=  230, img_loss=0.183745, reg_loss=0.008178, lr=0.02824, time=187.3 ms, rem=14.89 m
iter=  240, img_loss=0.176126, reg_loss=0.008140, lr=0.02811, time=186.6 ms, rem=14.81 m
iter=  250, img_loss=0.166843, reg_loss=0.007988, lr=0.02798, time=186.6 ms, rem=14.78 m
iter=  260, img_loss=0.178660, reg_loss=0.007466, lr=0.02786, time=187.0 ms, rem=14.77 m
iter=  270, img_loss=0.176161, reg_loss=0.007369, lr=0.02773, time=187.2 ms, rem=14.76 m
iter=  280, img_loss=0.183766, reg_loss=0.007449, lr=0.02760, time=186.9 ms, rem=14.70 m
iter=  290, img_loss=0.203592, reg_loss=0.007260, lr=0.02747, time=186.9 ms, rem=14.68 m
iter=  300, img_loss=0.178053, reg_loss=0.006859, lr=0.02735, time=189.4 ms, rem=14.84 m
iter=  310, img_loss=0.169242, reg_loss=0.006600, lr=0.02722, time=186.8 ms, rem=14.60 m
iter=  320, img_loss=0.175092, reg_loss=0.006564, lr=0.02710, time=186.8 ms, rem=14.57 m
iter=  330, img_loss=0.171157, reg_loss=0.006472, lr=0.02697, time=189.9 ms, rem=14.78 m
iter=  340, img_loss=0.173584, reg_loss=0.006417, lr=0.02685, time=186.9 ms, rem=14.51 m
iter=  350, img_loss=0.177671, reg_loss=0.006056, lr=0.02673, time=187.3 ms, rem=14.52 m
iter=  360, img_loss=0.172784, reg_loss=0.005736, lr=0.02660, time=187.2 ms, rem=14.48 m
iter=  370, img_loss=0.164188, reg_loss=0.005753, lr=0.02648, time=187.2 ms, rem=14.45 m
iter=  380, img_loss=0.173364, reg_loss=0.005730, lr=0.02636, time=187.1 ms, rem=14.40 m
iter=  390, img_loss=0.175519, reg_loss=0.005507, lr=0.02624, time=186.7 ms, rem=14.34 m
iter=  400, img_loss=0.183649, reg_loss=0.005475, lr=0.02612, time=188.3 ms, rem=14.44 m
iter=  410, img_loss=0.178328, reg_loss=0.005177, lr=0.02600, time=187.0 ms, rem=14.31 m
iter=  420, img_loss=0.173398, reg_loss=0.005074, lr=0.02588, time=187.2 ms, rem=14.29 m
iter=  430, img_loss=0.175623, reg_loss=0.004946, lr=0.02576, time=187.0 ms, rem=14.24 m
iter=  440, img_loss=0.180397, reg_loss=0.004739, lr=0.02564, time=186.9 ms, rem=14.20 m
iter=  450, img_loss=0.170295, reg_loss=0.004756, lr=0.02552, time=186.9 ms, rem=14.18 m
iter=  460, img_loss=0.173010, reg_loss=0.004582, lr=0.02541, time=186.9 ms, rem=14.14 m
iter=  470, img_loss=0.174456, reg_loss=0.004381, lr=0.02529, time=186.9 ms, rem=14.11 m
iter=  480, img_loss=0.191610, reg_loss=0.004282, lr=0.02517, time=187.5 ms, rem=14.13 m
iter=  490, img_loss=0.177385, reg_loss=0.004229, lr=0.02506, time=187.0 ms, rem=14.06 m
iter=  500, img_loss=0.169018, reg_loss=0.004261, lr=0.02494, time=191.1 ms, rem=14.34 m
iter=  510, img_loss=0.172222, reg_loss=0.004044, lr=0.02483, time=187.2 ms, rem=14.01 m
iter=  520, img_loss=0.175774, reg_loss=0.003854, lr=0.02471, time=186.7 ms, rem=13.94 m
iter=  530, img_loss=0.168308, reg_loss=0.003784, lr=0.02460, time=187.3 ms, rem=13.95 m
iter=  540, img_loss=0.174760, reg_loss=0.003860, lr=0.02449, time=187.0 ms, rem=13.90 m
iter=  550, img_loss=0.166970, reg_loss=0.003583, lr=0.02437, time=186.9 ms, rem=13.86 m
iter=  560, img_loss=0.169623, reg_loss=0.003418, lr=0.02426, time=186.5 ms, rem=13.80 m
iter=  570, img_loss=0.168218, reg_loss=0.003316, lr=0.02415, time=186.8 ms, rem=13.79 m
iter=  580, img_loss=0.168414, reg_loss=0.003277, lr=0.02404, time=186.6 ms, rem=13.75 m
iter=  590, img_loss=0.180608, reg_loss=0.003310, lr=0.02393, time=187.1 ms, rem=13.75 m
iter=  600, img_loss=0.175706, reg_loss=0.003218, lr=0.02382, time=188.3 ms, rem=13.81 m
iter=  610, img_loss=0.175560, reg_loss=0.003108, lr=0.02371, time=187.1 ms, rem=13.69 m
iter=  620, img_loss=0.175049, reg_loss=0.002898, lr=0.02360, time=188.1 ms, rem=13.73 m
iter=  630, img_loss=0.174905, reg_loss=0.002884, lr=0.02349, time=187.1 ms, rem=13.62 m
iter=  640, img_loss=0.175244, reg_loss=0.002915, lr=0.02338, time=187.0 ms, rem=13.59 m
iter=  650, img_loss=0.164505, reg_loss=0.002821, lr=0.02328, time=187.1 ms, rem=13.56 m
iter=  660, img_loss=0.164510, reg_loss=0.002701, lr=0.02317, time=186.5 ms, rem=13.49 m
iter=  670, img_loss=0.170757, reg_loss=0.002529, lr=0.02306, time=187.2 ms, rem=13.51 m
iter=  680, img_loss=0.159535, reg_loss=0.002498, lr=0.02296, time=187.0 ms, rem=13.46 m
iter=  690, img_loss=0.168547, reg_loss=0.002498, lr=0.02285, time=186.9 ms, rem=13.43 m
iter=  700, img_loss=0.162990, reg_loss=0.002434, lr=0.02275, time=188.2 ms, rem=13.49 m
iter=  710, img_loss=0.173272, reg_loss=0.002373, lr=0.02264, time=186.7 ms, rem=13.35 m
iter=  720, img_loss=0.175757, reg_loss=0.002300, lr=0.02254, time=186.9 ms, rem=13.33 m
iter=  730, img_loss=0.169112, reg_loss=0.002258, lr=0.02243, time=187.0 ms, rem=13.31 m
iter=  740, img_loss=0.162727, reg_loss=0.002163, lr=0.02233, time=186.8 ms, rem=13.26 m
iter=  750, img_loss=0.170332, reg_loss=0.002111, lr=0.02223, time=186.8 ms, rem=13.23 m
iter=  760, img_loss=0.169276, reg_loss=0.002105, lr=0.02213, time=189.8 ms, rem=13.41 m
iter=  770, img_loss=0.178459, reg_loss=0.002039, lr=0.02203, time=187.0 ms, rem=13.19 m
iter=  780, img_loss=0.170839, reg_loss=0.001977, lr=0.02192, time=186.7 ms, rem=13.13 m
iter=  790, img_loss=0.172264, reg_loss=0.001906, lr=0.02182, time=186.4 ms, rem=13.08 m
iter=  800, img_loss=0.169893, reg_loss=0.001847, lr=0.02172, time=188.7 ms, rem=13.21 m
iter=  810, img_loss=0.172779, reg_loss=0.001831, lr=0.02162, time=186.8 ms, rem=13.04 m
iter=  820, img_loss=0.174589, reg_loss=0.001803, lr=0.02152, time=187.2 ms, rem=13.04 m
iter=  830, img_loss=0.169254, reg_loss=0.001767, lr=0.02143, time=187.1 ms, rem=13.01 m
iter=  840, img_loss=0.165828, reg_loss=0.001721, lr=0.02133, time=186.7 ms, rem=12.94 m
iter=  850, img_loss=0.171926, reg_loss=0.001679, lr=0.02123, time=187.0 ms, rem=12.94 m
iter=  860, img_loss=0.176146, reg_loss=0.001649, lr=0.02113, time=187.2 ms, rem=12.92 m
iter=  870, img_loss=0.164226, reg_loss=0.001600, lr=0.02103, time=186.9 ms, rem=12.86 m
iter=  880, img_loss=0.173625, reg_loss=0.001539, lr=0.02094, time=186.9 ms, rem=12.84 m
iter=  890, img_loss=0.173925, reg_loss=0.001522, lr=0.02084, time=186.9 ms, rem=12.80 m
iter=  900, img_loss=0.168412, reg_loss=0.001496, lr=0.02075, time=190.3 ms, rem=13.00 m
iter=  910, img_loss=0.180521, reg_loss=0.001496, lr=0.02065, time=187.2 ms, rem=12.76 m
iter=  920, img_loss=0.165326, reg_loss=0.001486, lr=0.02056, time=186.6 ms, rem=12.69 m
iter=  930, img_loss=0.161388, reg_loss=0.001450, lr=0.02046, time=187.0 ms, rem=12.68 m
iter=  940, img_loss=0.171325, reg_loss=0.001404, lr=0.02037, time=186.7 ms, rem=12.63 m
iter=  950, img_loss=0.170429, reg_loss=0.001368, lr=0.02027, time=187.2 ms, rem=12.64 m
iter=  960, img_loss=0.162224, reg_loss=0.001322, lr=0.02018, time=186.9 ms, rem=12.58 m
iter=  970, img_loss=0.168255, reg_loss=0.001311, lr=0.02009, time=186.7 ms, rem=12.54 m
iter=  980, img_loss=0.160598, reg_loss=0.001272, lr=0.01999, time=186.8 ms, rem=12.51 m
iter=  990, img_loss=0.175251, reg_loss=0.001267, lr=0.01990, time=187.0 ms, rem=12.50 m
iter= 1000, img_loss=0.162367, reg_loss=0.001287, lr=0.01981, time=188.5 ms, rem=12.57 m
iter= 1010, img_loss=0.172148, reg_loss=0.001262, lr=0.01972, time=186.6 ms, rem=12.41 m
iter= 1020, img_loss=0.164092, reg_loss=0.001244, lr=0.01963, time=187.2 ms, rem=12.42 m
iter= 1030, img_loss=0.168645, reg_loss=0.001233, lr=0.01954, time=186.9 ms, rem=12.36 m
iter= 1040, img_loss=0.172811, reg_loss=0.001212, lr=0.01945, time=188.9 ms, rem=12.47 m
iter= 1050, img_loss=0.170297, reg_loss=0.001197, lr=0.01936, time=187.4 ms, rem=12.34 m
iter= 1060, img_loss=0.160982, reg_loss=0.001189, lr=0.01927, time=186.7 ms, rem=12.26 m
iter= 1070, img_loss=0.168811, reg_loss=0.001181, lr=0.01918, time=186.7 ms, rem=12.23 m
iter= 1080, img_loss=0.178687, reg_loss=0.001180, lr=0.01910, time=186.9 ms, rem=12.21 m
iter= 1090, img_loss=0.176749, reg_loss=0.001166, lr=0.01901, time=186.9 ms, rem=12.18 m
iter= 1100, img_loss=0.163408, reg_loss=0.001145, lr=0.01892, time=189.7 ms, rem=12.33 m
iter= 1110, img_loss=0.169351, reg_loss=0.001134, lr=0.01883, time=186.7 ms, rem=12.11 m
iter= 1120, img_loss=0.164297, reg_loss=0.001144, lr=0.01875, time=186.9 ms, rem=12.09 m
iter= 1130, img_loss=0.171169, reg_loss=0.001160, lr=0.01866, time=186.9 ms, rem=12.06 m
iter= 1140, img_loss=0.166212, reg_loss=0.001140, lr=0.01857, time=186.6 ms, rem=12.00 m
iter= 1150, img_loss=0.169487, reg_loss=0.001127, lr=0.01849, time=186.9 ms, rem=11.99 m
iter= 1160, img_loss=0.175599, reg_loss=0.001197, lr=0.01840, time=187.4 ms, rem=11.99 m
iter= 1170, img_loss=0.170167, reg_loss=0.001171, lr=0.01832, time=187.0 ms, rem=11.94 m
iter= 1180, img_loss=0.173807, reg_loss=0.001158, lr=0.01824, time=190.4 ms, rem=12.13 m
iter= 1190, img_loss=0.166045, reg_loss=0.001156, lr=0.01815, time=187.0 ms, rem=11.87 m
iter= 1200, img_loss=0.170622, reg_loss=0.001158, lr=0.01807, time=190.9 ms, rem=12.09 m
iter= 1210, img_loss=0.180027, reg_loss=0.001167, lr=0.01799, time=189.1 ms, rem=11.95 m
iter= 1220, img_loss=0.166439, reg_loss=0.001192, lr=0.01790, time=188.5 ms, rem=11.88 m
iter= 1230, img_loss=0.167856, reg_loss=0.001222, lr=0.01782, time=189.2 ms, rem=11.89 m
iter= 1240, img_loss=0.166510, reg_loss=0.001215, lr=0.01774, time=187.5 ms, rem=11.75 m
iter= 1250, img_loss=0.169249, reg_loss=0.001219, lr=0.01766, time=188.2 ms, rem=11.76 m
iter= 1260, img_loss=0.177198, reg_loss=0.001239, lr=0.01758, time=189.6 ms, rem=11.82 m
iter= 1270, img_loss=0.172935, reg_loss=0.001254, lr=0.01750, time=190.1 ms, rem=11.82 m
iter= 1280, img_loss=0.170568, reg_loss=0.001270, lr=0.01741, time=189.1 ms, rem=11.72 m
iter= 1290, img_loss=0.177774, reg_loss=0.001300, lr=0.01733, time=186.8 ms, rem=11.55 m
iter= 1300, img_loss=0.167216, reg_loss=0.001314, lr=0.01726, time=190.6 ms, rem=11.75 m
iter= 1310, img_loss=0.175484, reg_loss=0.001325, lr=0.01718, time=186.9 ms, rem=11.49 m
iter= 1320, img_loss=0.165776, reg_loss=0.001349, lr=0.01710, time=187.3 ms, rem=11.49 m
iter= 1330, img_loss=0.176543, reg_loss=0.001383, lr=0.01702, time=186.9 ms, rem=11.43 m
iter= 1340, img_loss=0.174670, reg_loss=0.001399, lr=0.01694, time=187.0 ms, rem=11.41 m
iter= 1350, img_loss=0.167103, reg_loss=0.001420, lr=0.01686, time=187.4 ms, rem=11.40 m
iter= 1360, img_loss=0.166300, reg_loss=0.001441, lr=0.01678, time=187.4 ms, rem=11.37 m
iter= 1370, img_loss=0.165459, reg_loss=0.001442, lr=0.01671, time=189.9 ms, rem=11.49 m
iter= 1380, img_loss=0.166958, reg_loss=0.001453, lr=0.01663, time=187.2 ms, rem=11.30 m
iter= 1390, img_loss=0.170140, reg_loss=0.001485, lr=0.01655, time=187.6 ms, rem=11.29 m
iter= 1400, img_loss=0.160163, reg_loss=0.001522, lr=0.01648, time=190.7 ms, rem=11.44 m
iter= 1410, img_loss=0.169987, reg_loss=0.001533, lr=0.01640, time=187.0 ms, rem=11.19 m
iter= 1420, img_loss=0.163641, reg_loss=0.001533, lr=0.01633, time=187.1 ms, rem=11.17 m
iter= 1430, img_loss=0.173136, reg_loss=0.001555, lr=0.01625, time=187.3 ms, rem=11.15 m
iter= 1440, img_loss=0.175166, reg_loss=0.001597, lr=0.01618, time=187.6 ms, rem=11.13 m
iter= 1450, img_loss=0.162924, reg_loss=0.001628, lr=0.01610, time=187.2 ms, rem=11.07 m
iter= 1460, img_loss=0.172393, reg_loss=0.001647, lr=0.01603, time=186.9 ms, rem=11.03 m
iter= 1470, img_loss=0.169862, reg_loss=0.001656, lr=0.01596, time=187.1 ms, rem=11.01 m
iter= 1480, img_loss=0.176639, reg_loss=0.001685, lr=0.01588, time=187.0 ms, rem=10.97 m
iter= 1490, img_loss=0.165043, reg_loss=0.001726, lr=0.01581, time=186.7 ms, rem=10.92 m
iter= 1500, img_loss=0.171703, reg_loss=0.001731, lr=0.01574, time=189.6 ms, rem=11.06 m
iter= 1510, img_loss=0.166804, reg_loss=0.001767, lr=0.01566, time=187.3 ms, rem=10.90 m
iter= 1520, img_loss=0.157097, reg_loss=0.001793, lr=0.01559, time=187.4 ms, rem=10.87 m
iter= 1530, img_loss=0.165137, reg_loss=0.001848, lr=0.01552, time=186.7 ms, rem=10.80 m
iter= 1540, img_loss=0.169260, reg_loss=0.001873, lr=0.01545, time=187.0 ms, rem=10.78 m
iter= 1550, img_loss=0.158838, reg_loss=0.001878, lr=0.01538, time=186.8 ms, rem=10.74 m
iter= 1560, img_loss=0.170286, reg_loss=0.001905, lr=0.01531, time=187.1 ms, rem=10.73 m
iter= 1570, img_loss=0.164717, reg_loss=0.001944, lr=0.01524, time=187.3 ms, rem=10.71 m
iter= 1580, img_loss=0.171319, reg_loss=0.001961, lr=0.01517, time=187.0 ms, rem=10.66 m
iter= 1590, img_loss=0.164689, reg_loss=0.001968, lr=0.01510, time=187.3 ms, rem=10.64 m
iter= 1600, img_loss=0.160317, reg_loss=0.001999, lr=0.01503, time=191.9 ms, rem=10.88 m
iter= 1610, img_loss=0.159803, reg_loss=0.002053, lr=0.01496, time=187.2 ms, rem=10.58 m
iter= 1620, img_loss=0.167181, reg_loss=0.002048, lr=0.01489, time=187.0 ms, rem=10.53 m
iter= 1630, img_loss=0.171097, reg_loss=0.002094, lr=0.01482, time=186.6 ms, rem=10.48 m
iter= 1640, img_loss=0.160427, reg_loss=0.002136, lr=0.01475, time=186.9 ms, rem=10.47 m
iter= 1650, img_loss=0.173857, reg_loss=0.002153, lr=0.01469, time=186.8 ms, rem=10.43 m
iter= 1660, img_loss=0.158338, reg_loss=0.002183, lr=0.01462, time=186.8 ms, rem=10.40 m
iter= 1670, img_loss=0.170883, reg_loss=0.002216, lr=0.01455, time=187.0 ms, rem=10.38 m
iter= 1680, img_loss=0.163289, reg_loss=0.002260, lr=0.01449, time=187.2 ms, rem=10.36 m
iter= 1690, img_loss=0.163321, reg_loss=0.002283, lr=0.01442, time=187.5 ms, rem=10.35 m
iter= 1700, img_loss=0.165817, reg_loss=0.002325, lr=0.01435, time=191.9 ms, rem=10.55 m
iter= 1710, img_loss=0.165926, reg_loss=0.002333, lr=0.01429, time=187.1 ms, rem=10.26 m
iter= 1720, img_loss=0.171931, reg_loss=0.002355, lr=0.01422, time=186.7 ms, rem=10.21 m
iter= 1730, img_loss=0.156777, reg_loss=0.002404, lr=0.01416, time=186.9 ms, rem=10.19 m
iter= 1740, img_loss=0.169104, reg_loss=0.002437, lr=0.01409, time=188.5 ms, rem=10.24 m
iter= 1750, img_loss=0.156512, reg_loss=0.002461, lr=0.01403, time=186.7 ms, rem=10.11 m
iter= 1760, img_loss=0.166530, reg_loss=0.002502, lr=0.01396, time=186.8 ms, rem=10.09 m
iter= 1770, img_loss=0.180640, reg_loss=0.002534, lr=0.01390, time=187.1 ms, rem=10.07 m
iter= 1780, img_loss=0.161669, reg_loss=0.002633, lr=0.01383, time=186.9 ms, rem=10.03 m
iter= 1790, img_loss=0.156885, reg_loss=0.002660, lr=0.01377, time=187.2 ms, rem=10.02 m
iter= 1800, img_loss=0.163413, reg_loss=0.002647, lr=0.01371, time=190.3 ms, rem=10.15 m
iter= 1810, img_loss=0.164885, reg_loss=0.002681, lr=0.01364, time=187.1 ms, rem=9.95 m
iter= 1820, img_loss=0.158211, reg_loss=0.002733, lr=0.01358, time=187.1 ms, rem=9.92 m
iter= 1830, img_loss=0.167683, reg_loss=0.002767, lr=0.01352, time=187.2 ms, rem=9.89 m
iter= 1840, img_loss=0.171008, reg_loss=0.002834, lr=0.01346, time=187.2 ms, rem=9.86 m
iter= 1850, img_loss=0.163640, reg_loss=0.002876, lr=0.01339, time=187.2 ms, rem=9.83 m
iter= 1860, img_loss=0.158472, reg_loss=0.002896, lr=0.01333, time=187.6 ms, rem=9.82 m
iter= 1870, img_loss=0.171838, reg_loss=0.002939, lr=0.01327, time=186.8 ms, rem=9.74 m
iter= 1880, img_loss=0.165523, reg_loss=0.002983, lr=0.01321, time=189.6 ms, rem=9.86 m
iter= 1890, img_loss=0.154574, reg_loss=0.003005, lr=0.01315, time=187.2 ms, rem=9.70 m
iter= 1900, img_loss=0.152337, reg_loss=0.003018, lr=0.01309, time=188.8 ms, rem=9.75 m
iter= 1910, img_loss=0.157032, reg_loss=0.003031, lr=0.01303, time=187.2 ms, rem=9.64 m
iter= 1920, img_loss=0.165511, reg_loss=0.003072, lr=0.01297, time=187.4 ms, rem=9.62 m
iter= 1930, img_loss=0.160039, reg_loss=0.003136, lr=0.01291, time=187.3 ms, rem=9.58 m
iter= 1940, img_loss=0.165566, reg_loss=0.003204, lr=0.01285, time=187.6 ms, rem=9.57 m
iter= 1950, img_loss=0.157144, reg_loss=0.003265, lr=0.01279, time=187.3 ms, rem=9.52 m
iter= 1960, img_loss=0.153913, reg_loss=0.003289, lr=0.01273, time=187.2 ms, rem=9.48 m
iter= 1970, img_loss=0.169611, reg_loss=0.003337, lr=0.01267, time=187.5 ms, rem=9.47 m
iter= 1980, img_loss=0.153630, reg_loss=0.003375, lr=0.01262, time=187.4 ms, rem=9.43 m
iter= 1990, img_loss=0.170884, reg_loss=0.003415, lr=0.01256, time=187.4 ms, rem=9.40 m
iter= 2000, img_loss=0.156950, reg_loss=0.003472, lr=0.01250, time=188.5 ms, rem=9.42 m
iter= 2010, img_loss=0.164566, reg_loss=0.003499, lr=0.01244, time=187.3 ms, rem=9.33 m
iter= 2020, img_loss=0.160503, reg_loss=0.003548, lr=0.01239, time=187.3 ms, rem=9.30 m
iter= 2030, img_loss=0.151441, reg_loss=0.004049, lr=0.01233, time=187.4 ms, rem=9.28 m
iter= 2040, img_loss=0.158910, reg_loss=0.004022, lr=0.01227, time=187.5 ms, rem=9.25 m
iter= 2050, img_loss=0.160975, reg_loss=0.003818, lr=0.01222, time=187.1 ms, rem=9.20 m
iter= 2060, img_loss=0.160404, reg_loss=0.003790, lr=0.01216, time=188.4 ms, rem=9.23 m
iter= 2070, img_loss=0.164551, reg_loss=0.003851, lr=0.01210, time=188.6 ms, rem=9.21 m
iter= 2080, img_loss=0.161370, reg_loss=0.003885, lr=0.01205, time=187.2 ms, rem=9.11 m
iter= 2090, img_loss=0.157219, reg_loss=0.003937, lr=0.01199, time=187.3 ms, rem=9.08 m
iter= 2100, img_loss=0.157579, reg_loss=0.004015, lr=0.01194, time=189.8 ms, rem=9.17 m
iter= 2110, img_loss=0.152261, reg_loss=0.004223, lr=0.01188, time=186.7 ms, rem=8.99 m
iter= 2120, img_loss=0.170992, reg_loss=0.004119, lr=0.01183, time=187.1 ms, rem=8.98 m
iter= 2130, img_loss=0.158960, reg_loss=0.004147, lr=0.01177, time=188.0 ms, rem=8.99 m
iter= 2140, img_loss=0.150607, reg_loss=0.004183, lr=0.01172, time=189.0 ms, rem=9.01 m
iter= 2150, img_loss=0.152423, reg_loss=0.004265, lr=0.01167, time=187.6 ms, rem=8.91 m
iter= 2160, img_loss=0.169448, reg_loss=0.004303, lr=0.01161, time=187.3 ms, rem=8.87 m
iter= 2170, img_loss=0.153007, reg_loss=0.004368, lr=0.01156, time=187.5 ms, rem=8.84 m
iter= 2180, img_loss=0.151280, reg_loss=0.004438, lr=0.01151, time=187.7 ms, rem=8.82 m
iter= 2190, img_loss=0.152920, reg_loss=0.004462, lr=0.01145, time=187.6 ms, rem=8.79 m
iter= 2200, img_loss=0.144840, reg_loss=0.004484, lr=0.01140, time=190.1 ms, rem=8.87 m
iter= 2210, img_loss=0.162697, reg_loss=0.004552, lr=0.01135, time=186.9 ms, rem=8.69 m
iter= 2220, img_loss=0.145232, reg_loss=0.004665, lr=0.01130, time=187.7 ms, rem=8.70 m
iter= 2230, img_loss=0.149825, reg_loss=0.004711, lr=0.01124, time=187.3 ms, rem=8.65 m
iter= 2240, img_loss=0.141432, reg_loss=0.004728, lr=0.01119, time=187.1 ms, rem=8.61 m
iter= 2250, img_loss=0.149311, reg_loss=0.004802, lr=0.01114, time=187.3 ms, rem=8.58 m
iter= 2260, img_loss=0.160283, reg_loss=0.004855, lr=0.01109, time=187.6 ms, rem=8.57 m
iter= 2270, img_loss=0.150359, reg_loss=0.004982, lr=0.01104, time=187.5 ms, rem=8.53 m
iter= 2280, img_loss=0.150486, reg_loss=0.005093, lr=0.01099, time=189.9 ms, rem=8.61 m
iter= 2290, img_loss=0.151896, reg_loss=0.005145, lr=0.01094, time=187.8 ms, rem=8.48 m
iter= 2300, img_loss=0.155291, reg_loss=0.005204, lr=0.01089, time=189.1 ms, rem=8.51 m
iter= 2310, img_loss=0.144613, reg_loss=0.005275, lr=0.01084, time=187.4 ms, rem=8.40 m
iter= 2320, img_loss=0.149193, reg_loss=0.005349, lr=0.01079, time=187.7 ms, rem=8.39 m
iter= 2330, img_loss=0.156138, reg_loss=0.005429, lr=0.01074, time=187.6 ms, rem=8.35 m
iter= 2340, img_loss=0.155422, reg_loss=0.005566, lr=0.01069, time=187.4 ms, rem=8.31 m
iter= 2350, img_loss=0.144030, reg_loss=0.005611, lr=0.01064, time=187.5 ms, rem=8.28 m
iter= 2360, img_loss=0.143649, reg_loss=0.005623, lr=0.01059, time=187.9 ms, rem=8.27 m
iter= 2370, img_loss=0.153134, reg_loss=0.005636, lr=0.01054, time=187.7 ms, rem=8.23 m
iter= 2380, img_loss=0.152152, reg_loss=0.005776, lr=0.01049, time=187.8 ms, rem=8.20 m
iter= 2390, img_loss=0.152848, reg_loss=0.005911, lr=0.01045, time=187.3 ms, rem=8.15 m
iter= 2400, img_loss=0.163662, reg_loss=0.006025, lr=0.01040, time=190.9 ms, rem=8.27 m
iter= 2410, img_loss=0.160661, reg_loss=0.006116, lr=0.01035, time=188.6 ms, rem=8.14 m
iter= 2420, img_loss=0.154701, reg_loss=0.006156, lr=0.01030, time=187.3 ms, rem=8.05 m
iter= 2430, img_loss=0.152291, reg_loss=0.006276, lr=0.01025, time=186.8 ms, rem=8.00 m
iter= 2440, img_loss=0.148465, reg_loss=0.006343, lr=0.01021, time=187.3 ms, rem=7.99 m
iter= 2450, img_loss=0.149724, reg_loss=0.006374, lr=0.01016, time=187.2 ms, rem=7.96 m
iter= 2460, img_loss=0.149407, reg_loss=0.006498, lr=0.01011, time=188.0 ms, rem=7.96 m
iter= 2470, img_loss=0.143112, reg_loss=0.006622, lr=0.01007, time=188.2 ms, rem=7.94 m
iter= 2480, img_loss=0.157134, reg_loss=0.006763, lr=0.01002, time=187.8 ms, rem=7.89 m
iter= 2490, img_loss=0.145479, reg_loss=0.006870, lr=0.00998, time=187.8 ms, rem=7.86 m
iter= 2500, img_loss=0.149497, reg_loss=0.006942, lr=0.00993, time=190.4 ms, rem=7.93 m
iter= 2510, img_loss=0.140915, reg_loss=0.006985, lr=0.00988, time=187.0 ms, rem=7.76 m
iter= 2520, img_loss=0.151023, reg_loss=0.007066, lr=0.00984, time=187.7 ms, rem=7.76 m
iter= 2530, img_loss=0.146643, reg_loss=0.007198, lr=0.00979, time=187.2 ms, rem=7.71 m
iter= 2540, img_loss=0.146567, reg_loss=0.007304, lr=0.00975, time=187.7 ms, rem=7.69 m
iter= 2550, img_loss=0.140056, reg_loss=0.007395, lr=0.00970, time=188.9 ms, rem=7.71 m
iter= 2560, img_loss=0.153198, reg_loss=0.007450, lr=0.00966, time=188.3 ms, rem=7.66 m
iter= 2570, img_loss=0.142329, reg_loss=0.007645, lr=0.00961, time=187.7 ms, rem=7.60 m
iter= 2580, img_loss=0.143325, reg_loss=0.007685, lr=0.00957, time=187.6 ms, rem=7.57 m
iter= 2590, img_loss=0.154860, reg_loss=0.007800, lr=0.00953, time=188.0 ms, rem=7.55 m
iter= 2600, img_loss=0.143972, reg_loss=0.007925, lr=0.00948, time=191.1 ms, rem=7.64 m
iter= 2610, img_loss=0.146282, reg_loss=0.008021, lr=0.00944, time=187.7 ms, rem=7.48 m
iter= 2620, img_loss=0.146380, reg_loss=0.008118, lr=0.00940, time=187.3 ms, rem=7.43 m
iter= 2630, img_loss=0.136296, reg_loss=0.008211, lr=0.00935, time=187.7 ms, rem=7.41 m
iter= 2640, img_loss=0.143677, reg_loss=0.008248, lr=0.00931, time=187.7 ms, rem=7.38 m
iter= 2650, img_loss=0.141495, reg_loss=0.008409, lr=0.00927, time=187.3 ms, rem=7.34 m
iter= 2660, img_loss=0.138858, reg_loss=0.008504, lr=0.00922, time=187.6 ms, rem=7.32 m
iter= 2670, img_loss=0.137039, reg_loss=0.008614, lr=0.00918, time=187.8 ms, rem=7.29 m
iter= 2680, img_loss=0.134796, reg_loss=0.008677, lr=0.00914, time=187.7 ms, rem=7.26 m
iter= 2690, img_loss=0.136923, reg_loss=0.008748, lr=0.00910, time=189.7 ms, rem=7.30 m
iter= 2700, img_loss=0.141178, reg_loss=0.008855, lr=0.00906, time=191.3 ms, rem=7.33 m
iter= 2710, img_loss=0.140008, reg_loss=0.008967, lr=0.00901, time=187.9 ms, rem=7.17 m
iter= 2720, img_loss=0.139126, reg_loss=0.009047, lr=0.00897, time=187.8 ms, rem=7.14 m
iter= 2730, img_loss=0.128240, reg_loss=0.009169, lr=0.00893, time=187.3 ms, rem=7.09 m
iter= 2740, img_loss=0.132907, reg_loss=0.009316, lr=0.00889, time=187.7 ms, rem=7.07 m
iter= 2750, img_loss=0.136196, reg_loss=0.009459, lr=0.00885, time=187.5 ms, rem=7.03 m
iter= 2760, img_loss=0.131808, reg_loss=0.009613, lr=0.00881, time=188.0 ms, rem=7.02 m
iter= 2770, img_loss=0.129275, reg_loss=0.009732, lr=0.00877, time=188.1 ms, rem=6.99 m
iter= 2780, img_loss=0.137179, reg_loss=0.009796, lr=0.00873, time=187.8 ms, rem=6.95 m
iter= 2790, img_loss=0.132317, reg_loss=0.009939, lr=0.00869, time=188.1 ms, rem=6.93 m
iter= 2800, img_loss=0.128110, reg_loss=0.010001, lr=0.00865, time=190.0 ms, rem=6.97 m
iter= 2810, img_loss=0.143729, reg_loss=0.010201, lr=0.00861, time=188.0 ms, rem=6.86 m
iter= 2820, img_loss=0.128732, reg_loss=0.010494, lr=0.00857, time=188.6 ms, rem=6.85 m
iter= 2830, img_loss=0.120445, reg_loss=0.010641, lr=0.00853, time=187.6 ms, rem=6.78 m
iter= 2840, img_loss=0.135144, reg_loss=0.010770, lr=0.00849, time=190.0 ms, rem=6.84 m
iter= 2850, img_loss=0.139747, reg_loss=0.010952, lr=0.00845, time=188.1 ms, rem=6.74 m
iter= 2860, img_loss=0.124599, reg_loss=0.011102, lr=0.00841, time=188.0 ms, rem=6.70 m
iter= 2870, img_loss=0.130574, reg_loss=0.011311, lr=0.00837, time=188.3 ms, rem=6.68 m
iter= 2880, img_loss=0.130405, reg_loss=0.011614, lr=0.00834, time=188.5 ms, rem=6.66 m
iter= 2890, img_loss=0.124328, reg_loss=0.011779, lr=0.00830, time=188.3 ms, rem=6.62 m
iter= 2900, img_loss=0.126948, reg_loss=0.011735, lr=0.00826, time=189.6 ms, rem=6.64 m
iter= 2910, img_loss=0.123375, reg_loss=0.011796, lr=0.00822, time=188.5 ms, rem=6.57 m
iter= 2920, img_loss=0.130016, reg_loss=0.012053, lr=0.00818, time=188.3 ms, rem=6.53 m
iter= 2930, img_loss=0.119997, reg_loss=0.012245, lr=0.00815, time=188.5 ms, rem=6.50 m
iter= 2940, img_loss=0.126761, reg_loss=0.012483, lr=0.00811, time=188.1 ms, rem=6.46 m
iter= 2950, img_loss=0.129879, reg_loss=0.012442, lr=0.00807, time=188.7 ms, rem=6.45 m
iter= 2960, img_loss=0.121884, reg_loss=0.012615, lr=0.00803, time=188.5 ms, rem=6.41 m
iter= 2970, img_loss=0.117516, reg_loss=0.012813, lr=0.00800, time=188.2 ms, rem=6.37 m
iter= 2980, img_loss=0.116180, reg_loss=0.013026, lr=0.00796, time=188.7 ms, rem=6.35 m
iter= 2990, img_loss=0.118264, reg_loss=0.013210, lr=0.00792, time=188.4 ms, rem=6.31 m
iter= 3000, img_loss=0.119623, reg_loss=0.013326, lr=0.00789, time=191.5 ms, rem=6.38 m
iter= 3010, img_loss=0.106748, reg_loss=0.013313, lr=0.00785, time=187.8 ms, rem=6.23 m
iter= 3020, img_loss=0.127830, reg_loss=0.013343, lr=0.00781, time=188.4 ms, rem=6.22 m
iter= 3030, img_loss=0.117846, reg_loss=0.013540, lr=0.00778, time=188.1 ms, rem=6.18 m
iter= 3040, img_loss=0.127259, reg_loss=0.013688, lr=0.00774, time=187.9 ms, rem=6.14 m
iter= 3050, img_loss=0.121257, reg_loss=0.013756, lr=0.00771, time=188.4 ms, rem=6.12 m
iter= 3060, img_loss=0.122274, reg_loss=0.013848, lr=0.00767, time=189.3 ms, rem=6.12 m
iter= 3070, img_loss=0.113887, reg_loss=0.013825, lr=0.00764, time=188.4 ms, rem=6.06 m
iter= 3080, img_loss=0.119848, reg_loss=0.013714, lr=0.00760, time=188.8 ms, rem=6.04 m
iter= 3090, img_loss=0.131585, reg_loss=0.013644, lr=0.00757, time=188.5 ms, rem=6.00 m
iter= 3100, img_loss=0.118086, reg_loss=0.013653, lr=0.00753, time=190.5 ms, rem=6.03 m
iter= 3110, img_loss=0.124546, reg_loss=0.013581, lr=0.00750, time=190.4 ms, rem=6.00 m
iter= 3120, img_loss=0.112169, reg_loss=0.013653, lr=0.00746, time=188.5 ms, rem=5.90 m
iter= 3130, img_loss=0.123822, reg_loss=0.013737, lr=0.00743, time=189.1 ms, rem=5.89 m
iter= 3140, img_loss=0.116608, reg_loss=0.013916, lr=0.00739, time=189.1 ms, rem=5.86 m
iter= 3150, img_loss=0.117095, reg_loss=0.014136, lr=0.00736, time=188.8 ms, rem=5.82 m
iter= 3160, img_loss=0.117836, reg_loss=0.014158, lr=0.00733, time=188.5 ms, rem=5.78 m
iter= 3170, img_loss=0.116253, reg_loss=0.014053, lr=0.00729, time=188.1 ms, rem=5.74 m
iter= 3180, img_loss=0.106482, reg_loss=0.013925, lr=0.00726, time=188.2 ms, rem=5.71 m
iter= 3190, img_loss=0.124571, reg_loss=0.013985, lr=0.00723, time=188.7 ms, rem=5.69 m
iter= 3200, img_loss=0.118151, reg_loss=0.014014, lr=0.00719, time=191.5 ms, rem=5.74 m
iter= 3210, img_loss=0.114389, reg_loss=0.013947, lr=0.00716, time=188.0 ms, rem=5.61 m
iter= 3220, img_loss=0.107821, reg_loss=0.014095, lr=0.00713, time=188.0 ms, rem=5.58 m
iter= 3230, img_loss=0.114905, reg_loss=0.013966, lr=0.00709, time=188.6 ms, rem=5.56 m
iter= 3240, img_loss=0.115755, reg_loss=0.013780, lr=0.00706, time=189.1 ms, rem=5.55 m
iter= 3250, img_loss=0.117458, reg_loss=0.013841, lr=0.00703, time=188.8 ms, rem=5.51 m
iter= 3260, img_loss=0.108664, reg_loss=0.013810, lr=0.00700, time=188.3 ms, rem=5.46 m
iter= 3270, img_loss=0.109563, reg_loss=0.013950, lr=0.00697, time=188.5 ms, rem=5.43 m
iter= 3280, img_loss=0.121456, reg_loss=0.014183, lr=0.00693, time=188.6 ms, rem=5.41 m
iter= 3290, img_loss=0.118114, reg_loss=0.014345, lr=0.00690, time=189.0 ms, rem=5.39 m
iter= 3300, img_loss=0.121187, reg_loss=0.014199, lr=0.00687, time=190.1 ms, rem=5.39 m
iter= 3310, img_loss=0.107142, reg_loss=0.014096, lr=0.00684, time=188.4 ms, rem=5.31 m
iter= 3320, img_loss=0.112069, reg_loss=0.014112, lr=0.00681, time=188.8 ms, rem=5.29 m
iter= 3330, img_loss=0.113425, reg_loss=0.014336, lr=0.00678, time=188.1 ms, rem=5.24 m
iter= 3340, img_loss=0.106184, reg_loss=0.014498, lr=0.00674, time=188.7 ms, rem=5.22 m
iter= 3350, img_loss=0.118119, reg_loss=0.014468, lr=0.00671, time=188.5 ms, rem=5.18 m
iter= 3360, img_loss=0.110213, reg_loss=0.014589, lr=0.00668, time=188.6 ms, rem=5.16 m
iter= 3370, img_loss=0.114655, reg_loss=0.014541, lr=0.00665, time=189.2 ms, rem=5.14 m
iter= 3380, img_loss=0.107264, reg_loss=0.014433, lr=0.00662, time=188.8 ms, rem=5.10 m
iter= 3390, img_loss=0.118906, reg_loss=0.014399, lr=0.00659, time=188.6 ms, rem=5.06 m
iter= 3400, img_loss=0.106760, reg_loss=0.014265, lr=0.00656, time=191.1 ms, rem=5.10 m
iter= 3410, img_loss=0.109990, reg_loss=0.014298, lr=0.00653, time=189.1 ms, rem=5.01 m
iter= 3420, img_loss=0.104218, reg_loss=0.014643, lr=0.00650, time=189.3 ms, rem=4.98 m
iter= 3430, img_loss=0.103191, reg_loss=0.014705, lr=0.00647, time=189.6 ms, rem=4.96 m
iter= 3440, img_loss=0.103870, reg_loss=0.014788, lr=0.00644, time=189.6 ms, rem=4.93 m
iter= 3450, img_loss=0.113773, reg_loss=0.014890, lr=0.00641, time=189.4 ms, rem=4.89 m
iter= 3460, img_loss=0.107882, reg_loss=0.014709, lr=0.00638, time=189.4 ms, rem=4.86 m
iter= 3470, img_loss=0.104403, reg_loss=0.014568, lr=0.00635, time=189.2 ms, rem=4.82 m
iter= 3480, img_loss=0.097305, reg_loss=0.014661, lr=0.00632, time=189.5 ms, rem=4.80 m
iter= 3490, img_loss=0.104511, reg_loss=0.014652, lr=0.00629, time=189.6 ms, rem=4.77 m
iter= 3500, img_loss=0.112267, reg_loss=0.014576, lr=0.00627, time=192.6 ms, rem=4.82 m
iter= 3510, img_loss=0.100358, reg_loss=0.014697, lr=0.00624, time=191.5 ms, rem=4.76 m
iter= 3520, img_loss=0.106156, reg_loss=0.014848, lr=0.00621, time=189.5 ms, rem=4.67 m
iter= 3530, img_loss=0.107830, reg_loss=0.014616, lr=0.00618, time=189.6 ms, rem=4.64 m
iter= 3540, img_loss=0.106174, reg_loss=0.014476, lr=0.00615, time=188.9 ms, rem=4.60 m
iter= 3550, img_loss=0.098278, reg_loss=0.014365, lr=0.00612, time=189.7 ms, rem=4.59 m
iter= 3560, img_loss=0.106647, reg_loss=0.014508, lr=0.00609, time=189.7 ms, rem=4.55 m
iter= 3570, img_loss=0.093056, reg_loss=0.014529, lr=0.00607, time=189.7 ms, rem=4.52 m
iter= 3580, img_loss=0.100696, reg_loss=0.014709, lr=0.00604, time=189.5 ms, rem=4.48 m
iter= 3590, img_loss=0.102961, reg_loss=0.014733, lr=0.00601, time=189.8 ms, rem=4.46 m
iter= 3600, img_loss=0.099812, reg_loss=0.014555, lr=0.00598, time=191.2 ms, rem=4.46 m
iter= 3610, img_loss=0.097889, reg_loss=0.014661, lr=0.00596, time=189.8 ms, rem=4.40 m
iter= 3620, img_loss=0.098428, reg_loss=0.014811, lr=0.00593, time=189.5 ms, rem=4.36 m
iter= 3630, img_loss=0.096738, reg_loss=0.015170, lr=0.00590, time=189.4 ms, rem=4.33 m
iter= 3640, img_loss=0.098432, reg_loss=0.015116, lr=0.00587, time=189.5 ms, rem=4.30 m
iter= 3650, img_loss=0.109087, reg_loss=0.014933, lr=0.00585, time=189.6 ms, rem=4.27 m
iter= 3660, img_loss=0.108790, reg_loss=0.014898, lr=0.00582, time=192.1 ms, rem=4.29 m
iter= 3670, img_loss=0.108511, reg_loss=0.014727, lr=0.00579, time=189.9 ms, rem=4.21 m
iter= 3680, img_loss=0.102159, reg_loss=0.014886, lr=0.00577, time=189.6 ms, rem=4.17 m
iter= 3690, img_loss=0.112597, reg_loss=0.014741, lr=0.00574, time=189.2 ms, rem=4.13 m
iter= 3700, img_loss=0.092541, reg_loss=0.014665, lr=0.00571, time=192.8 ms, rem=4.18 m
iter= 3710, img_loss=0.104351, reg_loss=0.014762, lr=0.00569, time=189.8 ms, rem=4.08 m
iter= 3720, img_loss=0.096027, reg_loss=0.014751, lr=0.00566, time=189.7 ms, rem=4.05 m
iter= 3730, img_loss=0.100419, reg_loss=0.014836, lr=0.00564, time=189.8 ms, rem=4.02 m
iter= 3740, img_loss=0.097857, reg_loss=0.015071, lr=0.00561, time=192.1 ms, rem=4.03 m
iter= 3750, img_loss=0.097063, reg_loss=0.015129, lr=0.00558, time=191.0 ms, rem=3.98 m
iter= 3760, img_loss=0.114400, reg_loss=0.014921, lr=0.00556, time=191.5 ms, rem=3.96 m
iter= 3770, img_loss=0.102899, reg_loss=0.014855, lr=0.00553, time=190.7 ms, rem=3.91 m
iter= 3780, img_loss=0.099048, reg_loss=0.014786, lr=0.00551, time=193.7 ms, rem=3.94 m
iter= 3790, img_loss=0.099199, reg_loss=0.014754, lr=0.00548, time=192.1 ms, rem=3.87 m
iter= 3800, img_loss=0.104042, reg_loss=0.014600, lr=0.00546, time=192.0 ms, rem=3.84 m
iter= 3810, img_loss=0.094973, reg_loss=0.014711, lr=0.00543, time=189.8 ms, rem=3.76 m
iter= 3820, img_loss=0.089354, reg_loss=0.014926, lr=0.00541, time=189.7 ms, rem=3.73 m
iter= 3830, img_loss=0.095812, reg_loss=0.015104, lr=0.00538, time=189.7 ms, rem=3.70 m
iter= 3840, img_loss=0.099176, reg_loss=0.015067, lr=0.00536, time=189.7 ms, rem=3.67 m
iter= 3850, img_loss=0.102823, reg_loss=0.015096, lr=0.00533, time=190.0 ms, rem=3.64 m
iter= 3860, img_loss=0.103499, reg_loss=0.014933, lr=0.00531, time=190.4 ms, rem=3.62 m
iter= 3870, img_loss=0.094650, reg_loss=0.014924, lr=0.00528, time=190.5 ms, rem=3.59 m
iter= 3880, img_loss=0.089820, reg_loss=0.015007, lr=0.00526, time=190.9 ms, rem=3.56 m
iter= 3890, img_loss=0.102097, reg_loss=0.014917, lr=0.00524, time=191.1 ms, rem=3.54 m
iter= 3900, img_loss=0.098613, reg_loss=0.014885, lr=0.00521, time=196.2 ms, rem=3.60 m
iter= 3910, img_loss=0.090563, reg_loss=0.014753, lr=0.00519, time=191.2 ms, rem=3.47 m
iter= 3920, img_loss=0.088704, reg_loss=0.014838, lr=0.00516, time=189.4 ms, rem=3.41 m
iter= 3930, img_loss=0.081040, reg_loss=0.015054, lr=0.00514, time=189.7 ms, rem=3.38 m
iter= 3940, img_loss=0.087044, reg_loss=0.015174, lr=0.00512, time=190.5 ms, rem=3.36 m
iter= 3950, img_loss=0.085828, reg_loss=0.015425, lr=0.00509, time=189.9 ms, rem=3.32 m
iter= 3960, img_loss=0.085728, reg_loss=0.015541, lr=0.00507, time=190.2 ms, rem=3.30 m
iter= 3970, img_loss=0.097190, reg_loss=0.015586, lr=0.00505, time=190.0 ms, rem=3.26 m
iter= 3980, img_loss=0.096312, reg_loss=0.015562, lr=0.00502, time=190.5 ms, rem=3.24 m
iter= 3990, img_loss=0.091246, reg_loss=0.015495, lr=0.00500, time=190.9 ms, rem=3.21 m
iter= 4000, img_loss=0.091812, reg_loss=0.015424, lr=0.00498, time=192.8 ms, rem=3.21 m
iter= 4010, img_loss=0.091123, reg_loss=0.015322, lr=0.00495, time=190.1 ms, rem=3.14 m
iter= 4020, img_loss=0.090518, reg_loss=0.015093, lr=0.00493, time=190.7 ms, rem=3.11 m
iter= 4030, img_loss=0.094776, reg_loss=0.015014, lr=0.00491, time=190.5 ms, rem=3.08 m
iter= 4040, img_loss=0.085946, reg_loss=0.014935, lr=0.00489, time=191.0 ms, rem=3.06 m
iter= 4050, img_loss=0.101422, reg_loss=0.014882, lr=0.00486, time=190.0 ms, rem=3.01 m
iter= 4060, img_loss=0.087499, reg_loss=0.014672, lr=0.00484, time=193.4 ms, rem=3.03 m
iter= 4070, img_loss=0.104005, reg_loss=0.014558, lr=0.00482, time=190.6 ms, rem=2.95 m
iter= 4080, img_loss=0.094774, reg_loss=0.014374, lr=0.00480, time=192.0 ms, rem=2.94 m
iter= 4090, img_loss=0.095454, reg_loss=0.014326, lr=0.00477, time=191.9 ms, rem=2.91 m
iter= 4100, img_loss=0.102916, reg_loss=0.014237, lr=0.00475, time=193.5 ms, rem=2.90 m
iter= 4110, img_loss=0.090298, reg_loss=0.014008, lr=0.00473, time=191.2 ms, rem=2.84 m
iter= 4120, img_loss=0.101194, reg_loss=0.014166, lr=0.00471, time=190.2 ms, rem=2.79 m
iter= 4130, img_loss=0.077264, reg_loss=0.014363, lr=0.00469, time=189.8 ms, rem=2.75 m
iter= 4140, img_loss=0.104332, reg_loss=0.014573, lr=0.00467, time=190.0 ms, rem=2.72 m
iter= 4150, img_loss=0.097163, reg_loss=0.014339, lr=0.00464, time=191.8 ms, rem=2.72 m
iter= 4160, img_loss=0.083140, reg_loss=0.014221, lr=0.00462, time=192.1 ms, rem=2.69 m
iter= 4170, img_loss=0.088354, reg_loss=0.014180, lr=0.00460, time=191.1 ms, rem=2.64 m
iter= 4180, img_loss=0.074939, reg_loss=0.014087, lr=0.00458, time=191.3 ms, rem=2.61 m
iter= 4190, img_loss=0.080836, reg_loss=0.014128, lr=0.00456, time=191.1 ms, rem=2.58 m
iter= 4200, img_loss=0.093031, reg_loss=0.014046, lr=0.00454, time=193.3 ms, rem=2.58 m
iter= 4210, img_loss=0.083771, reg_loss=0.013775, lr=0.00452, time=190.2 ms, rem=2.50 m
iter= 4220, img_loss=0.084396, reg_loss=0.013668, lr=0.00450, time=190.0 ms, rem=2.47 m
iter= 4230, img_loss=0.075485, reg_loss=0.013612, lr=0.00448, time=190.8 ms, rem=2.45 m
iter= 4240, img_loss=0.082899, reg_loss=0.013576, lr=0.00446, time=190.0 ms, rem=2.41 m
iter= 4250, img_loss=0.078848, reg_loss=0.013474, lr=0.00444, time=190.7 ms, rem=2.38 m
iter= 4260, img_loss=0.087515, reg_loss=0.013393, lr=0.00441, time=190.7 ms, rem=2.35 m
iter= 4270, img_loss=0.091829, reg_loss=0.013197, lr=0.00439, time=190.1 ms, rem=2.31 m
iter= 4280, img_loss=0.087680, reg_loss=0.012869, lr=0.00437, time=190.4 ms, rem=2.29 m
iter= 4290, img_loss=0.087504, reg_loss=0.012664, lr=0.00435, time=190.3 ms, rem=2.25 m
iter= 4300, img_loss=0.081918, reg_loss=0.012608, lr=0.00433, time=193.5 ms, rem=2.26 m
iter= 4310, img_loss=0.085560, reg_loss=0.012490, lr=0.00431, time=190.0 ms, rem=2.18 m
iter= 4320, img_loss=0.084145, reg_loss=0.012398, lr=0.00429, time=190.3 ms, rem=2.16 m
iter= 4330, img_loss=0.086057, reg_loss=0.012176, lr=0.00427, time=190.3 ms, rem=2.13 m
iter= 4340, img_loss=0.081710, reg_loss=0.012039, lr=0.00426, time=191.5 ms, rem=2.11 m
iter= 4350, img_loss=0.093333, reg_loss=0.012065, lr=0.00424, time=190.2 ms, rem=2.06 m
iter= 4360, img_loss=0.086786, reg_loss=0.011946, lr=0.00422, time=190.3 ms, rem=2.03 m
iter= 4370, img_loss=0.098154, reg_loss=0.011829, lr=0.00420, time=190.4 ms, rem=2.00 m
iter= 4380, img_loss=0.080447, reg_loss=0.011675, lr=0.00418, time=190.3 ms, rem=1.97 m
iter= 4390, img_loss=0.082199, reg_loss=0.011611, lr=0.00416, time=189.9 ms, rem=1.93 m
iter= 4400, img_loss=0.071438, reg_loss=0.011532, lr=0.00414, time=192.5 ms, rem=1.92 m
iter= 4410, img_loss=0.081744, reg_loss=0.011513, lr=0.00412, time=190.4 ms, rem=1.87 m
iter= 4420, img_loss=0.082527, reg_loss=0.011368, lr=0.00410, time=190.8 ms, rem=1.84 m
iter= 4430, img_loss=0.089686, reg_loss=0.011158, lr=0.00408, time=190.3 ms, rem=1.81 m
iter= 4440, img_loss=0.079734, reg_loss=0.010882, lr=0.00406, time=191.2 ms, rem=1.78 m
iter= 4450, img_loss=0.081055, reg_loss=0.010837, lr=0.00405, time=190.4 ms, rem=1.75 m
iter= 4460, img_loss=0.085066, reg_loss=0.010776, lr=0.00403, time=190.8 ms, rem=1.72 m
iter= 4470, img_loss=0.080504, reg_loss=0.010620, lr=0.00401, time=192.4 ms, rem=1.70 m
iter= 4480, img_loss=0.079877, reg_loss=0.010578, lr=0.00399, time=190.2 ms, rem=1.65 m
iter= 4490, img_loss=0.093414, reg_loss=0.010466, lr=0.00397, time=190.7 ms, rem=1.62 m
iter= 4500, img_loss=0.095540, reg_loss=0.010237, lr=0.00395, time=193.0 ms, rem=1.61 m
iter= 4510, img_loss=0.082468, reg_loss=0.009919, lr=0.00393, time=190.4 ms, rem=1.55 m
iter= 4520, img_loss=0.083598, reg_loss=0.009772, lr=0.00392, time=190.6 ms, rem=1.52 m
iter= 4530, img_loss=0.081442, reg_loss=0.009690, lr=0.00390, time=190.7 ms, rem=1.49 m
iter= 4540, img_loss=0.081139, reg_loss=0.009480, lr=0.00388, time=190.8 ms, rem=1.46 m
iter= 4550, img_loss=0.096248, reg_loss=0.009254, lr=0.00386, time=190.8 ms, rem=1.43 m
iter= 4560, img_loss=0.083201, reg_loss=0.009003, lr=0.00385, time=191.6 ms, rem=1.40 m
iter= 4570, img_loss=0.089291, reg_loss=0.008800, lr=0.00383, time=191.0 ms, rem=1.37 m
iter= 4580, img_loss=0.086300, reg_loss=0.008667, lr=0.00381, time=190.8 ms, rem=1.34 m
iter= 4590, img_loss=0.082607, reg_loss=0.008569, lr=0.00379, time=191.6 ms, rem=1.31 m
iter= 4600, img_loss=0.081038, reg_loss=0.008494, lr=0.00378, time=193.5 ms, rem=1.29 m
iter= 4610, img_loss=0.073496, reg_loss=0.008423, lr=0.00376, time=190.5 ms, rem=1.24 m
iter= 4620, img_loss=0.075559, reg_loss=0.008321, lr=0.00374, time=190.4 ms, rem=1.21 m
iter= 4630, img_loss=0.072995, reg_loss=0.008193, lr=0.00372, time=190.6 ms, rem=1.18 m
iter= 4640, img_loss=0.099093, reg_loss=0.008004, lr=0.00371, time=190.7 ms, rem=1.14 m
iter= 4650, img_loss=0.084274, reg_loss=0.007790, lr=0.00369, time=190.7 ms, rem=1.11 m
iter= 4660, img_loss=0.079815, reg_loss=0.007641, lr=0.00367, time=190.9 ms, rem=1.08 m
iter= 4670, img_loss=0.086454, reg_loss=0.007450, lr=0.00366, time=190.7 ms, rem=1.05 m
iter= 4680, img_loss=0.080695, reg_loss=0.007311, lr=0.00364, time=190.6 ms, rem=1.02 m
iter= 4690, img_loss=0.080457, reg_loss=0.007137, lr=0.00362, time=190.4 ms, rem=59.03 s
iter= 4700, img_loss=0.090352, reg_loss=0.006944, lr=0.00361, time=192.7 ms, rem=57.81 s
iter= 4710, img_loss=0.082261, reg_loss=0.006776, lr=0.00359, time=190.2 ms, rem=55.16 s
iter= 4720, img_loss=0.074432, reg_loss=0.006574, lr=0.00357, time=191.0 ms, rem=53.48 s
iter= 4730, img_loss=0.082468, reg_loss=0.006430, lr=0.00356, time=190.6 ms, rem=51.45 s
iter= 4740, img_loss=0.069695, reg_loss=0.006273, lr=0.00354, time=191.9 ms, rem=49.90 s
iter= 4750, img_loss=0.080761, reg_loss=0.006109, lr=0.00352, time=190.7 ms, rem=47.68 s
iter= 4760, img_loss=0.079291, reg_loss=0.005933, lr=0.00351, time=190.7 ms, rem=45.77 s
iter= 4770, img_loss=0.083539, reg_loss=0.005718, lr=0.00349, time=190.2 ms, rem=43.75 s
iter= 4780, img_loss=0.088704, reg_loss=0.005472, lr=0.00347, time=190.6 ms, rem=41.92 s
iter= 4790, img_loss=0.075164, reg_loss=0.005252, lr=0.00346, time=190.9 ms, rem=40.08 s
iter= 4800, img_loss=0.088439, reg_loss=0.005110, lr=0.00344, time=194.6 ms, rem=38.92 s
iter= 4810, img_loss=0.088551, reg_loss=0.004951, lr=0.00343, time=190.6 ms, rem=36.21 s
iter= 4820, img_loss=0.082164, reg_loss=0.004727, lr=0.00341, time=191.0 ms, rem=34.37 s
iter= 4830, img_loss=0.074302, reg_loss=0.004478, lr=0.00340, time=190.8 ms, rem=32.43 s
iter= 4840, img_loss=0.084403, reg_loss=0.004250, lr=0.00338, time=190.6 ms, rem=30.49 s
iter= 4850, img_loss=0.087651, reg_loss=0.003992, lr=0.00336, time=190.5 ms, rem=28.57 s
iter= 4860, img_loss=0.086010, reg_loss=0.003760, lr=0.00335, time=191.3 ms, rem=26.78 s
iter= 4870, img_loss=0.081054, reg_loss=0.003570, lr=0.00333, time=192.4 ms, rem=25.01 s
iter= 4880, img_loss=0.088385, reg_loss=0.003379, lr=0.00332, time=190.8 ms, rem=22.89 s
iter= 4890, img_loss=0.070795, reg_loss=0.003152, lr=0.00330, time=190.8 ms, rem=20.99 s
iter= 4900, img_loss=0.082065, reg_loss=0.002935, lr=0.00329, time=194.5 ms, rem=19.45 s
iter= 4910, img_loss=0.066840, reg_loss=0.002685, lr=0.00327, time=191.7 ms, rem=17.25 s
iter= 4920, img_loss=0.076227, reg_loss=0.002460, lr=0.00326, time=191.2 ms, rem=15.29 s
iter= 4930, img_loss=0.070431, reg_loss=0.002234, lr=0.00324, time=190.8 ms, rem=13.35 s
iter= 4940, img_loss=0.090064, reg_loss=0.001987, lr=0.00323, time=191.0 ms, rem=11.46 s
iter= 4950, img_loss=0.081323, reg_loss=0.001717, lr=0.00321, time=191.1 ms, rem=9.56 s
iter= 4960, img_loss=0.073484, reg_loss=0.001450, lr=0.00320, time=191.4 ms, rem=7.65 s
iter= 4970, img_loss=0.087449, reg_loss=0.001183, lr=0.00318, time=191.0 ms, rem=5.73 s
iter= 4980, img_loss=0.084721, reg_loss=0.000894, lr=0.00317, time=191.0 ms, rem=3.82 s
iter= 4990, img_loss=0.081579, reg_loss=0.000582, lr=0.00315, time=191.1 ms, rem=1.91 s
iter= 5000, img_loss=0.078518, reg_loss=0.000248, lr=0.00314, time=193.5 ms, rem=0.00 s
Running validation
MSE,      PSNR
0.02173343, 16.863
Writing mesh:  out/fotress_out3/mesh/mesh.obj
    writing 86343 vertices
    writing 183332 texcoords
    writing 86343 normals
    writing 171327 faces
Writing material:  out/fotress_out3/mesh/mesh.mtl
Done exporting mesh
srun: job 862972 queued and waiting for resources
srun: job 862972 has been allocated resources
/opt/conda/lib/python3.8/site-packages/pip/_internal/commands/install.py:229: UserWarning: Disabling all use of wheels due to the use of --build-option / --global-option / --install-option.
  cmdoptions.check_install_build_global(options)
Looking in indexes: http://pypi-cache/index, https://pypi.ngc.nvidia.com
Collecting git+https://github.com/NVlabs/tiny-cuda-nn#subdirectory=bindings/torch
  Cloning https://github.com/NVlabs/tiny-cuda-nn to /tmp/pip-req-build-z63ja5dq
  Running command git clone -q https://github.com/NVlabs/tiny-cuda-nn /tmp/pip-req-build-z63ja5dq
  Resolved https://github.com/NVlabs/tiny-cuda-nn to commit 212104156403bd87616c1a4f73a1c5f2c2e172a9
  Running command git submodule update --init --recursive -q
Skipping wheel build for tinycudann, due to binaries being disabled for it.
Installing collected packages: tinycudann
    Running setup.py install for tinycudann: started
    Running setup.py install for tinycudann: still running...
    Running setup.py install for tinycudann: finished with status 'done'
Successfully installed tinycudann-1.7
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
Ascertaining binaries for: freeimage.
Config / Flags:
---------
config configs/nerf_ficus.json
iter 5000
batch 32
spp 1
layers 8
train_res [800, 800]
display_res [800, 800]
texture_res [2048, 2048]
display_interval 0
save_interval 100
learning_rate [0.03, 0.01]
min_roughness 0.08
custom_mip False
random_textures True
background white
loss logl1
out_dir out/nerf_ficus
ref_mesh data/nerf_synthetic/ficus
base_mesh None
validate True
isosurface dmtet
mtl_override None
dmtet_grid 128
mesh_scale 2.3
env_scale 1.0
envmap None
display [{'latlong': True}, {'bsdf': 'kd'}, {'bsdf': 'ks'}, {'bsdf': 'normal'}]
camera_space_light False
lock_light False
lock_pos False
sdf_regularizer 0.2
laplace relative
laplace_scale 3000
pre_load True
kd_min [0.0, 0.0, 0.0, 0.0]
kd_max [1.0, 1.0, 1.0, 1.0]
ks_min [0, 0.25, 0.0]
ks_max [1.0, 1.0, 1.0]
nrm_min [-1.0, -1.0, 0.0]
nrm_max [1.0, 1.0, 1.0]
cam_near_far [0.1, 1000.0]
learn_light True
local_rank 0
multi_gpu False
---------
DatasetNERF: 100 images with shape [800, 800]
DatasetNERF: 200 images with shape [800, 800]
Encoder output: 32 dims
Using /root/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Detected CUDA files, patching ldflags
Emitting ninja build file /root/.cache/torch_extensions/py38_cu117/renderutils_plugin/build.ninja...
Building extension module renderutils_plugin...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/8] c++ -MMD -MF common.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/common.cpp -o common.o 
[2/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/mesh.cu -o mesh.cuda.o 
[3/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/normal.cu -o normal.cuda.o 
[4/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/loss.cu -o loss.cuda.o 
[5/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/cubemap.cu -o cubemap.cuda.o 
[6/8] /usr/local/cuda/bin/nvcc  -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr -gencode=arch=compute_80,code=compute_80 -gencode=arch=compute_80,code=sm_80 --compiler-options '-fPIC' -DNVDR_TORCH -std=c++14 -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/bsdf.cu -o bsdf.cuda.o 
[7/8] c++ -MMD -MF torch_bindings.o.d -DTORCH_EXTENSION_NAME=renderutils_plugin -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE=\"_gcc\" -DPYBIND11_STDLIB=\"_libstdcpp\" -DPYBIND11_BUILD_ABI=\"_cxxabi1013\" -isystem /opt/conda/lib/python3.8/site-packages/torch/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -isystem /opt/conda/lib/python3.8/site-packages/torch/include/TH -isystem /opt/conda/lib/python3.8/site-packages/torch/include/THC -isystem /usr/local/cuda/include -isystem /opt/conda/include/python3.8 -D_GLIBCXX_USE_CXX11_ABI=1 -fPIC -std=c++14 -DNVDR_TORCH -c /netscratch/smishra/nvdiffrec/render/renderutils/c_src/torch_bindings.cpp -o torch_bindings.o 
[8/8] c++ mesh.cuda.o loss.cuda.o bsdf.cuda.o normal.cuda.o cubemap.cuda.o common.o torch_bindings.o -shared -lcuda -lnvrtc -L/opt/conda/lib/python3.8/site-packages/torch/lib -lc10 -lc10_cuda -ltorch_cpu -ltorch_cuda -ltorch -ltorch_python -L/usr/local/cuda/lib64 -lcudart -o renderutils_plugin.so
Loading extension module renderutils_plugin...
iter=    0, img_loss=0.529528, reg_loss=0.333951, lr=0.02999, time=1585.2 ms, rem=2.20 h
iter=   10, img_loss=0.101065, reg_loss=0.324126, lr=0.02985, time=2455.4 ms, rem=3.40 h
iter=   20, img_loss=0.045198, reg_loss=0.303472, lr=0.02971, time=2522.2 ms, rem=3.49 h
iter=   30, img_loss=0.038483, reg_loss=0.287521, lr=0.02957, time=2499.0 ms, rem=3.45 h
iter=   40, img_loss=0.034223, reg_loss=0.282086, lr=0.02944, time=2499.1 ms, rem=3.44 h
iter=   50, img_loss=0.030700, reg_loss=0.279373, lr=0.02930, time=2503.8 ms, rem=3.44 h
iter=   60, img_loss=0.028832, reg_loss=0.277126, lr=0.02917, time=2503.5 ms, rem=3.44 h
iter=   70, img_loss=0.028058, reg_loss=0.275203, lr=0.02903, time=2489.3 ms, rem=3.41 h
iter=   80, img_loss=0.027189, reg_loss=0.273364, lr=0.02890, time=2447.4 ms, rem=3.34 h
iter=   90, img_loss=0.026241, reg_loss=0.271381, lr=0.02877, time=2447.7 ms, rem=3.34 h
iter=  100, img_loss=0.025605, reg_loss=0.269392, lr=0.02864, time=2454.7 ms, rem=3.34 h
iter=  110, img_loss=0.026058, reg_loss=0.267510, lr=0.02851, time=2509.4 ms, rem=3.41 h
iter=  120, img_loss=0.025434, reg_loss=0.265538, lr=0.02837, time=2512.9 ms, rem=3.41 h
iter=  130, img_loss=0.024881, reg_loss=0.263349, lr=0.02824, time=2511.5 ms, rem=3.40 h
iter=  140, img_loss=0.024888, reg_loss=0.261016, lr=0.02811, time=2511.0 ms, rem=3.39 h
iter=  150, img_loss=0.024965, reg_loss=0.258778, lr=0.02798, time=2509.7 ms, rem=3.38 h
iter=  160, img_loss=0.024942, reg_loss=0.256540, lr=0.02786, time=2508.1 ms, rem=3.37 h
iter=  170, img_loss=0.024161, reg_loss=0.254034, lr=0.02773, time=2511.8 ms, rem=3.37 h
iter=  180, img_loss=0.023730, reg_loss=0.251324, lr=0.02760, time=2513.1 ms, rem=3.36 h
iter=  190, img_loss=0.023704, reg_loss=0.248745, lr=0.02747, time=2513.0 ms, rem=3.36 h
iter=  200, img_loss=0.023345, reg_loss=0.246180, lr=0.02735, time=2511.8 ms, rem=3.35 h
iter=  210, img_loss=0.022962, reg_loss=0.243184, lr=0.02722, time=2503.4 ms, rem=3.33 h
iter=  220, img_loss=0.022195, reg_loss=0.240388, lr=0.02710, time=2522.2 ms, rem=3.35 h
iter=  230, img_loss=0.022060, reg_loss=0.237666, lr=0.02697, time=2525.2 ms, rem=3.35 h
iter=  240, img_loss=0.021649, reg_loss=0.234963, lr=0.02685, time=2510.6 ms, rem=3.32 h
iter=  250, img_loss=0.021799, reg_loss=0.232351, lr=0.02673, time=2505.2 ms, rem=3.31 h
iter=  260, img_loss=0.021874, reg_loss=0.229867, lr=0.02660, time=2506.8 ms, rem=3.30 h
iter=  270, img_loss=0.021281, reg_loss=0.227481, lr=0.02648, time=2518.1 ms, rem=3.31 h
iter=  280, img_loss=0.021224, reg_loss=0.225103, lr=0.02636, time=2522.2 ms, rem=3.31 h
iter=  290, img_loss=0.021480, reg_loss=0.222786, lr=0.02624, time=2526.8 ms, rem=3.31 h
iter=  300, img_loss=0.020991, reg_loss=0.220476, lr=0.02612, time=2518.6 ms, rem=3.29 h
iter=  310, img_loss=0.020925, reg_loss=0.218282, lr=0.02600, time=2458.2 ms, rem=3.20 h
iter=  320, img_loss=0.020952, reg_loss=0.215997, lr=0.02588, time=2459.4 ms, rem=3.20 h
iter=  330, img_loss=0.020731, reg_loss=0.213763, lr=0.02576, time=2459.0 ms, rem=3.19 h
iter=  340, img_loss=0.020829, reg_loss=0.211724, lr=0.02564, time=2457.5 ms, rem=3.18 h
iter=  350, img_loss=0.020778, reg_loss=0.209655, lr=0.02552, time=2458.6 ms, rem=3.18 h
iter=  360, img_loss=0.020637, reg_loss=0.207402, lr=0.02541, time=2457.1 ms, rem=3.17 h
iter=  370, img_loss=0.020700, reg_loss=0.205185, lr=0.02529, time=2457.0 ms, rem=3.16 h
iter=  380, img_loss=0.020673, reg_loss=0.203071, lr=0.02517, time=2457.5 ms, rem=3.15 h
iter=  390, img_loss=0.019897, reg_loss=0.200950, lr=0.02506, time=2460.1 ms, rem=3.15 h
iter=  400, img_loss=0.020051, reg_loss=0.198717, lr=0.02494, time=2464.2 ms, rem=3.15 h
iter=  410, img_loss=0.019981, reg_loss=0.196505, lr=0.02483, time=2526.0 ms, rem=3.22 h
iter=  420, img_loss=0.020330, reg_loss=0.194397, lr=0.02471, time=2523.2 ms, rem=3.21 h
iter=  430, img_loss=0.020065, reg_loss=0.192271, lr=0.02460, time=2525.1 ms, rem=3.21 h
iter=  440, img_loss=0.019428, reg_loss=0.189946, lr=0.02449, time=2526.7 ms, rem=3.20 h
iter=  450, img_loss=0.019704, reg_loss=0.187724, lr=0.02437, time=2526.2 ms, rem=3.19 h
iter=  460, img_loss=0.019669, reg_loss=0.185680, lr=0.02426, time=2525.5 ms, rem=3.18 h
iter=  470, img_loss=0.019936, reg_loss=0.183482, lr=0.02415, time=2524.0 ms, rem=3.18 h
iter=  480, img_loss=0.019944, reg_loss=0.181312, lr=0.02404, time=2525.0 ms, rem=3.17 h
iter=  490, img_loss=0.019144, reg_loss=0.179134, lr=0.02393, time=2526.7 ms, rem=3.17 h
iter=  500, img_loss=0.019435, reg_loss=0.176949, lr=0.02382, time=2519.2 ms, rem=3.15 h
iter=  510, img_loss=0.019259, reg_loss=0.174868, lr=0.02371, time=2464.0 ms, rem=3.07 h
iter=  520, img_loss=0.019476, reg_loss=0.172748, lr=0.02360, time=2465.3 ms, rem=3.07 h
iter=  530, img_loss=0.019230, reg_loss=0.170545, lr=0.02349, time=2463.0 ms, rem=3.06 h
iter=  540, img_loss=0.019681, reg_loss=0.168444, lr=0.02338, time=2461.6 ms, rem=3.05 h
iter=  550, img_loss=0.019403, reg_loss=0.166265, lr=0.02328, time=2467.1 ms, rem=3.05 h
iter=  560, img_loss=0.019432, reg_loss=0.164132, lr=0.02317, time=2462.0 ms, rem=3.04 h
iter=  570, img_loss=0.019269, reg_loss=0.161922, lr=0.02306, time=2461.5 ms, rem=3.03 h
iter=  580, img_loss=0.019293, reg_loss=0.159719, lr=0.02296, time=2468.0 ms, rem=3.03 h
iter=  590, img_loss=0.018869, reg_loss=0.157552, lr=0.02285, time=2463.4 ms, rem=3.02 h
iter=  600, img_loss=0.019070, reg_loss=0.155427, lr=0.02275, time=2461.0 ms, rem=3.01 h
iter=  610, img_loss=0.018807, reg_loss=0.153210, lr=0.02264, time=2433.6 ms, rem=2.97 h
iter=  620, img_loss=0.018481, reg_loss=0.151012, lr=0.02254, time=2435.0 ms, rem=2.96 h
iter=  630, img_loss=0.018680, reg_loss=0.148835, lr=0.02243, time=2433.8 ms, rem=2.95 h
iter=  640, img_loss=0.018632, reg_loss=0.146719, lr=0.02233, time=2433.7 ms, rem=2.95 h
iter=  650, img_loss=0.018485, reg_loss=0.144554, lr=0.02223, time=2433.7 ms, rem=2.94 h
iter=  660, img_loss=0.018421, reg_loss=0.142363, lr=0.02213, time=2433.4 ms, rem=2.93 h
iter=  670, img_loss=0.018489, reg_loss=0.140206, lr=0.02203, time=2434.1 ms, rem=2.93 h
iter=  680, img_loss=0.018335, reg_loss=0.138107, lr=0.02192, time=2432.4 ms, rem=2.92 h
iter=  690, img_loss=0.018172, reg_loss=0.135954, lr=0.02182, time=2431.3 ms, rem=2.91 h
iter=  700, img_loss=0.018602, reg_loss=0.133811, lr=0.02172, time=2427.2 ms, rem=2.90 h
iter=  710, img_loss=0.017944, reg_loss=0.131701, lr=0.02162, time=2396.9 ms, rem=2.86 h
iter=  720, img_loss=0.018104, reg_loss=0.129516, lr=0.02152, time=2395.6 ms, rem=2.85 h
iter=  730, img_loss=0.018035, reg_loss=0.127330, lr=0.02143, time=2397.5 ms, rem=2.84 h
iter=  740, img_loss=0.018526, reg_loss=0.125226, lr=0.02133, time=2395.5 ms, rem=2.83 h
iter=  750, img_loss=0.018366, reg_loss=0.123125, lr=0.02123, time=2393.6 ms, rem=2.83 h
iter=  760, img_loss=0.018048, reg_loss=0.120957, lr=0.02113, time=2396.3 ms, rem=2.82 h
iter=  770, img_loss=0.017882, reg_loss=0.118738, lr=0.02103, time=2396.0 ms, rem=2.82 h
iter=  780, img_loss=0.018233, reg_loss=0.116592, lr=0.02094, time=2393.8 ms, rem=2.81 h
iter=  790, img_loss=0.017665, reg_loss=0.114442, lr=0.02084, time=2395.9 ms, rem=2.80 h
iter=  800, img_loss=0.017320, reg_loss=0.112261, lr=0.02075, time=2406.0 ms, rem=2.81 h
iter=  810, img_loss=0.017672, reg_loss=0.110067, lr=0.02065, time=2490.9 ms, rem=2.90 h
iter=  820, img_loss=0.017766, reg_loss=0.107913, lr=0.02056, time=2490.8 ms, rem=2.89 h
iter=  830, img_loss=0.017591, reg_loss=0.105804, lr=0.02046, time=2491.0 ms, rem=2.89 h
iter=  840, img_loss=0.017566, reg_loss=0.103670, lr=0.02037, time=2490.5 ms, rem=2.88 h
iter=  850, img_loss=0.017543, reg_loss=0.101513, lr=0.02027, time=2490.2 ms, rem=2.87 h
iter=  860, img_loss=0.017551, reg_loss=0.099358, lr=0.02018, time=2489.3 ms, rem=2.86 h
iter=  870, img_loss=0.017429, reg_loss=0.097219, lr=0.02009, time=2491.8 ms, rem=2.86 h
iter=  880, img_loss=0.017073, reg_loss=0.095081, lr=0.01999, time=2491.5 ms, rem=2.85 h
iter=  890, img_loss=0.017060, reg_loss=0.092902, lr=0.01990, time=2493.3 ms, rem=2.85 h
iter=  900, img_loss=0.016931, reg_loss=0.090779, lr=0.01981, time=2483.1 ms, rem=2.83 h
iter=  910, img_loss=0.016947, reg_loss=0.088640, lr=0.01972, time=2409.1 ms, rem=2.74 h
iter=  920, img_loss=0.016904, reg_loss=0.086477, lr=0.01963, time=2408.4 ms, rem=2.73 h
iter=  930, img_loss=0.016993, reg_loss=0.084324, lr=0.01954, time=2409.0 ms, rem=2.72 h
iter=  940, img_loss=0.016825, reg_loss=0.082174, lr=0.01945, time=2408.4 ms, rem=2.72 h
iter=  950, img_loss=0.016929, reg_loss=0.080009, lr=0.01936, time=2406.7 ms, rem=2.71 h
iter=  960, img_loss=0.016661, reg_loss=0.077871, lr=0.01927, time=2409.7 ms, rem=2.70 h
iter=  970, img_loss=0.016577, reg_loss=0.075741, lr=0.01918, time=2408.7 ms, rem=2.70 h
iter=  980, img_loss=0.016772, reg_loss=0.073600, lr=0.01910, time=2407.7 ms, rem=2.69 h
iter=  990, img_loss=0.016891, reg_loss=0.071425, lr=0.01901, time=2408.3 ms, rem=2.68 h
iter= 1000, img_loss=0.016714, reg_loss=0.069279, lr=0.01892, time=2413.3 ms, rem=2.68 h
iter= 1010, img_loss=0.016263, reg_loss=0.067122, lr=0.01883, time=2479.5 ms, rem=2.75 h
iter= 1020, img_loss=0.016501, reg_loss=0.064963, lr=0.01875, time=2473.9 ms, rem=2.73 h
iter= 1030, img_loss=0.016186, reg_loss=0.062810, lr=0.01866, time=2476.1 ms, rem=2.73 h
iter= 1040, img_loss=0.016007, reg_loss=0.060664, lr=0.01857, time=2478.6 ms, rem=2.73 h
iter= 1050, img_loss=0.016310, reg_loss=0.058528, lr=0.01849, time=2474.7 ms, rem=2.72 h
iter= 1060, img_loss=0.015973, reg_loss=0.056388, lr=0.01840, time=2477.1 ms, rem=2.71 h
iter= 1070, img_loss=0.015945, reg_loss=0.054227, lr=0.01832, time=2478.4 ms, rem=2.71 h
iter= 1080, img_loss=0.015921, reg_loss=0.052072, lr=0.01824, time=2477.1 ms, rem=2.70 h
iter= 1090, img_loss=0.015949, reg_loss=0.049941, lr=0.01815, time=2476.6 ms, rem=2.69 h
iter= 1100, img_loss=0.015828, reg_loss=0.047800, lr=0.01807, time=2467.8 ms, rem=2.67 h
iter= 1110, img_loss=0.015717, reg_loss=0.045642, lr=0.01799, time=2452.9 ms, rem=2.65 h
iter= 1120, img_loss=0.015461, reg_loss=0.043481, lr=0.01790, time=2453.1 ms, rem=2.64 h
iter= 1130, img_loss=0.015897, reg_loss=0.041321, lr=0.01782, time=2446.1 ms, rem=2.63 h
iter= 1140, img_loss=0.015704, reg_loss=0.039169, lr=0.01774, time=2451.8 ms, rem=2.63 h
iter= 1150, img_loss=0.015491, reg_loss=0.037024, lr=0.01766, time=2452.8 ms, rem=2.62 h
iter= 1160, img_loss=0.015382, reg_loss=0.034869, lr=0.01758, time=2445.7 ms, rem=2.61 h
iter= 1170, img_loss=0.015200, reg_loss=0.032709, lr=0.01750, time=2453.3 ms, rem=2.61 h
iter= 1180, img_loss=0.015536, reg_loss=0.030553, lr=0.01741, time=2450.7 ms, rem=2.60 h
iter= 1190, img_loss=0.015336, reg_loss=0.028400, lr=0.01733, time=2445.9 ms, rem=2.59 h
iter= 1200, img_loss=0.015049, reg_loss=0.026244, lr=0.01726, time=2461.4 ms, rem=2.60 h
iter= 1210, img_loss=0.015009, reg_loss=0.024087, lr=0.01718, time=2533.0 ms, rem=2.67 h
iter= 1220, img_loss=0.015109, reg_loss=0.021929, lr=0.01710, time=2529.2 ms, rem=2.66 h
iter= 1230, img_loss=0.014940, reg_loss=0.019771, lr=0.01702, time=2534.1 ms, rem=2.65 h
iter= 1240, img_loss=0.014968, reg_loss=0.017610, lr=0.01694, time=2532.9 ms, rem=2.65 h
iter= 1250, img_loss=0.014716, reg_loss=0.015446, lr=0.01686, time=2528.4 ms, rem=2.63 h
iter= 1260, img_loss=0.014860, reg_loss=0.014479, lr=0.01678, time=2532.1 ms, rem=2.63 h
iter= 1270, img_loss=0.014341, reg_loss=0.014486, lr=0.01671, time=2534.5 ms, rem=2.63 h
iter= 1280, img_loss=0.014621, reg_loss=0.014494, lr=0.01663, time=2528.3 ms, rem=2.61 h
iter= 1290, img_loss=0.014429, reg_loss=0.014499, lr=0.01655, time=2533.9 ms, rem=2.61 h
iter= 1300, img_loss=0.014323, reg_loss=0.014505, lr=0.01648, time=2529.1 ms, rem=2.60 h
iter= 1310, img_loss=0.014648, reg_loss=0.014510, lr=0.01640, time=2501.8 ms, rem=2.56 h
iter= 1320, img_loss=0.014523, reg_loss=0.014514, lr=0.01633, time=2505.1 ms, rem=2.56 h
iter= 1330, img_loss=0.014475, reg_loss=0.014519, lr=0.01625, time=2507.0 ms, rem=2.56 h
iter= 1340, img_loss=0.014423, reg_loss=0.014521, lr=0.01618, time=2503.3 ms, rem=2.55 h
iter= 1350, img_loss=0.014448, reg_loss=0.014524, lr=0.01610, time=2504.6 ms, rem=2.54 h
iter= 1360, img_loss=0.014414, reg_loss=0.014526, lr=0.01603, time=2504.3 ms, rem=2.53 h
iter= 1370, img_loss=0.014173, reg_loss=0.014525, lr=0.01596, time=2504.8 ms, rem=2.53 h
iter= 1380, img_loss=0.014464, reg_loss=0.014525, lr=0.01588, time=2504.8 ms, rem=2.52 h
iter= 1390, img_loss=0.014217, reg_loss=0.014528, lr=0.01581, time=2506.9 ms, rem=2.51 h
iter= 1400, img_loss=0.014258, reg_loss=0.014532, lr=0.01574, time=2494.8 ms, rem=2.49 h
iter= 1410, img_loss=0.014376, reg_loss=0.014536, lr=0.01566, time=2402.2 ms, rem=2.40 h
iter= 1420, img_loss=0.014397, reg_loss=0.014540, lr=0.01559, time=2401.4 ms, rem=2.39 h
iter= 1430, img_loss=0.014349, reg_loss=0.014540, lr=0.01552, time=2401.1 ms, rem=2.38 h
iter= 1440, img_loss=0.014085, reg_loss=0.014543, lr=0.01545, time=2403.7 ms, rem=2.38 h
iter= 1450, img_loss=0.014071, reg_loss=0.014542, lr=0.01538, time=2404.5 ms, rem=2.37 h
iter= 1460, img_loss=0.014275, reg_loss=0.014545, lr=0.01531, time=2400.5 ms, rem=2.36 h
iter= 1470, img_loss=0.014200, reg_loss=0.014542, lr=0.01524, time=2402.1 ms, rem=2.36 h
iter= 1480, img_loss=0.014124, reg_loss=0.014541, lr=0.01517, time=2403.1 ms, rem=2.35 h
iter= 1490, img_loss=0.014074, reg_loss=0.014540, lr=0.01510, time=2404.5 ms, rem=2.34 h
iter= 1500, img_loss=0.014013, reg_loss=0.014542, lr=0.01503, time=2411.2 ms, rem=2.34 h
iter= 1510, img_loss=0.014202, reg_loss=0.014547, lr=0.01496, time=2482.0 ms, rem=2.41 h
iter= 1520, img_loss=0.014416, reg_loss=0.014549, lr=0.01489, time=2481.2 ms, rem=2.40 h
iter= 1530, img_loss=0.014148, reg_loss=0.014552, lr=0.01482, time=2483.4 ms, rem=2.39 h
iter= 1540, img_loss=0.014282, reg_loss=0.014554, lr=0.01475, time=2482.3 ms, rem=2.39 h
iter= 1550, img_loss=0.014240, reg_loss=0.014556, lr=0.01469, time=2483.6 ms, rem=2.38 h
iter= 1560, img_loss=0.014147, reg_loss=0.014561, lr=0.01462, time=2482.0 ms, rem=2.37 h
iter= 1570, img_loss=0.014290, reg_loss=0.014561, lr=0.01455, time=2482.8 ms, rem=2.37 h
iter= 1580, img_loss=0.014215, reg_loss=0.014562, lr=0.01449, time=2483.2 ms, rem=2.36 h
iter= 1590, img_loss=0.013984, reg_loss=0.014566, lr=0.01442, time=2483.5 ms, rem=2.35 h
iter= 1600, img_loss=0.014119, reg_loss=0.014568, lr=0.01435, time=2479.2 ms, rem=2.34 h
iter= 1610, img_loss=0.013995, reg_loss=0.014569, lr=0.01429, time=2442.1 ms, rem=2.30 h
iter= 1620, img_loss=0.013921, reg_loss=0.014569, lr=0.01422, time=2440.9 ms, rem=2.29 h
iter= 1630, img_loss=0.013950, reg_loss=0.014569, lr=0.01416, time=2439.6 ms, rem=2.28 h
iter= 1640, img_loss=0.013975, reg_loss=0.014571, lr=0.01409, time=2439.9 ms, rem=2.28 h
iter= 1650, img_loss=0.014157, reg_loss=0.014570, lr=0.01403, time=2439.8 ms, rem=2.27 h
iter= 1660, img_loss=0.013805, reg_loss=0.014568, lr=0.01396, time=2443.5 ms, rem=2.27 h
iter= 1670, img_loss=0.014033, reg_loss=0.014571, lr=0.01390, time=2439.6 ms, rem=2.26 h
iter= 1680, img_loss=0.013974, reg_loss=0.014570, lr=0.01383, time=2439.0 ms, rem=2.25 h
iter= 1690, img_loss=0.013803, reg_loss=0.014571, lr=0.01377, time=2442.1 ms, rem=2.25 h
iter= 1700, img_loss=0.013988, reg_loss=0.014573, lr=0.01371, time=2440.5 ms, rem=2.24 h
iter= 1710, img_loss=0.013839, reg_loss=0.014572, lr=0.01364, time=2467.8 ms, rem=2.26 h
iter= 1720, img_loss=0.014103, reg_loss=0.014573, lr=0.01358, time=2466.5 ms, rem=2.25 h
iter= 1730, img_loss=0.013857, reg_loss=0.014570, lr=0.01352, time=2466.2 ms, rem=2.24 h
iter= 1740, img_loss=0.013978, reg_loss=0.014572, lr=0.01346, time=2466.6 ms, rem=2.23 h
iter= 1750, img_loss=0.013860, reg_loss=0.014573, lr=0.01339, time=2467.2 ms, rem=2.23 h
iter= 1760, img_loss=0.013878, reg_loss=0.014571, lr=0.01333, time=2467.1 ms, rem=2.22 h
iter= 1770, img_loss=0.013931, reg_loss=0.014573, lr=0.01327, time=2466.1 ms, rem=2.21 h
iter= 1780, img_loss=0.013950, reg_loss=0.014572, lr=0.01321, time=2465.5 ms, rem=2.21 h
iter= 1790, img_loss=0.013978, reg_loss=0.014573, lr=0.01315, time=2465.9 ms, rem=2.20 h
iter= 1800, img_loss=0.014001, reg_loss=0.014575, lr=0.01309, time=2467.9 ms, rem=2.19 h
iter= 1810, img_loss=0.014186, reg_loss=0.014578, lr=0.01303, time=2482.9 ms, rem=2.20 h
iter= 1820, img_loss=0.013917, reg_loss=0.014579, lr=0.01297, time=2483.5 ms, rem=2.19 h
iter= 1830, img_loss=0.013967, reg_loss=0.014580, lr=0.01291, time=2483.7 ms, rem=2.19 h
iter= 1840, img_loss=0.013622, reg_loss=0.014577, lr=0.01285, time=2486.1 ms, rem=2.18 h
iter= 1850, img_loss=0.013841, reg_loss=0.014577, lr=0.01279, time=2483.5 ms, rem=2.17 h
iter= 1860, img_loss=0.013872, reg_loss=0.014578, lr=0.01273, time=2482.8 ms, rem=2.17 h
iter= 1870, img_loss=0.013707, reg_loss=0.014578, lr=0.01267, time=2485.3 ms, rem=2.16 h
iter= 1880, img_loss=0.013804, reg_loss=0.014579, lr=0.01262, time=2484.1 ms, rem=2.15 h
iter= 1890, img_loss=0.013805, reg_loss=0.014581, lr=0.01256, time=2485.6 ms, rem=2.15 h
iter= 1900, img_loss=0.013652, reg_loss=0.014582, lr=0.01250, time=2475.3 ms, rem=2.13 h
iter= 1910, img_loss=0.013715, reg_loss=0.014581, lr=0.01244, time=2396.1 ms, rem=2.06 h
iter= 1920, img_loss=0.013805, reg_loss=0.014581, lr=0.01239, time=2395.0 ms, rem=2.05 h
iter= 1930, img_loss=0.013781, reg_loss=0.014580, lr=0.01233, time=2397.7 ms, rem=2.04 h
iter= 1940, img_loss=0.013827, reg_loss=0.014583, lr=0.01227, time=2397.1 ms, rem=2.04 h
iter= 1950, img_loss=0.013547, reg_loss=0.014583, lr=0.01222, time=2398.9 ms, rem=2.03 h
iter= 1960, img_loss=0.013531, reg_loss=0.014583, lr=0.01216, time=2399.1 ms, rem=2.03 h
iter= 1970, img_loss=0.013732, reg_loss=0.014584, lr=0.01210, time=2397.3 ms, rem=2.02 h
iter= 1980, img_loss=0.013796, reg_loss=0.014583, lr=0.01205, time=2397.0 ms, rem=2.01 h
iter= 1990, img_loss=0.013499, reg_loss=0.014579, lr=0.01199, time=2399.4 ms, rem=2.01 h
iter= 2000, img_loss=0.013598, reg_loss=0.014578, lr=0.01194, time=2404.5 ms, rem=2.00 h
iter= 2010, img_loss=0.013960, reg_loss=0.014579, lr=0.01188, time=2429.0 ms, rem=2.02 h
iter= 2020, img_loss=0.013720, reg_loss=0.014581, lr=0.01183, time=2426.5 ms, rem=2.01 h
iter= 2030, img_loss=0.013655, reg_loss=0.014582, lr=0.01177, time=2431.3 ms, rem=2.01 h
iter= 2040, img_loss=0.013881, reg_loss=0.014583, lr=0.01172, time=2429.0 ms, rem=2.00 h
iter= 2050, img_loss=0.013600, reg_loss=0.014582, lr=0.01167, time=2426.2 ms, rem=1.99 h
iter= 2060, img_loss=0.013681, reg_loss=0.014580, lr=0.01161, time=2432.2 ms, rem=1.99 h
iter= 2070, img_loss=0.013574, reg_loss=0.014580, lr=0.01156, time=2429.7 ms, rem=1.98 h
iter= 2080, img_loss=0.013685, reg_loss=0.014582, lr=0.01151, time=2425.1 ms, rem=1.97 h
iter= 2090, img_loss=0.013452, reg_loss=0.014581, lr=0.01145, time=2432.2 ms, rem=1.97 h
iter= 2100, img_loss=0.013478, reg_loss=0.014579, lr=0.01140, time=2432.3 ms, rem=1.96 h
iter= 2110, img_loss=0.013415, reg_loss=0.014581, lr=0.01135, time=2465.6 ms, rem=1.98 h
iter= 2120, img_loss=0.013522, reg_loss=0.014579, lr=0.01130, time=2463.1 ms, rem=1.97 h
iter= 2130, img_loss=0.013506, reg_loss=0.014581, lr=0.01124, time=2464.9 ms, rem=1.97 h
iter= 2140, img_loss=0.013669, reg_loss=0.014580, lr=0.01119, time=2463.1 ms, rem=1.96 h
iter= 2150, img_loss=0.013743, reg_loss=0.014580, lr=0.01114, time=2460.2 ms, rem=1.95 h
iter= 2160, img_loss=0.013684, reg_loss=0.014580, lr=0.01109, time=2463.5 ms, rem=1.94 h
iter= 2170, img_loss=0.013608, reg_loss=0.014580, lr=0.01104, time=2464.7 ms, rem=1.94 h
iter= 2180, img_loss=0.013564, reg_loss=0.014583, lr=0.01099, time=2462.5 ms, rem=1.93 h
iter= 2190, img_loss=0.013692, reg_loss=0.014579, lr=0.01094, time=2463.1 ms, rem=1.92 h
iter= 2200, img_loss=0.013540, reg_loss=0.014581, lr=0.01089, time=2464.2 ms, rem=1.92 h
iter= 2210, img_loss=0.013486, reg_loss=0.014580, lr=0.01084, time=2462.7 ms, rem=1.91 h
iter= 2220, img_loss=0.013757, reg_loss=0.014581, lr=0.01079, time=2462.9 ms, rem=1.90 h
iter= 2230, img_loss=0.013368, reg_loss=0.014581, lr=0.01074, time=2464.5 ms, rem=1.90 h
iter= 2240, img_loss=0.013629, reg_loss=0.014580, lr=0.01069, time=2461.3 ms, rem=1.89 h
iter= 2250, img_loss=0.013717, reg_loss=0.014579, lr=0.01064, time=2462.2 ms, rem=1.88 h
iter= 2260, img_loss=0.013403, reg_loss=0.014576, lr=0.01059, time=2464.5 ms, rem=1.88 h
iter= 2270, img_loss=0.013478, reg_loss=0.014577, lr=0.01054, time=2465.8 ms, rem=1.87 h
iter= 2280, img_loss=0.013634, reg_loss=0.014578, lr=0.01049, time=2462.5 ms, rem=1.86 h
iter= 2290, img_loss=0.013557, reg_loss=0.014581, lr=0.01045, time=2463.2 ms, rem=1.85 h
iter= 2300, img_loss=0.013380, reg_loss=0.014583, lr=0.01040, time=2458.1 ms, rem=1.84 h
iter= 2310, img_loss=0.013705, reg_loss=0.014583, lr=0.01035, time=2400.5 ms, rem=1.79 h
iter= 2320, img_loss=0.013548, reg_loss=0.014582, lr=0.01030, time=2401.6 ms, rem=1.79 h
iter= 2330, img_loss=0.013540, reg_loss=0.014580, lr=0.01025, time=2402.5 ms, rem=1.78 h
iter= 2340, img_loss=0.013654, reg_loss=0.014582, lr=0.01021, time=2401.9 ms, rem=1.77 h
iter= 2350, img_loss=0.013523, reg_loss=0.014579, lr=0.01016, time=2401.6 ms, rem=1.77 h
iter= 2360, img_loss=0.013414, reg_loss=0.014579, lr=0.01011, time=2402.1 ms, rem=1.76 h
iter= 2370, img_loss=0.013568, reg_loss=0.014581, lr=0.01007, time=2401.6 ms, rem=1.75 h
iter= 2380, img_loss=0.013485, reg_loss=0.014582, lr=0.01002, time=2403.7 ms, rem=1.75 h
iter= 2390, img_loss=0.013393, reg_loss=0.014581, lr=0.00998, time=2402.7 ms, rem=1.74 h
iter= 2400, img_loss=0.013688, reg_loss=0.014583, lr=0.00993, time=2412.5 ms, rem=1.74 h
iter= 2410, img_loss=0.013464, reg_loss=0.014582, lr=0.00988, time=2514.3 ms, rem=1.81 h
iter= 2420, img_loss=0.013386, reg_loss=0.014583, lr=0.00984, time=2512.5 ms, rem=1.80 h
iter= 2430, img_loss=0.013505, reg_loss=0.014582, lr=0.00979, time=2512.1 ms, rem=1.79 h
iter= 2440, img_loss=0.013420, reg_loss=0.014581, lr=0.00975, time=2512.3 ms, rem=1.79 h
iter= 2450, img_loss=0.013539, reg_loss=0.014579, lr=0.00970, time=2511.9 ms, rem=1.78 h
iter= 2460, img_loss=0.013260, reg_loss=0.014577, lr=0.00966, time=2514.2 ms, rem=1.77 h
iter= 2470, img_loss=0.013340, reg_loss=0.014576, lr=0.00961, time=2513.8 ms, rem=1.77 h
iter= 2480, img_loss=0.013701, reg_loss=0.014578, lr=0.00957, time=2511.4 ms, rem=1.76 h
iter= 2490, img_loss=0.013271, reg_loss=0.014577, lr=0.00953, time=2514.3 ms, rem=1.75 h
iter= 2500, img_loss=0.013550, reg_loss=0.014579, lr=0.00948, time=2512.2 ms, rem=1.74 h
iter= 2510, img_loss=0.013346, reg_loss=0.014581, lr=0.00944, time=2502.9 ms, rem=1.73 h
iter= 2520, img_loss=0.013421, reg_loss=0.014578, lr=0.00940, time=2499.5 ms, rem=1.72 h
iter= 2530, img_loss=0.013379, reg_loss=0.014576, lr=0.00935, time=2503.9 ms, rem=1.72 h
iter= 2540, img_loss=0.013396, reg_loss=0.014578, lr=0.00931, time=2503.2 ms, rem=1.71 h
iter= 2550, img_loss=0.013479, reg_loss=0.014580, lr=0.00927, time=2497.8 ms, rem=1.70 h
iter= 2560, img_loss=0.013433, reg_loss=0.014578, lr=0.00922, time=2505.6 ms, rem=1.70 h
iter= 2570, img_loss=0.013264, reg_loss=0.014577, lr=0.00918, time=2505.3 ms, rem=1.69 h
iter= 2580, img_loss=0.013394, reg_loss=0.014577, lr=0.00914, time=2499.8 ms, rem=1.68 h
iter= 2590, img_loss=0.013423, reg_loss=0.014576, lr=0.00910, time=2503.4 ms, rem=1.68 h
iter= 2600, img_loss=0.013422, reg_loss=0.014573, lr=0.00906, time=2500.3 ms, rem=1.67 h
iter= 2610, img_loss=0.013530, reg_loss=0.014574, lr=0.00901, time=2484.4 ms, rem=1.65 h
iter= 2620, img_loss=0.013512, reg_loss=0.014574, lr=0.00897, time=2484.0 ms, rem=1.64 h
iter= 2630, img_loss=0.013375, reg_loss=0.014573, lr=0.00893, time=2486.0 ms, rem=1.64 h
iter= 2640, img_loss=0.013457, reg_loss=0.014574, lr=0.00889, time=2484.5 ms, rem=1.63 h
iter= 2650, img_loss=0.013615, reg_loss=0.014574, lr=0.00885, time=2483.4 ms, rem=1.62 h
iter= 2660, img_loss=0.013324, reg_loss=0.014575, lr=0.00881, time=2484.4 ms, rem=1.61 h
iter= 2670, img_loss=0.013495, reg_loss=0.014576, lr=0.00877, time=2485.1 ms, rem=1.61 h
iter= 2680, img_loss=0.013403, reg_loss=0.014572, lr=0.00873, time=2484.2 ms, rem=1.60 h
iter= 2690, img_loss=0.013318, reg_loss=0.014569, lr=0.00869, time=2486.5 ms, rem=1.60 h
iter= 2700, img_loss=0.013382, reg_loss=0.014567, lr=0.00865, time=2481.9 ms, rem=1.59 h
iter= 2710, img_loss=0.013343, reg_loss=0.014565, lr=0.00861, time=2456.5 ms, rem=1.56 h
iter= 2720, img_loss=0.013199, reg_loss=0.014564, lr=0.00857, time=2458.8 ms, rem=1.56 h
iter= 2730, img_loss=0.013394, reg_loss=0.014565, lr=0.00853, time=2457.5 ms, rem=1.55 h
iter= 2740, img_loss=0.013455, reg_loss=0.014566, lr=0.00849, time=2458.0 ms, rem=1.54 h
iter= 2750, img_loss=0.013573, reg_loss=0.014565, lr=0.00845, time=2457.5 ms, rem=1.54 h
iter= 2760, img_loss=0.013387, reg_loss=0.014562, lr=0.00841, time=2457.1 ms, rem=1.53 h
iter= 2770, img_loss=0.013549, reg_loss=0.014562, lr=0.00837, time=2456.3 ms, rem=1.52 h
iter= 2780, img_loss=0.013267, reg_loss=0.014561, lr=0.00834, time=2458.1 ms, rem=1.52 h
iter= 2790, img_loss=0.013466, reg_loss=0.014561, lr=0.00830, time=2457.0 ms, rem=1.51 h
iter= 2800, img_loss=0.013530, reg_loss=0.014563, lr=0.00826, time=2457.2 ms, rem=1.50 h
iter= 2810, img_loss=0.013319, reg_loss=0.014559, lr=0.00822, time=2490.1 ms, rem=1.51 h
iter= 2820, img_loss=0.013286, reg_loss=0.014560, lr=0.00818, time=2482.6 ms, rem=1.50 h
iter= 2830, img_loss=0.013085, reg_loss=0.014557, lr=0.00815, time=2483.1 ms, rem=1.50 h
iter= 2840, img_loss=0.013371, reg_loss=0.014558, lr=0.00811, time=2488.8 ms, rem=1.49 h
iter= 2850, img_loss=0.013249, reg_loss=0.014556, lr=0.00807, time=2481.4 ms, rem=1.48 h
iter= 2860, img_loss=0.013298, reg_loss=0.014555, lr=0.00803, time=2483.4 ms, rem=1.48 h
iter= 2870, img_loss=0.013436, reg_loss=0.014557, lr=0.00800, time=2488.4 ms, rem=1.47 h
iter= 2880, img_loss=0.013444, reg_loss=0.014558, lr=0.00796, time=2480.6 ms, rem=1.46 h
iter= 2890, img_loss=0.013022, reg_loss=0.014557, lr=0.00792, time=2484.5 ms, rem=1.46 h
iter= 2900, img_loss=0.013273, reg_loss=0.014557, lr=0.00789, time=2483.2 ms, rem=1.45 h
iter= 2910, img_loss=0.013137, reg_loss=0.014558, lr=0.00785, time=2480.9 ms, rem=1.44 h
iter= 2920, img_loss=0.013409, reg_loss=0.014556, lr=0.00781, time=2480.7 ms, rem=1.43 h
iter= 2930, img_loss=0.013433, reg_loss=0.014557, lr=0.00778, time=2477.6 ms, rem=1.42 h
iter= 2940, img_loss=0.013419, reg_loss=0.014553, lr=0.00774, time=2479.3 ms, rem=1.42 h
iter= 2950, img_loss=0.013327, reg_loss=0.014553, lr=0.00771, time=2480.7 ms, rem=1.41 h
iter= 2960, img_loss=0.013143, reg_loss=0.014553, lr=0.00767, time=2478.7 ms, rem=1.40 h
iter= 2970, img_loss=0.013222, reg_loss=0.014555, lr=0.00764, time=2480.8 ms, rem=1.40 h
iter= 2980, img_loss=0.013359, reg_loss=0.014553, lr=0.00760, time=2481.4 ms, rem=1.39 h
iter= 2990, img_loss=0.013338, reg_loss=0.014552, lr=0.00757, time=2479.3 ms, rem=1.38 h
iter= 3000, img_loss=0.013391, reg_loss=0.014552, lr=0.00753, time=2474.4 ms, rem=1.37 h
iter= 3010, img_loss=0.013194, reg_loss=0.014550, lr=0.00750, time=2435.0 ms, rem=1.35 h
iter= 3020, img_loss=0.013010, reg_loss=0.014550, lr=0.00746, time=2434.4 ms, rem=1.34 h
iter= 3030, img_loss=0.013203, reg_loss=0.014547, lr=0.00743, time=2435.1 ms, rem=1.33 h
iter= 3040, img_loss=0.013117, reg_loss=0.014546, lr=0.00739, time=2435.4 ms, rem=1.33 h
iter= 3050, img_loss=0.013216, reg_loss=0.014545, lr=0.00736, time=2436.0 ms, rem=1.32 h
iter= 3060, img_loss=0.013354, reg_loss=0.014544, lr=0.00733, time=2434.8 ms, rem=1.31 h
iter= 3070, img_loss=0.013138, reg_loss=0.014543, lr=0.00729, time=2437.1 ms, rem=1.31 h
iter= 3080, img_loss=0.013070, reg_loss=0.014542, lr=0.00726, time=2436.3 ms, rem=1.30 h
iter= 3090, img_loss=0.013029, reg_loss=0.014542, lr=0.00723, time=2435.4 ms, rem=1.29 h
iter= 3100, img_loss=0.013235, reg_loss=0.014541, lr=0.00719, time=2438.6 ms, rem=1.29 h
iter= 3110, img_loss=0.013164, reg_loss=0.014538, lr=0.00716, time=2463.7 ms, rem=1.29 h
iter= 3120, img_loss=0.013319, reg_loss=0.014539, lr=0.00713, time=2464.6 ms, rem=1.29 h
iter= 3130, img_loss=0.013284, reg_loss=0.014540, lr=0.00709, time=2464.6 ms, rem=1.28 h
iter= 3140, img_loss=0.013363, reg_loss=0.014540, lr=0.00706, time=2464.1 ms, rem=1.27 h
iter= 3150, img_loss=0.013192, reg_loss=0.014539, lr=0.00703, time=2464.9 ms, rem=1.27 h
iter= 3160, img_loss=0.013304, reg_loss=0.014541, lr=0.00700, time=2464.4 ms, rem=1.26 h
iter= 3170, img_loss=0.013242, reg_loss=0.014540, lr=0.00697, time=2464.0 ms, rem=1.25 h
iter= 3180, img_loss=0.013123, reg_loss=0.014539, lr=0.00693, time=2464.8 ms, rem=1.25 h
iter= 3190, img_loss=0.013088, reg_loss=0.014537, lr=0.00690, time=2463.9 ms, rem=1.24 h
iter= 3200, img_loss=0.013209, reg_loss=0.014537, lr=0.00687, time=2473.3 ms, rem=1.24 h
iter= 3210, img_loss=0.013170, reg_loss=0.014536, lr=0.00684, time=2560.7 ms, rem=1.27 h
iter= 3220, img_loss=0.012887, reg_loss=0.014535, lr=0.00681, time=2562.3 ms, rem=1.27 h
iter= 3230, img_loss=0.013232, reg_loss=0.014535, lr=0.00678, time=2559.5 ms, rem=1.26 h
iter= 3240, img_loss=0.013188, reg_loss=0.014533, lr=0.00674, time=2559.0 ms, rem=1.25 h
iter= 3250, img_loss=0.013129, reg_loss=0.014531, lr=0.00671, time=2558.7 ms, rem=1.24 h
iter= 3260, img_loss=0.013086, reg_loss=0.014529, lr=0.00668, time=2559.9 ms, rem=1.24 h
iter= 3270, img_loss=0.013179, reg_loss=0.014529, lr=0.00665, time=2560.0 ms, rem=1.23 h
iter= 3280, img_loss=0.013060, reg_loss=0.014528, lr=0.00662, time=2561.3 ms, rem=1.22 h
iter= 3290, img_loss=0.013143, reg_loss=0.014528, lr=0.00659, time=2561.0 ms, rem=1.22 h
iter= 3300, img_loss=0.013047, reg_loss=0.014529, lr=0.00656, time=2553.5 ms, rem=1.21 h
iter= 3310, img_loss=0.013270, reg_loss=0.014530, lr=0.00653, time=2490.2 ms, rem=1.17 h
iter= 3320, img_loss=0.013168, reg_loss=0.014529, lr=0.00650, time=2491.4 ms, rem=1.16 h
iter= 3330, img_loss=0.013220, reg_loss=0.014528, lr=0.00647, time=2492.4 ms, rem=1.16 h
iter= 3340, img_loss=0.013118, reg_loss=0.014525, lr=0.00644, time=2492.6 ms, rem=1.15 h
iter= 3350, img_loss=0.013060, reg_loss=0.014524, lr=0.00641, time=2491.0 ms, rem=1.14 h
iter= 3360, img_loss=0.012883, reg_loss=0.014520, lr=0.00638, time=2492.3 ms, rem=1.14 h
iter= 3370, img_loss=0.012964, reg_loss=0.014519, lr=0.00635, time=2494.0 ms, rem=1.13 h
iter= 3380, img_loss=0.013046, reg_loss=0.014518, lr=0.00632, time=2494.3 ms, rem=1.12 h
iter= 3390, img_loss=0.013318, reg_loss=0.014520, lr=0.00629, time=2491.6 ms, rem=1.11 h
iter= 3400, img_loss=0.013278, reg_loss=0.014519, lr=0.00627, time=2482.3 ms, rem=1.10 h
iter= 3410, img_loss=0.013147, reg_loss=0.014516, lr=0.00624, time=2408.5 ms, rem=1.06 h
iter= 3420, img_loss=0.013080, reg_loss=0.014519, lr=0.00621, time=2408.1 ms, rem=1.06 h
iter= 3430, img_loss=0.013095, reg_loss=0.014517, lr=0.00618, time=2407.7 ms, rem=1.05 h
iter= 3440, img_loss=0.013013, reg_loss=0.014515, lr=0.00615, time=2408.3 ms, rem=1.04 h
iter= 3450, img_loss=0.013189, reg_loss=0.014515, lr=0.00612, time=2408.0 ms, rem=1.04 h
iter= 3460, img_loss=0.013048, reg_loss=0.014515, lr=0.00609, time=2408.0 ms, rem=1.03 h
iter= 3470, img_loss=0.013194, reg_loss=0.014515, lr=0.00607, time=2406.7 ms, rem=1.02 h
iter= 3480, img_loss=0.013003, reg_loss=0.014513, lr=0.00604, time=2409.0 ms, rem=1.02 h
iter= 3490, img_loss=0.013175, reg_loss=0.014512, lr=0.00601, time=2407.8 ms, rem=1.01 h
iter= 3500, img_loss=0.013170, reg_loss=0.014513, lr=0.00598, time=2413.7 ms, rem=1.01 h
iter= 3510, img_loss=0.012920, reg_loss=0.014511, lr=0.00596, time=2461.5 ms, rem=1.02 h
iter= 3520, img_loss=0.013009, reg_loss=0.014512, lr=0.00593, time=2460.7 ms, rem=1.01 h
iter= 3530, img_loss=0.013069, reg_loss=0.014513, lr=0.00590, time=2460.0 ms, rem=1.00 h
iter= 3540, img_loss=0.013260, reg_loss=0.014513, lr=0.00587, time=2461.0 ms, rem=59.88 m
iter= 3550, img_loss=0.012981, reg_loss=0.014513, lr=0.00585, time=2461.2 ms, rem=59.48 m
iter= 3560, img_loss=0.013065, reg_loss=0.014512, lr=0.00582, time=2459.6 ms, rem=59.03 m
iter= 3570, img_loss=0.012980, reg_loss=0.014511, lr=0.00579, time=2460.9 ms, rem=58.65 m
iter= 3580, img_loss=0.013287, reg_loss=0.014511, lr=0.00577, time=2457.8 ms, rem=58.17 m
iter= 3590, img_loss=0.013124, reg_loss=0.014510, lr=0.00574, time=2459.7 ms, rem=57.80 m
iter= 3600, img_loss=0.013184, reg_loss=0.014510, lr=0.00571, time=2457.1 ms, rem=57.33 m
iter= 3610, img_loss=0.012742, reg_loss=0.014510, lr=0.00569, time=2442.0 ms, rem=56.57 m
iter= 3620, img_loss=0.013082, reg_loss=0.014511, lr=0.00566, time=2441.4 ms, rem=56.15 m
iter= 3630, img_loss=0.013063, reg_loss=0.014511, lr=0.00564, time=2441.4 ms, rem=55.75 m
iter= 3640, img_loss=0.012894, reg_loss=0.014509, lr=0.00561, time=2442.2 ms, rem=55.36 m
iter= 3650, img_loss=0.012920, reg_loss=0.014509, lr=0.00558, time=2441.8 ms, rem=54.94 m
iter= 3660, img_loss=0.013168, reg_loss=0.014509, lr=0.00556, time=2439.3 ms, rem=54.48 m
iter= 3670, img_loss=0.013088, reg_loss=0.014508, lr=0.00553, time=2440.7 ms, rem=54.10 m
iter= 3680, img_loss=0.013005, reg_loss=0.014506, lr=0.00551, time=2441.0 ms, rem=53.70 m
iter= 3690, img_loss=0.013196, reg_loss=0.014506, lr=0.00548, time=2439.1 ms, rem=53.25 m
iter= 3700, img_loss=0.013109, reg_loss=0.014506, lr=0.00546, time=2444.3 ms, rem=52.96 m
iter= 3710, img_loss=0.013252, reg_loss=0.014504, lr=0.00543, time=2489.7 ms, rem=53.53 m
iter= 3720, img_loss=0.012925, reg_loss=0.014504, lr=0.00541, time=2491.9 ms, rem=53.16 m
iter= 3730, img_loss=0.013148, reg_loss=0.014505, lr=0.00538, time=2492.1 ms, rem=52.75 m
iter= 3740, img_loss=0.013194, reg_loss=0.014505, lr=0.00536, time=2491.2 ms, rem=52.32 m
iter= 3750, img_loss=0.013355, reg_loss=0.014505, lr=0.00533, time=2492.0 ms, rem=51.92 m
iter= 3760, img_loss=0.013171, reg_loss=0.014505, lr=0.00531, time=2491.8 ms, rem=51.50 m
iter= 3770, img_loss=0.012949, reg_loss=0.014503, lr=0.00528, time=2491.8 ms, rem=51.08 m
iter= 3780, img_loss=0.012987, reg_loss=0.014502, lr=0.00526, time=2491.4 ms, rem=50.66 m
iter= 3790, img_loss=0.013172, reg_loss=0.014499, lr=0.00524, time=2493.2 ms, rem=50.28 m
iter= 3800, img_loss=0.013037, reg_loss=0.014500, lr=0.00521, time=2488.2 ms, rem=49.76 m
iter= 3810, img_loss=0.013081, reg_loss=0.014501, lr=0.00519, time=2453.5 ms, rem=48.66 m
iter= 3820, img_loss=0.013001, reg_loss=0.014500, lr=0.00516, time=2455.3 ms, rem=48.29 m
iter= 3830, img_loss=0.013162, reg_loss=0.014498, lr=0.00514, time=2454.0 ms, rem=47.85 m
iter= 3840, img_loss=0.013112, reg_loss=0.014498, lr=0.00512, time=2452.6 ms, rem=47.42 m
iter= 3850, img_loss=0.013151, reg_loss=0.014495, lr=0.00509, time=2454.3 ms, rem=47.04 m
iter= 3860, img_loss=0.013057, reg_loss=0.014493, lr=0.00507, time=2454.1 ms, rem=46.63 m
iter= 3870, img_loss=0.013160, reg_loss=0.014492, lr=0.00505, time=2453.8 ms, rem=46.21 m
iter= 3880, img_loss=0.012907, reg_loss=0.014489, lr=0.00502, time=2455.2 ms, rem=45.83 m
iter= 3890, img_loss=0.013057, reg_loss=0.014490, lr=0.00500, time=2454.1 ms, rem=45.40 m
iter= 3900, img_loss=0.012981, reg_loss=0.014487, lr=0.00498, time=2458.5 ms, rem=45.07 m
iter= 3910, img_loss=0.012926, reg_loss=0.014487, lr=0.00495, time=2501.8 ms, rem=45.45 m
iter= 3920, img_loss=0.013027, reg_loss=0.014486, lr=0.00493, time=2499.6 ms, rem=44.99 m
iter= 3930, img_loss=0.013034, reg_loss=0.014488, lr=0.00491, time=2499.5 ms, rem=44.57 m
iter= 3940, img_loss=0.012723, reg_loss=0.014486, lr=0.00489, time=2501.9 ms, rem=44.20 m
iter= 3950, img_loss=0.012871, reg_loss=0.014486, lr=0.00486, time=2499.7 ms, rem=43.74 m
iter= 3960, img_loss=0.013024, reg_loss=0.014484, lr=0.00484, time=2502.1 ms, rem=43.37 m
iter= 3970, img_loss=0.013130, reg_loss=0.014484, lr=0.00482, time=2498.7 ms, rem=42.90 m
iter= 3980, img_loss=0.012826, reg_loss=0.014481, lr=0.00480, time=2501.2 ms, rem=42.52 m
iter= 3990, img_loss=0.013021, reg_loss=0.014480, lr=0.00477, time=2500.0 ms, rem=42.08 m
iter= 4000, img_loss=0.012953, reg_loss=0.014478, lr=0.00475, time=2505.9 ms, rem=41.76 m
iter= 4010, img_loss=0.012944, reg_loss=0.014477, lr=0.00473, time=2559.2 ms, rem=42.23 m
iter= 4020, img_loss=0.012784, reg_loss=0.014479, lr=0.00471, time=2558.5 ms, rem=41.79 m
iter= 4030, img_loss=0.012969, reg_loss=0.014481, lr=0.00469, time=2557.5 ms, rem=41.35 m
iter= 4040, img_loss=0.013055, reg_loss=0.014480, lr=0.00467, time=2556.4 ms, rem=40.90 m
iter= 4050, img_loss=0.012826, reg_loss=0.014481, lr=0.00464, time=2557.0 ms, rem=40.49 m
iter= 4060, img_loss=0.012971, reg_loss=0.014480, lr=0.00462, time=2555.5 ms, rem=40.04 m
iter= 4070, img_loss=0.012982, reg_loss=0.014481, lr=0.00460, time=2556.5 ms, rem=39.63 m
iter= 4080, img_loss=0.012948, reg_loss=0.014480, lr=0.00458, time=2557.5 ms, rem=39.22 m
iter= 4090, img_loss=0.013134, reg_loss=0.014480, lr=0.00456, time=2555.4 ms, rem=38.76 m
iter= 4100, img_loss=0.012903, reg_loss=0.014479, lr=0.00454, time=2549.6 ms, rem=38.24 m
iter= 4110, img_loss=0.013042, reg_loss=0.014478, lr=0.00452, time=2461.4 ms, rem=36.51 m
iter= 4120, img_loss=0.013081, reg_loss=0.014478, lr=0.00450, time=2460.2 ms, rem=36.08 m
iter= 4130, img_loss=0.012952, reg_loss=0.014476, lr=0.00448, time=2466.6 ms, rem=35.77 m
iter= 4140, img_loss=0.013011, reg_loss=0.014476, lr=0.00446, time=2461.2 ms, rem=35.28 m
iter= 4150, img_loss=0.012998, reg_loss=0.014474, lr=0.00444, time=2461.6 ms, rem=34.87 m
iter= 4160, img_loss=0.013169, reg_loss=0.014473, lr=0.00441, time=2465.0 ms, rem=34.51 m
iter= 4170, img_loss=0.012834, reg_loss=0.014473, lr=0.00439, time=2462.5 ms, rem=34.06 m
iter= 4180, img_loss=0.012968, reg_loss=0.014471, lr=0.00437, time=2462.8 ms, rem=33.66 m
iter= 4190, img_loss=0.012947, reg_loss=0.014471, lr=0.00435, time=2466.1 ms, rem=33.29 m
iter= 4200, img_loss=0.012793, reg_loss=0.014468, lr=0.00433, time=2471.0 ms, rem=32.95 m
iter= 4210, img_loss=0.012839, reg_loss=0.014466, lr=0.00431, time=2529.1 ms, rem=33.30 m
iter= 4220, img_loss=0.012797, reg_loss=0.014466, lr=0.00429, time=2528.2 ms, rem=32.87 m
iter= 4230, img_loss=0.012777, reg_loss=0.014462, lr=0.00427, time=2529.6 ms, rem=32.46 m
iter= 4240, img_loss=0.012932, reg_loss=0.014463, lr=0.00426, time=2527.9 ms, rem=32.02 m
iter= 4250, img_loss=0.012847, reg_loss=0.014462, lr=0.00424, time=2528.2 ms, rem=31.60 m
iter= 4260, img_loss=0.012872, reg_loss=0.014461, lr=0.00422, time=2528.1 ms, rem=31.18 m
iter= 4270, img_loss=0.013095, reg_loss=0.014461, lr=0.00420, time=2526.6 ms, rem=30.74 m
iter= 4280, img_loss=0.013014, reg_loss=0.014460, lr=0.00418, time=2527.9 ms, rem=30.33 m
iter= 4290, img_loss=0.012973, reg_loss=0.014459, lr=0.00416, time=2528.3 ms, rem=29.92 m
iter= 4300, img_loss=0.013040, reg_loss=0.014459, lr=0.00414, time=2518.1 ms, rem=29.38 m
iter= 4310, img_loss=0.012909, reg_loss=0.014459, lr=0.00412, time=2437.5 ms, rem=28.03 m
iter= 4320, img_loss=0.012994, reg_loss=0.014461, lr=0.00410, time=2434.0 ms, rem=27.59 m
iter= 4330, img_loss=0.012974, reg_loss=0.014462, lr=0.00408, time=2434.5 ms, rem=27.18 m
iter= 4340, img_loss=0.013121, reg_loss=0.014462, lr=0.00406, time=2433.9 ms, rem=26.77 m
iter= 4350, img_loss=0.012894, reg_loss=0.014461, lr=0.00405, time=2434.5 ms, rem=26.37 m
iter= 4360, img_loss=0.012896, reg_loss=0.014460, lr=0.00403, time=2435.8 ms, rem=25.98 m
iter= 4370, img_loss=0.012794, reg_loss=0.014462, lr=0.00401, time=2434.4 ms, rem=25.56 m
iter= 4380, img_loss=0.012944, reg_loss=0.014462, lr=0.00399, time=2434.1 ms, rem=25.15 m
iter= 4390, img_loss=0.012998, reg_loss=0.014461, lr=0.00397, time=2433.5 ms, rem=24.74 m
iter= 4400, img_loss=0.013111, reg_loss=0.014462, lr=0.00395, time=2432.3 ms, rem=24.32 m
iter= 4410, img_loss=0.012717, reg_loss=0.014459, lr=0.00393, time=2503.6 ms, rem=24.62 m
iter= 4420, img_loss=0.012882, reg_loss=0.014459, lr=0.00392, time=2504.3 ms, rem=24.21 m
iter= 4430, img_loss=0.012627, reg_loss=0.014456, lr=0.00390, time=2493.7 ms, rem=23.69 m
iter= 4440, img_loss=0.012812, reg_loss=0.014455, lr=0.00388, time=2502.0 ms, rem=23.35 m
iter= 4450, img_loss=0.012801, reg_loss=0.014453, lr=0.00386, time=2504.9 ms, rem=22.96 m
iter= 4460, img_loss=0.012834, reg_loss=0.014453, lr=0.00385, time=2491.0 ms, rem=22.42 m
iter= 4470, img_loss=0.013020, reg_loss=0.014454, lr=0.00383, time=2499.3 ms, rem=22.08 m
iter= 4480, img_loss=0.012794, reg_loss=0.014452, lr=0.00381, time=2505.1 ms, rem=21.71 m
iter= 4490, img_loss=0.012845, reg_loss=0.014452, lr=0.00379, time=2493.8 ms, rem=21.20 m
iter= 4500, img_loss=0.012976, reg_loss=0.014452, lr=0.00378, time=2488.4 ms, rem=20.74 m
iter= 4510, img_loss=0.013032, reg_loss=0.014451, lr=0.00376, time=2414.6 ms, rem=19.72 m
iter= 4520, img_loss=0.012810, reg_loss=0.014450, lr=0.00374, time=2413.1 ms, rem=19.31 m
iter= 4530, img_loss=0.012807, reg_loss=0.014449, lr=0.00372, time=2412.4 ms, rem=18.90 m
iter= 4540, img_loss=0.013053, reg_loss=0.014449, lr=0.00371, time=2414.8 ms, rem=18.51 m
iter= 4550, img_loss=0.013005, reg_loss=0.014448, lr=0.00369, time=2412.7 ms, rem=18.10 m
iter= 4560, img_loss=0.012966, reg_loss=0.014446, lr=0.00367, time=2411.6 ms, rem=17.68 m
iter= 4570, img_loss=0.012885, reg_loss=0.014443, lr=0.00366, time=2415.1 ms, rem=17.31 m
iter= 4580, img_loss=0.012918, reg_loss=0.014443, lr=0.00364, time=2413.6 ms, rem=16.90 m
iter= 4590, img_loss=0.013019, reg_loss=0.014446, lr=0.00362, time=2409.1 ms, rem=16.46 m
iter= 4600, img_loss=0.012923, reg_loss=0.014446, lr=0.00361, time=2415.9 ms, rem=16.11 m
iter= 4610, img_loss=0.012699, reg_loss=0.014441, lr=0.00359, time=2450.2 ms, rem=15.93 m
iter= 4620, img_loss=0.012964, reg_loss=0.014440, lr=0.00357, time=2479.7 ms, rem=15.71 m
iter= 4630, img_loss=0.012828, reg_loss=0.014438, lr=0.00356, time=2489.9 ms, rem=15.35 m
iter= 4640, img_loss=0.012871, reg_loss=0.014434, lr=0.00354, time=2489.1 ms, rem=14.93 m
iter= 4650, img_loss=0.012889, reg_loss=0.014431, lr=0.00352, time=2489.9 ms, rem=14.52 m
iter= 4660, img_loss=0.012802, reg_loss=0.014430, lr=0.00351, time=2490.6 ms, rem=14.11 m
iter= 4670, img_loss=0.012676, reg_loss=0.014431, lr=0.00349, time=2491.2 ms, rem=13.70 m
iter= 4680, img_loss=0.012784, reg_loss=0.014431, lr=0.00347, time=2484.7 ms, rem=13.25 m
iter= 4690, img_loss=0.012722, reg_loss=0.014431, lr=0.00346, time=2457.6 ms, rem=12.70 m
iter= 4700, img_loss=0.012858, reg_loss=0.014430, lr=0.00344, time=2454.1 ms, rem=12.27 m
iter= 4710, img_loss=0.012900, reg_loss=0.014429, lr=0.00343, time=2470.8 ms, rem=11.94 m
iter= 4720, img_loss=0.012687, reg_loss=0.014428, lr=0.00341, time=2472.1 ms, rem=11.54 m
iter= 4730, img_loss=0.012914, reg_loss=0.014428, lr=0.00340, time=2471.3 ms, rem=11.12 m
iter= 4740, img_loss=0.012671, reg_loss=0.014427, lr=0.00338, time=2472.5 ms, rem=10.71 m
iter= 4750, img_loss=0.012742, reg_loss=0.014427, lr=0.00336, time=2469.7 ms, rem=10.29 m
iter= 4760, img_loss=0.012890, reg_loss=0.014426, lr=0.00335, time=2470.5 ms, rem=9.88 m
iter= 4770, img_loss=0.012846, reg_loss=0.014426, lr=0.00333, time=2470.9 ms, rem=9.47 m
iter= 4780, img_loss=0.012891, reg_loss=0.014426, lr=0.00332, time=2469.6 ms, rem=9.06 m
iter= 4790, img_loss=0.012802, reg_loss=0.014425, lr=0.00330, time=2471.2 ms, rem=8.65 m
iter= 4800, img_loss=0.012598, reg_loss=0.014423, lr=0.00329, time=2471.7 ms, rem=8.24 m
iter= 4810, img_loss=0.012608, reg_loss=0.014421, lr=0.00327, time=2496.7 ms, rem=7.91 m
iter= 4820, img_loss=0.012789, reg_loss=0.014421, lr=0.00326, time=2494.8 ms, rem=7.48 m
iter= 4830, img_loss=0.013096, reg_loss=0.014421, lr=0.00324, time=2488.5 ms, rem=7.05 m
iter= 4840, img_loss=0.012857, reg_loss=0.014419, lr=0.00323, time=2495.2 ms, rem=6.65 m
iter= 4850, img_loss=0.012830, reg_loss=0.014420, lr=0.00321, time=2494.4 ms, rem=6.24 m
iter= 4860, img_loss=0.012790, reg_loss=0.014419, lr=0.00320, time=2491.2 ms, rem=5.81 m
iter= 4870, img_loss=0.012706, reg_loss=0.014417, lr=0.00318, time=2496.2 ms, rem=5.41 m
iter= 4880, img_loss=0.012696, reg_loss=0.014416, lr=0.00317, time=2497.3 ms, rem=4.99 m
iter= 4890, img_loss=0.012837, reg_loss=0.014416, lr=0.00315, time=2492.2 ms, rem=4.57 m
iter= 4900, img_loss=0.012751, reg_loss=0.014416, lr=0.00314, time=2489.1 ms, rem=4.15 m
iter= 4910, img_loss=0.012520, reg_loss=0.014414, lr=0.00313, time=2433.9 ms, rem=3.65 m
iter= 4920, img_loss=0.012658, reg_loss=0.014413, lr=0.00311, time=2432.5 ms, rem=3.24 m
iter= 4930, img_loss=0.012594, reg_loss=0.014413, lr=0.00310, time=2433.3 ms, rem=2.84 m
iter= 4940, img_loss=0.012496, reg_loss=0.014411, lr=0.00308, time=2435.8 ms, rem=2.44 m
iter= 4950, img_loss=0.012659, reg_loss=0.014412, lr=0.00307, time=2433.0 ms, rem=2.03 m
iter= 4960, img_loss=0.012712, reg_loss=0.014413, lr=0.00305, time=2431.6 ms, rem=1.62 m
iter= 4970, img_loss=0.012754, reg_loss=0.014411, lr=0.00304, time=2432.1 ms, rem=1.22 m
iter= 4980, img_loss=0.012761, reg_loss=0.014409, lr=0.00303, time=2432.2 ms, rem=48.64 s
iter= 4990, img_loss=0.012715, reg_loss=0.014408, lr=0.00301, time=2431.4 ms, rem=24.31 s
iter= 5000, img_loss=0.012677, reg_loss=0.014408, lr=0.00300, time=2435.6 ms, rem=0.00 s
Running validation
MSE,      PSNR
0.00344770, 24.667
Base mesh has 39488 triangles and 19860 vertices.
Writing mesh:  out/nerf_ficus/dmtet_mesh/mesh.obj
    writing 19860 vertices
    writing 35061 texcoords
    writing 19860 normals
    writing 39488 faces
Writing material:  out/nerf_ficus/dmtet_mesh/mesh.mtl
Done exporting mesh
Traceback (most recent call last):
  File "train.py", line 631, in <module>
    geometry, mat = optimize_mesh(glctx, geometry, base_mesh.material, lgt, dataset_train, dataset_validate, FLAGS, 
  File "train.py", line 420, in optimize_mesh
    img_loss, reg_loss = trainer(target, it)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1131, in _call_impl
    return forward_call(*input, **kwargs)
  File "train.py", line 300, in forward
    return self.geometry.tick(glctx, target, self.light, self.material, self.image_loss_fn, it)
  File "/netscratch/smishra/nvdiffrec/geometry/dlmesh.py", line 56, in tick
    buffers = self.render(glctx, target, lgt, opt_material)
  File "/netscratch/smishra/nvdiffrec/geometry/dlmesh.py", line 48, in render
    return render.render_mesh(glctx, opt_mesh, target['mvp'], target['campos'], lgt, target['resolution'], spp=target['spp'], 
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 245, in render_mesh
    accum = composite_buffer(key, layers, background, True)
  File "/netscratch/smishra/nvdiffrec/render/render.py", line 208, in composite_buffer
    alpha = (rast[..., -1:] > 0).float() * buffers[key][..., -1:]
RuntimeError: CUDA out of memory. Tried to allocate 80.00 MiB (GPU 0; 79.15 GiB total capacity; 70.23 GiB already allocated; 35.69 MiB free; 70.81 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
srun: error: serv-3333: task 0: Exited with exit code 1
srun: launch/slurm: _step_signal: Terminating StepId=862972.0
